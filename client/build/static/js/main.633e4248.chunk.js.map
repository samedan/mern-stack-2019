{"version":3,"sources":["components/layout/spinner.gif","components/withSplashScreen.js","actions/alert.js","actions/types.js","utils/setAuthToken.js","actions/auth.js","actions/backend.js","components/layout/Navbar.js","components/layout/Landing.js","components/auth/Register.js","components/auth/Login.js","components/layout/Alert.js","actions/profile.js","components/dashboard/DashboardActions.js","components/dashboard/Experience.js","components/dashboard/Education.js","components/layout/Spinner.js","components/dashboard/Dashboard.js","components/routing/PrivateRoute.js","components/profile-form/EditProfile.js","components/profile-form/AddExperience.js","components/profile/ProfileTop.js","components/profile/ProfileAbout.js","components/profile/ProfileExperience.js","components/profile/ProfileEducation.js","components/profile/ProfileGithub.js","components/profile/Profile.js","components/profile-form/AddEducation.js","components/profile-form/CreateProfile.js","components/profiles/ProfileItem.js","components/profiles/Profiles.js","components/posts/PostItem.js","actions/post.js","components/posts/PostForm.js","components/posts/Posts.js","components/post/CommentForm.js","components/post/CommentItem.js","components/post/Post.js","reducers/alert.js","reducers/auth.js","reducers/profile.js","reducers/post.js","reducers/index.js","store.js","App.js","index.js"],"names":["module","exports","__webpack_require__","p","withSplashScreen","WrappedComponent","_Component","_class","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","loading","inherits","createClass","key","value","_componentDidMount","asyncToGenerator","regenerator_default","a","mark","_callee","_this2","wrap","_context","prev","next","setTimeout","setState","err","console","log","stop","apply","arguments","react_default","createElement","className","Component","setAlert","msg","alertType","timeout","length","undefined","dispatch","id","uuid","v4","type","payload","setAuthToken","token","axios","defaults","headers","common","loadUser","_ref","res","localStorage","get","sent","concat","data","t0","_x","connect","auth","logout","_ref5","_callee4","_context4","_x4","_ref$auth","isAuthenticated","authLinks","react_router_dom","to","onClick","href","guestLinks","react","Landing","register","_ref2","name","email","password","_ref3","_callee2","config","body","errors","_context2","Content-Type","JSON","stringify","post","response","forEach","error","_x2","_useState","useState","password2","_useState2","slicedToArray","formData","setFormData","onChange","e","objectSpread","defineProperty","target","onSubmit","preventDefault","react_router","placeholder","required","minLength","login","_ref4","_callee3","_context3","Access-Control-Allow-Origin","_x3","alerts","alert","map","getCurrentProfile","statusText","status","createProfile","history","edit","_callee5","_context5","push","_x5","DashboardActions","deleteExperience","_ref8","_callee8","_context8","delete","_x8","experience","experiences","exp","_id","company","title","dist_default","format","from","deleteEducation","_ref9","_callee9","_context9","_x9","education","educations","edu","school","degreee","Spinner","src","spinner","style","width","margin","display","alt","profile","deleteAccount","_ref10","_callee10","_context10","window","confirm","_x10","user","_ref$profile","useEffect","dashboard_DashboardActions","dashboard_Experience","dashboard_Education","component","rest","objectWithoutProperties","assign","render","withRouter","website","location","skills","githubusername","bio","twitter","facebook","linkedin","youtube","instagram","_useState3","_useState4","displaySocialInputs","toggleSocialInputs","join","social","addExperience","_ref6","_callee6","_context6","put","_x6","current","description","toDateDisabled","toggleDisabled","checked","disabled","cols","rows","ProfileTop","_ref$profile$user","avatar","rel","ProfileAbout","trim","split","skill","index","ProfileExperience","_ref$experience","ProfileEducation","_ref$education","degree","fieldofstudy","repos","getGithubRepos","username","repo","html_url","stargazers_count","watchers_count","forks_count","getProfileById","userId","match","params","profile_ProfileTop","profile_ProfileAbout","profile_ProfileExperience","profile_ProfileEducation","profile_ProfileGithub","addEducation","_ref7","_callee7","_context7","_x7","ProfileItem","slice","getProfiles","profiles","profiles_ProfileItem","PostItem","addLike","removeLike","deletePost","_ref$post","text","likes","comments","date","showActions","defaultProps","addPost","setText","getPosts","posts","posts_PostForm","posts_PostItem","addComment","postId","deleteComment","commentId","_ref$comment","comment","fromat","getPost","post_CommentForm","post_CommentItem","initialState","getItem","combineReducers","action","toConsumableArray","filter","setItem","removeItem","middleware","thunk","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","es","layout_Navbar","exact","path","layout_Alert","Register","Login","Profiles","Profile","routing_PrivateRoute","Dashboard","CreateProfile","EditProfile","AddExperience","AddEducation","Posts","Post","ReactDOM","src_App_0","document","getElementById"],"mappings":"4EAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,oQCgDzBC,MAnCf,SAA0BC,GACxB,gBAAAC,GACE,SAAAC,EAAYC,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,IACjBE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAH,GAAAQ,KAAAH,KAAMJ,KACDQ,MAAQ,CACXC,SAAS,GAHMR,EADrB,OAAAC,OAAAQ,EAAA,EAAAR,CAAAH,EAAAD,GAAAI,OAAAS,EAAA,EAAAT,CAAAH,EAAA,EAAAa,IAAA,oBAAAC,MAAA,eAAAC,EAAAZ,OAAAa,EAAA,EAAAb,CAAAc,EAAAC,EAAAC,KAAA,SAAAC,IAAA,IAAAC,EAAAhB,KAAA,OAAAY,EAAAC,EAAAI,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OASI,IAEEC,WAAW,WACTL,EAAKM,SAAS,CACZjB,SAAS,KAEV,MACH,MAAOkB,GACPC,QAAQC,IAAIF,GACZvB,KAAKsB,SAAS,CACZjB,SAAS,IAnBjB,wBAAAa,EAAAQ,SAAAX,EAAAf,SAAA,yBAAAU,EAAAiB,MAAA3B,KAAA4B,YAAA,KAAApB,IAAA,SAAAC,MAAA,WA0BI,OAAIT,KAAKI,MAAMC,QAlCjBwB,EAAAhB,EAAAiB,cAAA,OAAKC,UAAU,iBAAf,wCAEEF,EAAAhB,EAAAiB,cAAA,OAAKC,UAAU,eAAf,MAmCOF,EAAAhB,EAAAiB,cAACrC,EAAqBO,KAAKJ,WA7BtCD,EAAA,CAAqBqC,qECXVC,EAAW,SAACC,EAAKC,GAAN,IAAiBC,EAAjBR,UAAAS,OAAA,QAAAC,IAAAV,UAAA,GAAAA,UAAA,GAA2B,IAA3B,OAAoC,SAAAW,GAC1D,IAAMC,EAAKC,IAAKC,KAChBH,EAAS,CACPI,KCNqB,YDOrBC,QAAS,CAAEV,MAAKC,YAAWK,QAG7BnB,WAAW,kBAAMkB,EAAS,CAAEI,KCTF,eDSsBC,QAASJ,KAAOJ,KECnDS,EATM,SAAAC,GACfA,GACFtB,QAAQC,IAAI,UAAUqB,OACtBC,IAAMC,SAASC,QAAQC,OAAO,gBAAkBJ,UAEzCC,IAAMC,SAASC,QAAQC,OAAO,iBCS5BC,EAAW,iCAAAC,EAAAtD,OAAAa,EAAA,EAAAb,CAAAc,EAAAC,EAAAC,KAAM,SAAAC,EAAMwB,GAAN,IAAAc,EAAA,OAAAzC,EAAAC,EAAAI,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cACxBkC,aAAaR,OACfD,EAAaS,aAAaR,OAFA5B,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAMR2B,IAAMQ,IAAN,sDANQ,OAMpBF,EANoBnC,EAAAsC,KAS1BhC,QAAQC,IAAR,GAAAgC,OCvBF,4CDwBElB,EAAS,CACPI,KFvBqB,cEyBrBC,QAASS,EAAIK,OAbWxC,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAyC,GAAAzC,EAAA,SAgB1BqB,EAAS,CACPI,KF5BoB,eEWI,yBAAAzB,EAAAQ,SAAAX,EAAA,iBAAN,gBAAA6C,GAAA,OAAAR,EAAAzB,MAAA3B,KAAA4B,YAAA,IEqDTiC,cAJS,SAAAzD,GAAK,MAAK,CAChC0D,KAAM1D,EAAM0D,OAKZ,CAAEC,OFoCkB,iCAAAC,EAAAlE,OAAAa,EAAA,EAAAb,CAAAc,EAAAC,EAAAC,KAAM,SAAAmD,EAAM1B,GAAN,OAAA3B,EAAAC,EAAAI,KAAA,SAAAiD,GAAA,cAAAA,EAAA/C,KAAA+C,EAAA9C,MAAA,OAC1BmB,EAAS,CAAEI,KFhGgB,kBEiG3BJ,EAAS,CAAEI,KFrGS,WEmGM,wBAAAuB,EAAAxC,SAAAuC,MAAN,gBAAAE,GAAA,OAAAH,EAAArC,MAAA3B,KAAA4B,YAAA,KEtCPiC,CA/DA,SAAAT,GAAoD,IAAAgB,EAAAhB,EAAjDU,KAAQO,EAAyCD,EAAzCC,gBAAiBhE,EAAwB+D,EAAxB/D,QAAW0D,EAAaX,EAAbW,OAC9CO,EACJzC,EAAAhB,EAAAiB,cAAA,UACED,EAAAhB,EAAAiB,cAAA,UACED,EAAAhB,EAAAiB,cAACyC,EAAA,EAAD,CAAMC,GAAG,aAAT,eAEF3C,EAAAhB,EAAAiB,cAAA,UACED,EAAAhB,EAAAiB,cAACyC,EAAA,EAAD,CAAMC,GAAG,UAAT,UAEF3C,EAAAhB,EAAAiB,cAAA,UACED,EAAAhB,EAAAiB,cAACyC,EAAA,EAAD,CAAMC,GAAG,cACP3C,EAAAhB,EAAAiB,cAAA,KAAGC,UAAU,gBACbF,EAAAhB,EAAAiB,cAAA,QAAMC,UAAU,WAAhB,eAGJF,EAAAhB,EAAAiB,cAAA,UACED,EAAAhB,EAAAiB,cAAA,KAAG2C,QAASV,EAAQW,KAAK,MACvB7C,EAAAhB,EAAAiB,cAAA,KAAGC,UAAU,wBACbF,EAAAhB,EAAAiB,cAAA,QAAMC,UAAU,WAAhB,aAMF4C,EACJ9C,EAAAhB,EAAAiB,cAAA,UACED,EAAAhB,EAAAiB,cAAA,UACED,EAAAhB,EAAAiB,cAACyC,EAAA,EAAD,CAAMC,GAAG,aAAT,eAEF3C,EAAAhB,EAAAiB,cAAA,UACED,EAAAhB,EAAAiB,cAACyC,EAAA,EAAD,CAAMC,GAAG,aAAT,aAEF3C,EAAAhB,EAAAiB,cAAA,UACED,EAAAhB,EAAAiB,cAACyC,EAAA,EAAD,CAAMC,GAAG,UAAT,WAKN,OACE3C,EAAAhB,EAAAiB,cAAA,OAAKC,UAAU,kBACbF,EAAAhB,EAAAiB,cAAA,UACED,EAAAhB,EAAAiB,cAACyC,EAAA,EAAD,CAAMC,GAAG,KACP3C,EAAAhB,EAAAiB,cAAA,KAAGC,UAAU,gBADf,mBAIA1B,GACAwB,EAAAhB,EAAAiB,cAAC8C,EAAA,SAAD,KAAWP,EAAkBC,EAAYK,EAAzC,QCvBOE,EA1BC,SAAAjF,GACd,OACEiC,EAAAhB,EAAAiB,cAAA,WAASC,UAAU,WACjBF,EAAAhB,EAAAiB,cAAA,OAAKC,UAAU,gBACbF,EAAAhB,EAAAiB,cAAA,OAAKC,UAAU,iBACbF,EAAAhB,EAAAiB,cAAA,MAAIC,UAAU,WAAd,uBACAF,EAAAhB,EAAAiB,cAAA,KAAGC,UAAU,QAAb,wFAIAF,EAAAhB,EAAAiB,cAAA,OAAKC,UAAU,WACbF,EAAAhB,EAAAiB,cAACyC,EAAA,EAAD,CAAMC,GAAG,YAAYzC,UAAU,mBAA/B,WAGAF,EAAAhB,EAAAiB,cAACyC,EAAA,EAAD,CAAMC,GAAG,SAASzC,UAAU,iBAA5B,4CC4FG8B,cAJS,SAAAzD,GAAK,MAAK,CAChCiE,gBAAiBjE,EAAM0D,KAAKO,kBAK5B,CAAEpC,WAAU6C,SJxEU,SAAAC,GAAA,IAAGC,EAAHD,EAAGC,KAAMC,EAATF,EAASE,MAAOC,EAAhBH,EAAgBG,SAAhB,sBAAAC,EAAArF,OAAAa,EAAA,EAAAb,CAAAc,EAAAC,EAAAC,KAA+B,SAAAsE,EAAM7C,GAAN,IAAA8C,EAAAC,EAAAjC,EAAAkC,EAAA,OAAA3E,EAAAC,EAAAI,KAAA,SAAAuE,GAAA,cAAAA,EAAArE,KAAAqE,EAAApE,MAAA,cAC/CiE,EAAS,CACbpC,QAAS,CACPwC,eAAgB,qBAIdH,EAAOI,KAAKC,UAAU,CAAEX,OAAMC,QAAOC,aAPUM,EAAArE,KAAA,EAAAqE,EAAApE,KAAA,EAUjC2B,IAAM6C,KAAN,sDAEhBN,EACAD,GAbiD,OAU7ChC,EAV6CmC,EAAAhC,KAenDjB,EAAS,CACPI,KFrD0B,mBEsD1BC,QAASS,EAAIK,OAEfnB,EAASY,KAnB0CqC,EAAApE,KAAA,iBAAAoE,EAAArE,KAAA,GAAAqE,EAAA7B,GAAA6B,EAAA,UAqB7CD,EAASC,EAAA7B,GAAIkC,SAASnC,KAAK6B,SAG/BA,EAAOO,QAAQ,SAAAC,GAAK,OAAIxD,EAASN,EAAS8D,EAAM7D,IAAK,aAEvDK,EAAS,CACPI,KF/DuB,kBEoC0B,yBAAA6C,EAAA9D,SAAA0D,EAAA,kBAA/B,gBAAAY,GAAA,OAAAb,EAAAxD,MAAA3B,KAAA4B,YAAA,KIsETiC,CArGE,SAAAT,GAA6C,IAA1CnB,EAA0CmB,EAA1CnB,SAAU6C,EAAgC1B,EAAhC0B,SAAUT,EAAsBjB,EAAtBiB,gBAAsB4B,EAE5BC,mBAAS,CACvClB,KAAM,GACNC,MAAO,GACPC,SAAU,GACViB,UAAW,KAN+CC,EAAAtG,OAAAuG,EAAA,EAAAvG,CAAAmG,EAAA,GAErDK,EAFqDF,EAAA,GAE3CG,EAF2CH,EAAA,GASpDpB,EAAqCsB,EAArCtB,KAAMC,EAA+BqB,EAA/BrB,MAAOC,EAAwBoB,EAAxBpB,SAAUiB,EAAcG,EAAdH,UAEzBK,EAAW,SAAAC,GAAC,OAChBF,EAAYzG,OAAA4G,EAAA,EAAA5G,CAAA,GACPwG,EADMxG,OAAA6G,EAAA,EAAA7G,CAAA,GAER2G,EAAEG,OAAO5B,KAAOyB,EAAEG,OAAOnG,UAGxBoG,EAAQ,eAAA9B,EAAAjF,OAAAa,EAAA,EAAAb,CAAAc,EAAAC,EAAAC,KAAG,SAAAC,EAAM0F,GAAN,OAAA7F,EAAAC,EAAAI,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OACfqF,EAAEK,iBACE5B,IAAaiB,EACflE,EAAS,yBAA0B,UAEnC6C,EAAS,CAAEE,OAAMC,QAAOC,aALX,wBAAAhE,EAAAQ,SAAAX,MAAH,gBAAA6C,GAAA,OAAAmB,EAAApD,MAAA3B,KAAA4B,YAAA,GASd,OAAIyC,EACKxC,EAAAhB,EAAAiB,cAACiF,EAAA,EAAD,CAAUvC,GAAG,eAIpB3C,EAAAhB,EAAAiB,cAAC8C,EAAA,SAAD,KACE/C,EAAAhB,EAAAiB,cAAA,MAAIC,UAAU,sBAAd,WACAF,EAAAhB,EAAAiB,cAAA,KAAGC,UAAU,QACXF,EAAAhB,EAAAiB,cAAA,KAAGC,UAAU,gBADf,wBAGAF,EAAAhB,EAAAiB,cAAA,QAAMC,UAAU,OAAO8E,SAAU,SAAAJ,GAAC,OAAII,EAASJ,KAC7C5E,EAAAhB,EAAAiB,cAAA,OAAKC,UAAU,cACbF,EAAAhB,EAAAiB,cAAA,SACEa,KAAK,OACLqE,YAAY,OACZhC,KAAK,OACLvE,MAAOuE,EACPwB,SAAU,SAAAC,GAAC,OAAID,EAASC,IACxBQ,UAAQ,KAGZpF,EAAAhB,EAAAiB,cAAA,OAAKC,UAAU,cACbF,EAAAhB,EAAAiB,cAAA,SACEa,KAAK,QACLqE,YAAY,gBACZhC,KAAK,QACLvE,MAAOwE,EACPuB,SAAU,SAAAC,GAAC,OAAID,EAASC,IACxBQ,UAAQ,IAEVpF,EAAAhB,EAAAiB,cAAA,SAAOC,UAAU,aAAjB,iFAKFF,EAAAhB,EAAAiB,cAAA,OAAKC,UAAU,cACbF,EAAAhB,EAAAiB,cAAA,SACEa,KAAK,WACLqE,YAAY,WACZhC,KAAK,WACLvE,MAAOyE,EACPsB,SAAU,SAAAC,GAAC,OAAID,EAASC,IACxBS,UAAU,OAGdrF,EAAAhB,EAAAiB,cAAA,OAAKC,UAAU,cACbF,EAAAhB,EAAAiB,cAAA,SACEa,KAAK,WACLqE,YAAY,mBACZhC,KAAK,YACLvE,MAAO0F,EACPK,SAAU,SAAAC,GAAC,OAAID,EAASC,IACxBS,UAAU,OAGdrF,EAAAhB,EAAAiB,cAAA,SAAOa,KAAK,SAASZ,UAAU,kBAAkBtB,MAAM,cAEzDoB,EAAAhB,EAAAiB,cAAA,KAAGC,UAAU,QAAb,4BAC2BF,EAAAhB,EAAAiB,cAACyC,EAAA,EAAD,CAAMC,GAAG,UAAT,eCZlBX,cAJS,SAAAzD,GAAK,MAAK,CAChCiE,gBAAiBjE,EAAM0D,KAAKO,kBAK5B,CAAE8C,MLViB,SAAClC,EAAOC,GAAR,sBAAAkC,EAAAtH,OAAAa,EAAA,EAAAb,CAAAc,EAAAC,EAAAC,KAAqB,SAAAuG,EAAM9E,GAAN,IAAA8C,EAAAC,EAAAjC,EAAAkC,EAAA,OAAA3E,EAAAC,EAAAI,KAAA,SAAAqG,GAAA,cAAAA,EAAAnG,KAAAmG,EAAAlG,MAAA,cAClCiE,EAAS,CACbpC,QAAS,CACPwC,eAAgB,mBAChB8B,8BAA+B,MAI7BjC,EAAOI,KAAKC,UAAU,CAAEV,QAAOC,aARGoC,EAAAnG,KAAA,EAAAmG,EAAAlG,KAAA,EAWpB2B,IAAM6C,KAAN,qDAEhBN,EACAD,GAdoC,OAWhChC,EAXgCiE,EAAA9D,KAiBtCjB,EAAS,CACPI,KFpFuB,gBEqFvBC,QAASS,EAAIK,OAEfnB,EAASY,KArB6BmE,EAAAlG,KAAA,iBAAAkG,EAAAnG,KAAA,GAAAmG,EAAA3D,GAAA2D,EAAA,UAuBhC/B,EAAS+B,EAAA3D,GAAIkC,SAASnC,KAAK6B,SAG/BA,EAAOO,QAAQ,SAAAC,GAAK,OAAIxD,EAASN,EAAS8D,EAAM7D,IAAK,aAEvDK,EAAS,CACPI,KF9FoB,eEiEgB,yBAAA2E,EAAA5F,SAAA2F,EAAA,kBAArB,gBAAAG,GAAA,OAAAJ,EAAAzF,MAAA3B,KAAA4B,YAAA,KKQNiC,CAzED,SAAAT,GAAgC,IAA7B+D,EAA6B/D,EAA7B+D,MAAO9C,EAAsBjB,EAAtBiB,gBAAsB4B,EAEZC,mBAAS,CACvCjB,MAAO,GACPC,SAAU,KAJgCkB,EAAAtG,OAAAuG,EAAA,EAAAvG,CAAAmG,EAAA,GAErCK,EAFqCF,EAAA,GAE3BG,EAF2BH,EAAA,GAOpCnB,EAAoBqB,EAApBrB,MAAOC,EAAaoB,EAAbpB,SAETsB,EAAW,SAAAC,GAAC,OAChBF,EAAYzG,OAAA4G,EAAA,EAAA5G,CAAA,GACPwG,EADMxG,OAAA6G,EAAA,EAAA7G,CAAA,GAER2G,EAAEG,OAAO5B,KAAOyB,EAAEG,OAAOnG,UAGxBoG,EAAQ,eAAA9B,EAAAjF,OAAAa,EAAA,EAAAb,CAAAc,EAAAC,EAAAC,KAAG,SAAAC,EAAM0F,GAAN,OAAA7F,EAAAC,EAAAI,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OACfqF,EAAEK,iBACFK,EAAMlC,EAAOC,GAFE,wBAAAhE,EAAAQ,SAAAX,MAAH,gBAAA6C,GAAA,OAAAmB,EAAApD,MAAA3B,KAAA4B,YAAA,GAMd,OAAIyC,EACKxC,EAAAhB,EAAAiB,cAACiF,EAAA,EAAD,CAAUvC,GAAG,eAIpB3C,EAAAhB,EAAAiB,cAAC8C,EAAA,SAAD,KACE/C,EAAAhB,EAAAiB,cAAA,MAAIC,UAAU,sBAAd,WACAF,EAAAhB,EAAAiB,cAAA,KAAGC,UAAU,QACXF,EAAAhB,EAAAiB,cAAA,KAAGC,UAAU,gBADf,2BAGAF,EAAAhB,EAAAiB,cAAA,QAAMC,UAAU,OAAO8E,SAAU,SAAAJ,GAAC,OAAII,EAASJ,KAC7C5E,EAAAhB,EAAAiB,cAAA,OAAKC,UAAU,cACbF,EAAAhB,EAAAiB,cAAA,SACEa,KAAK,QACLqE,YAAY,gBACZhC,KAAK,QACLvE,MAAOwE,EACPuB,SAAU,SAAAC,GAAC,OAAID,EAASC,IACxBQ,UAAQ,KAGZpF,EAAAhB,EAAAiB,cAAA,OAAKC,UAAU,cACbF,EAAAhB,EAAAiB,cAAA,SACEa,KAAK,WACLqE,YAAY,WACZhC,KAAK,WACLvE,MAAOyE,EACPsB,SAAU,SAAAC,GAAC,OAAID,EAASC,IACxBS,UAAU,OAIdrF,EAAAhB,EAAAiB,cAAA,SAAOa,KAAK,SAASZ,UAAU,kBAAkBtB,MAAM,WAEzDoB,EAAAhB,EAAAiB,cAAA,KAAGC,UAAU,QAAb,2BAC0BF,EAAAhB,EAAAiB,cAACyC,EAAA,EAAD,CAAMC,GAAG,aAAT,eCvCjBX,cALS,SAAAzD,GAAK,MAAK,CAEhCqH,OAAQrH,EAAMsH,QAGD7D,CAnBD,SAAAT,GAAA,IAAGqE,EAAHrE,EAAGqE,OAAH,OACD,OAAXA,GACAA,EAAOpF,OAAS,GAChBoF,EAAOE,IAAI,SAAAD,GAAK,OACd7F,EAAAhB,EAAAiB,cAAA,OAAKtB,IAAKkH,EAAMlF,GAAIT,UAAS,eAAA0B,OAAiBiE,EAAMvF,YACjDuF,EAAMxF,SCKA0F,EAAoB,iCAAAxE,EAAAtD,OAAAa,EAAA,EAAAb,CAAAc,EAAAC,EAAAC,KAAM,SAAAC,EAAMwB,GAAN,IAAAc,EAAA,OAAAzC,EAAAC,EAAAI,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAEjB2B,IAAMQ,IAAN,4DAFiB,OAE7BF,EAF6BnC,EAAAsC,KAMnCjB,EAAS,CACPI,KTbqB,cScrBC,QAASS,EAAIK,OARoBxC,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAyC,GAAAzC,EAAA,SAWnCqB,EAAS,CACPI,KTbuB,gBScvBC,QAAS,CAAEV,IAAKhB,EAAAyC,GAAIkC,SAASgC,WAAYC,OAAQ5G,EAAAyC,GAAIkC,SAASiC,UAb7B,yBAAA5G,EAAAQ,SAAAX,EAAA,iBAAN,gBAAA6C,GAAA,OAAAR,EAAAzB,MAAA3B,KAAA4B,YAAA,IA6EpBmG,EAAgB,SAC3BzB,EACA0B,GAF2B,IAG3BC,EAH2BrG,UAAAS,OAAA,QAAAC,IAAAV,UAAA,IAAAA,UAAA,yBAAAoC,EAAAlE,OAAAa,EAAA,EAAAb,CAAAc,EAAAC,EAAAC,KAIxB,SAAAoH,EAAM3F,GAAN,IAAA8C,EAAAhC,EAAAkC,EAAA,OAAA3E,EAAAC,EAAAI,KAAA,SAAAkH,GAAA,cAAAA,EAAAhH,KAAAgH,EAAA/G,MAAA,cAAA+G,EAAAhH,KAAA,EAEKkE,EAAS,CACbpC,QAAS,CACPwC,eAAgB,qBAJnB0C,EAAA/G,KAAA,EAQiB2B,IAAM6C,KAAN,wDAEhBU,EACAjB,GAXD,OAQKhC,EARL8E,EAAA3E,KAaDjB,EAAS,CACPI,KTrGqB,cSsGrBC,QAASS,EAAIK,OAGfnB,EAASN,EAASgG,EAAO,kBAAoB,kBAAmB,YAE3DA,GACHD,EAAQI,KAAK,cArBdD,EAAA/G,KAAA,iBAAA+G,EAAAhH,KAAA,GAAAgH,EAAAxE,GAAAwE,EAAA,UAwBK5C,EAAS4C,EAAAxE,GAAIkC,SAASnC,KAAK6B,SAG/BA,EAAOO,QAAQ,SAAAC,GAAK,OAAIxD,EAASN,EAAS8D,EAAM7D,IAAK,aAEvDK,EAAS,CACPI,KThHuB,gBSiHvBC,QAAS,CAAEV,IAAKiG,EAAAxE,GAAIkC,SAASgC,WAAYC,OAAQK,EAAAxE,GAAIkC,SAASiC,UA/B/D,yBAAAK,EAAAzG,SAAAwG,EAAA,kBAJwB,gBAAAG,GAAA,OAAArE,EAAArC,MAAA3B,KAAA4B,YAAA,ICzEd0G,EAhBU,SAAA1I,GACvB,OACEiC,EAAAhB,EAAAiB,cAAA,OAAKC,UAAU,gBACbF,EAAAhB,EAAAiB,cAACyC,EAAA,EAAD,CAAMC,GAAG,gBAAgBzC,UAAU,iBACjCF,EAAAhB,EAAAiB,cAAA,KAAGC,UAAU,oCADf,iBAGAF,EAAAhB,EAAAiB,cAACyC,EAAA,EAAD,CAAMC,GAAG,kBAAkBzC,UAAU,iBACnCF,EAAAhB,EAAAiB,cAAA,KAAGC,UAAU,kCADf,mBAGAF,EAAAhB,EAAAiB,cAACyC,EAAA,EAAD,CAAMC,GAAG,iBAAiBzC,UAAU,iBAClCF,EAAAhB,EAAAiB,cAAA,KAAGC,UAAU,uCADf,oCC4CS8B,cACb,KACA,CAAE0E,iBFiJ4B,SAAA/F,GAAE,sBAAAgG,EAAA1I,OAAAa,EAAA,EAAAb,CAAAc,EAAAC,EAAAC,KAAI,SAAA2H,EAAMlG,GAAN,IAAAc,EAAA,OAAAzC,EAAAC,EAAAI,KAAA,SAAAyH,GAAA,cAAAA,EAAAvH,KAAAuH,EAAAtH,MAAA,cAAAsH,EAAAvH,KAAA,EAAAuH,EAAAtH,KAAA,EAEhB2B,IAAM4F,OAAN,oEAAAlF,OACoDjB,IAHpC,OAE5Ba,EAF4BqF,EAAAlF,KAKlCjB,EAAS,CACPI,KTpMwB,iBSqMxBC,QAASS,EAAIK,OAGfnB,EAASN,EAAS,qBAAsB,YAVNyG,EAAAtH,KAAA,gBAAAsH,EAAAvH,KAAA,EAAAuH,EAAA/E,GAAA+E,EAAA,SAYlCnG,EAAS,CACPI,KT1MuB,gBS2MvBC,QAAS,CAAEV,IAAKwG,EAAA/E,GAAIkC,SAASgC,WAAYC,OAAQY,EAAA/E,GAAIkC,SAASiC,UAd9B,yBAAAY,EAAAhH,SAAA+G,EAAA,iBAAJ,gBAAAG,GAAA,OAAAJ,EAAA7G,MAAA3B,KAAA4B,YAAA,KEnJnBiC,CAjDI,SAAAT,GAAsC,IAAnCyF,EAAmCzF,EAAnCyF,WAAYN,EAAuBnF,EAAvBmF,iBAC1BO,EAAcD,EAAWlB,IAAI,SAAAoB,GAAG,OACpClH,EAAAhB,EAAAiB,cAAA,MAAItB,IAAKuI,EAAIC,KACXnH,EAAAhB,EAAAiB,cAAA,UAAKiH,EAAIE,SACTpH,EAAAhB,EAAAiB,cAAA,MAAIC,UAAU,WAAWgH,EAAIG,OAE7BrH,EAAAhB,EAAAiB,cAAA,UACED,EAAAhB,EAAAiB,cAACqH,EAAAtI,EAAD,CAAQuI,OAAO,cAAcL,EAAIM,MADnC,KACoD,IACtC,OAAXN,EAAIvE,GACH,QAEA3C,EAAAhB,EAAAiB,cAACqH,EAAAtI,EAAD,CAAQuI,OAAO,cAAcL,EAAIvE,KAGrC3C,EAAAhB,EAAAiB,cAAA,UACED,EAAAhB,EAAAiB,cAAA,UACE2C,QAAS,kBAAM8D,EAAiBQ,EAAIC,MACpCjH,UAAU,kBAFZ,cAUN,OACEF,EAAAhB,EAAAiB,cAAC8C,EAAA,SAAD,KACE/C,EAAAhB,EAAAiB,cAAA,MAAIC,UAAU,QAAd,0BACAF,EAAAhB,EAAAiB,cAAA,SAAOC,UAAU,SACfF,EAAAhB,EAAAiB,cAAA,aACED,EAAAhB,EAAAiB,cAAA,UACED,EAAAhB,EAAAiB,cAAA,qBACAD,EAAAhB,EAAAiB,cAAA,MAAIC,UAAU,UAAd,SACAF,EAAAhB,EAAAiB,cAAA,MAAIC,UAAU,UAAd,SACAF,EAAAhB,EAAAiB,cAAA,aAGJD,EAAAhB,EAAAiB,cAAA,aAAQgH,OCYDjF,cACb,KACA,CAAEyF,gBHqK2B,SAAA9G,GAAE,sBAAA+G,EAAAzJ,OAAAa,EAAA,EAAAb,CAAAc,EAAAC,EAAAC,KAAI,SAAA0I,EAAMjH,GAAN,IAAAc,EAAA,OAAAzC,EAAAC,EAAAI,KAAA,SAAAwI,GAAA,cAAAA,EAAAtI,KAAAsI,EAAArI,MAAA,cAAAqI,EAAAtI,KAAA,EAAAsI,EAAArI,KAAA,EAEf2B,IAAM4F,OAAN,mEAAAlF,OACmDjB,IAHpC,OAE3Ba,EAF2BoG,EAAAjG,KAKjCjB,EAAS,CACPI,KTxNwB,iBSyNxBC,QAASS,EAAIK,OAGfnB,EAASN,EAAS,oBAAqB,YAVNwH,EAAArI,KAAA,gBAAAqI,EAAAtI,KAAA,EAAAsI,EAAA9F,GAAA8F,EAAA,SAYjClH,EAAS,CACPI,KT9NuB,gBS+NvBC,QAAS,CAAEV,IAAKuH,EAAA9F,GAAIkC,SAASgC,WAAYC,OAAQ2B,EAAA9F,GAAIkC,SAASiC,UAd/B,yBAAA2B,EAAA/H,SAAA8H,EAAA,iBAAJ,gBAAAE,GAAA,OAAAH,EAAA5H,MAAA3B,KAAA4B,YAAA,KGvKlBiC,CAjDG,SAAAT,GAAoC,IAAjCuG,EAAiCvG,EAAjCuG,UAAWL,EAAsBlG,EAAtBkG,gBACxBM,EAAaD,EAAUhC,IAAI,SAAAkC,GAAG,OAClChI,EAAAhB,EAAAiB,cAAA,MAAItB,IAAKqJ,EAAIb,KACXnH,EAAAhB,EAAAiB,cAAA,UAAK+H,EAAIC,QACTjI,EAAAhB,EAAAiB,cAAA,MAAIC,UAAU,WAAW8H,EAAIE,SAE7BlI,EAAAhB,EAAAiB,cAAA,UACED,EAAAhB,EAAAiB,cAACqH,EAAAtI,EAAD,CAAQuI,OAAO,cAAcS,EAAIR,MADnC,KACoD,IACtC,OAAXQ,EAAIrF,GACH,QAEA3C,EAAAhB,EAAAiB,cAACqH,EAAAtI,EAAD,CAAQuI,OAAO,cAAcS,EAAIrF,KAGrC3C,EAAAhB,EAAAiB,cAAA,UACED,EAAAhB,EAAAiB,cAAA,UACE2C,QAAS,kBAAM6E,EAAgBO,EAAIb,MACnCjH,UAAU,kBAFZ,cAUN,OACEF,EAAAhB,EAAAiB,cAAC8C,EAAA,SAAD,KACE/C,EAAAhB,EAAAiB,cAAA,MAAIC,UAAU,QAAd,yBACAF,EAAAhB,EAAAiB,cAAA,SAAOC,UAAU,SACfF,EAAAhB,EAAAiB,cAAA,aACED,EAAAhB,EAAAiB,cAAA,UACED,EAAAhB,EAAAiB,cAAA,oBACAD,EAAAhB,EAAAiB,cAAA,MAAIC,UAAU,UAAd,UACAF,EAAAhB,EAAAiB,cAAA,MAAIC,UAAU,UAAd,SACAF,EAAAhB,EAAAiB,cAAA,aAGJD,EAAAhB,EAAAiB,cAAA,aAAQ8H,wBCzCDI,EAAA,kBACbnI,EAAAhB,EAAAiB,cAAC8C,EAAA,SAAD,KACE/C,EAAAhB,EAAAiB,cAAA,OACEmI,IAAKC,IACLC,MAAO,CAAEC,MAAO,QAASC,OAAQ,OAAQC,QAAS,SAClDC,IAAI,cC4DK1G,cALS,SAAAzD,GAAK,MAAK,CAChC0D,KAAM1D,EAAM0D,KACZ0G,QAASpK,EAAMoK,UAKf,CAAE5C,oBAAmB6C,cL6KM,iCAAAC,EAAA5K,OAAAa,EAAA,EAAAb,CAAAc,EAAAC,EAAAC,KAAM,SAAA6J,EAAMpI,GAAN,OAAA3B,EAAAC,EAAAI,KAAA,SAAA2J,GAAA,cAAAA,EAAAzJ,KAAAyJ,EAAAxJ,MAAA,WAC7ByJ,OAAOC,QAAQ,yCADc,CAAAF,EAAAxJ,KAAA,gBAAAwJ,EAAAzJ,KAAA,EAAAyJ,EAAAxJ,KAAA,EAGvB2B,IAAM4F,OAAN,yDAHuB,OAM7BpG,EAAS,CACPI,KT9OqB,kBSgPvBJ,EAAS,CACPI,KT9OuB,oBSiPzBJ,EAASN,EAAS,8CAbW2I,EAAAxJ,KAAA,gBAAAwJ,EAAAzJ,KAAA,EAAAyJ,EAAAjH,GAAAiH,EAAA,SAe7BrI,EAAS,CACPI,KTrPqB,gBSsPrBC,QAAS,CAAEV,IAAK0I,EAAAjH,GAAIkC,SAASgC,WAAYC,OAAQ8C,EAAAjH,GAAIkC,SAASiC,UAjBnC,yBAAA8C,EAAAlJ,SAAAiJ,EAAA,iBAAN,gBAAAI,GAAA,OAAAL,EAAA/I,MAAA3B,KAAA4B,YAAA,KK/KdiC,CA1DG,SAAAT,GAKZ,IAJJwE,EAIIxE,EAJJwE,kBACA6C,EAGIrH,EAHJqH,cACQO,EAEJ5H,EAFJU,KAAQkH,KAEJC,EAAA7H,EADJoH,QAAWA,EACPS,EADOT,QAASnK,EAChB4K,EADgB5K,QAMpB,OAJA6K,oBAAU,WACRtD,KACC,CAACA,IAEGvH,GAAuB,OAAZmK,EAChB3I,EAAAhB,EAAAiB,cAACkI,EAAD,MAEAnI,EAAAhB,EAAAiB,cAAC8C,EAAA,SAAD,KACE/C,EAAAhB,EAAAiB,cAAA,MAAIC,UAAU,sBAAd,aACAF,EAAAhB,EAAAiB,cAAA,KAAGC,UAAU,QACXF,EAAAhB,EAAAiB,cAAA,KAAGC,UAAU,gBADf,WAEWiJ,GAAQA,EAAKhG,MAEX,OAAZwF,EACC3I,EAAAhB,EAAAiB,cAAC8C,EAAA,SAAD,KACE/C,EAAAhB,EAAAiB,cAACqJ,EAAD,MACAtJ,EAAAhB,EAAAiB,cAACsJ,EAAD,CAAYvC,WAAY2B,EAAQ3B,aAChChH,EAAAhB,EAAAiB,cAACuJ,EAAD,CAAW1B,UAAWa,EAAQb,YAE9B9H,EAAAhB,EAAAiB,cAAA,OAAKC,UAAU,OACbF,EAAAhB,EAAAiB,cAAA,UAAQC,UAAU,iBAAiB0C,QAAS,kBAAMgG,MAChD5I,EAAAhB,EAAAiB,cAAA,KAAGC,UAAU,sBADf,wBAMJF,EAAAhB,EAAAiB,cAAC8C,EAAA,SAAD,KACE/C,EAAAhB,EAAAiB,cAAA,mEACAD,EAAAhB,EAAAiB,cAACyC,EAAA,EAAD,CAAMC,GAAG,kBAAkBzC,UAAU,wBAArC,8BCbK8B,cAJS,SAAAzD,GAAK,MAAK,CAChC0D,KAAM1D,EAAM0D,OAGCD,CA1BM,SAAAT,GAAA,IACRpB,EADQoB,EACnBkI,UADmBlH,EAAAhB,EAEnBU,KAAQO,EAFWD,EAEXC,gBAAiBhE,EAFN+D,EAEM/D,QACtBkL,EAHgBzL,OAAA0L,EAAA,EAAA1L,CAAAsD,EAAA,6BAKnBvB,EAAAhB,EAAAiB,cAACiF,EAAA,EAADjH,OAAA2L,OAAA,GACMF,EADN,CAEEG,OAAQ,SAAA9L,GAAK,OACVyE,GAAoBhE,EAGnBwB,EAAAhB,EAAAiB,cAACE,EAAcpC,GAFfiC,EAAAhB,EAAAiB,cAACiF,EAAA,EAAD,CAAUvC,GAAG,iBCoPNX,cAJS,SAAAzD,GAAK,MAAK,CAChCoK,QAASpK,EAAMoK,UAKf,CAAEzC,gBAAeH,qBAFJ/D,CAGb8H,YA/PkB,SAAAvI,GAKd,IAAA6H,EAAA7H,EAJJoH,QAAWA,EAIPS,EAJOT,QAASnK,EAIhB4K,EAJgB5K,QACpB0H,EAGI3E,EAHJ2E,cACAH,EAEIxE,EAFJwE,kBACAI,EACI5E,EADJ4E,QACI/B,EAC4BC,mBAAS,CACvC+C,QAAS,GACT2C,QAAS,GACTC,SAAU,GACV/D,OAAQ,GACRgE,OAAQ,GACRC,eAAgB,GAChBC,IAAK,GACLC,QAAS,GACTC,SAAU,GACVC,SAAU,GACVC,QAAS,GACTC,UAAW,KAbTjG,EAAAtG,OAAAuG,EAAA,EAAAvG,CAAAmG,EAAA,GACGK,EADHF,EAAA,GACaG,EADbH,EAAA,GAAAkG,EAgB8CpG,oBAAS,GAhBvDqG,EAAAzM,OAAAuG,EAAA,EAAAvG,CAAAwM,EAAA,GAgBGE,EAhBHD,EAAA,GAgBwBE,EAhBxBF,EAAA,GAkBJrB,oBAAU,WACRtD,IAEArB,EAAY,CACV0C,QAAS5I,IAAYmK,EAAQvB,QAAU,GAAKuB,EAAQvB,QACpD2C,QAASvL,IAAYmK,EAAQoB,QAAU,GAAKpB,EAAQoB,QACpDC,SAAUxL,IAAYmK,EAAQqB,SAAW,GAAKrB,EAAQqB,SACtD/D,OAAQzH,IAAYmK,EAAQ1C,OAAS,GAAK0C,EAAQ1C,OAClDgE,OAAQzL,IAAYmK,EAAQsB,OAAS,GAAKtB,EAAQsB,OAAOY,KAAK,KAC9DX,eACE1L,IAAYmK,EAAQuB,eAAiB,GAAKvB,EAAQuB,eACpDC,IAAK3L,IAAYmK,EAAQwB,IAAM,GAAKxB,EAAQwB,IAC5CC,QAAS5L,IAAYmK,EAAQmC,OAAS,GAAKnC,EAAQmC,OAAOV,QAC1DC,SAAU7L,IAAYmK,EAAQmC,OAAS,GAAKnC,EAAQmC,OAAOT,SAC3DC,SAAU9L,IAAYmK,EAAQmC,OAAS,GAAKnC,EAAQmC,OAAOR,SAC3DC,QAAS/L,IAAYmK,EAAQmC,OAAS,GAAKnC,EAAQmC,OAAOP,QAC1DC,UAAWhM,IAAYmK,EAAQmC,OAAS,GAAKnC,EAAQmC,OAAON,aAE7D,CAAChM,EAASuH,IApCT,IAuCFqB,EAYE3C,EAZF2C,QACA2C,EAWEtF,EAXFsF,QACAC,EAUEvF,EAVFuF,SACA/D,EASExB,EATFwB,OACAgE,EAQExF,EARFwF,OACAC,EAOEzF,EAPFyF,eACAC,EAME1F,EANF0F,IACAC,EAKE3F,EALF2F,QACAC,EAIE5F,EAJF4F,SACAC,EAGE7F,EAHF6F,SACAC,EAEE9F,EAFF8F,QACAC,EACE/F,EADF+F,UAGI7F,EAAW,SAAAC,GAAC,OAChBF,EAAYzG,OAAA4G,EAAA,EAAA5G,CAAA,GAAKwG,EAANxG,OAAA6G,EAAA,EAAA7G,CAAA,GAAiB2G,EAAEG,OAAO5B,KAAOyB,EAAEG,OAAOnG,UAOvD,OACEoB,EAAAhB,EAAAiB,cAAC8C,EAAA,SAAD,KACE/C,EAAAhB,EAAAiB,cAAA,MAAIC,UAAU,sBAAd,uBACAF,EAAAhB,EAAAiB,cAAA,KAAGC,UAAU,QACXF,EAAAhB,EAAAiB,cAAA,KAAGC,UAAU,gBADf,8DAIAF,EAAAhB,EAAAiB,cAAA,mCACAD,EAAAhB,EAAAiB,cAAA,QAAMC,UAAU,OAAO8E,SAAU,SAAAJ,GAAC,OAbrB,SAAAA,GACfA,EAAEK,iBAEFiB,EAAczB,EAAU0B,GAAS,GAUOnB,CAASJ,KAC7C5E,EAAAhB,EAAAiB,cAAA,OAAKC,UAAU,cACbF,EAAAhB,EAAAiB,cAAA,UAAQkD,KAAK,SAASvE,MAAOqH,EAAQtB,SAAU,SAAAC,GAAC,OAAID,EAASC,KAC3D5E,EAAAhB,EAAAiB,cAAA,UAAQrB,MAAM,KAAd,gCACAoB,EAAAhB,EAAAiB,cAAA,UAAQrB,MAAM,aAAd,aACAoB,EAAAhB,EAAAiB,cAAA,UAAQrB,MAAM,oBAAd,oBACAoB,EAAAhB,EAAAiB,cAAA,UAAQrB,MAAM,oBAAd,oBACAoB,EAAAhB,EAAAiB,cAAA,UAAQrB,MAAM,WAAd,WACAoB,EAAAhB,EAAAiB,cAAA,UAAQrB,MAAM,uBAAd,uBACAoB,EAAAhB,EAAAiB,cAAA,UAAQrB,MAAM,cAAd,yBACAoB,EAAAhB,EAAAiB,cAAA,UAAQrB,MAAM,UAAd,UACAoB,EAAAhB,EAAAiB,cAAA,UAAQrB,MAAM,SAAd,UAEFoB,EAAAhB,EAAAiB,cAAA,SAAOC,UAAU,aAAjB,uDAIFF,EAAAhB,EAAAiB,cAAA,OAAKC,UAAU,cACbF,EAAAhB,EAAAiB,cAAA,SACEa,KAAK,OACLqE,YAAY,UACZhC,KAAK,UACLvE,MAAOwI,EACPzC,SAAU,SAAAC,GAAC,OAAID,EAASC,MAE1B5E,EAAAhB,EAAAiB,cAAA,SAAOC,UAAU,aAAjB,kDAIFF,EAAAhB,EAAAiB,cAAA,OAAKC,UAAU,cACbF,EAAAhB,EAAAiB,cAAA,SACEa,KAAK,OACLqE,YAAY,UACZhC,KAAK,UACLvE,MAAOmL,EACPpF,SAAU,SAAAC,GAAC,OAAID,EAASC,MAE1B5E,EAAAhB,EAAAiB,cAAA,SAAOC,UAAU,aAAjB,2CAIFF,EAAAhB,EAAAiB,cAAA,OAAKC,UAAU,cACbF,EAAAhB,EAAAiB,cAAA,SACEa,KAAK,OACLqE,YAAY,WACZhC,KAAK,WACLvE,MAAOoL,EACPrF,SAAU,SAAAC,GAAC,OAAID,EAASC,MAE1B5E,EAAAhB,EAAAiB,cAAA,SAAOC,UAAU,aAAjB,4CAIFF,EAAAhB,EAAAiB,cAAA,OAAKC,UAAU,cACbF,EAAAhB,EAAAiB,cAAA,SACEa,KAAK,OACLqE,YAAY,WACZhC,KAAK,SACLvE,MAAOqL,EACPtF,SAAU,SAAAC,GAAC,OAAID,EAASC,MAE1B5E,EAAAhB,EAAAiB,cAAA,SAAOC,UAAU,aAAjB,oEAIFF,EAAAhB,EAAAiB,cAAA,OAAKC,UAAU,cACbF,EAAAhB,EAAAiB,cAAA,SACEa,KAAK,OACLqE,YAAY,kBACZhC,KAAK,iBACLvE,MAAOsL,EACPvF,SAAU,SAAAC,GAAC,OAAID,EAASC,MAE1B5E,EAAAhB,EAAAiB,cAAA,SAAOC,UAAU,aAAjB,2EAKFF,EAAAhB,EAAAiB,cAAA,OAAKC,UAAU,cACbF,EAAAhB,EAAAiB,cAAA,YACEkF,YAAY,0BACZhC,KAAK,MACLvE,MAAOuL,EACPxF,SAAU,SAAAC,GAAC,OAAID,EAASC,MAE1B5E,EAAAhB,EAAAiB,cAAA,SAAOC,UAAU,aAAjB,oCAGFF,EAAAhB,EAAAiB,cAAA,OAAKC,UAAU,QACbF,EAAAhB,EAAAiB,cAAA,UACEa,KAAK,SACLZ,UAAU,gBACV0C,QAAS,kBAAMgI,GAAoBD,KAHrC,4BAOA3K,EAAAhB,EAAAiB,cAAA,yBAGD0K,GACC3K,EAAAhB,EAAAiB,cAAC8C,EAAA,SAAD,KACE/C,EAAAhB,EAAAiB,cAAA,OAAKC,UAAU,2BACbF,EAAAhB,EAAAiB,cAAA,KAAGC,UAAU,yBACbF,EAAAhB,EAAAiB,cAAA,SACEa,KAAK,OACLqE,YAAY,cACZhC,KAAK,UACLvE,MAAOwL,EACPzF,SAAU,SAAAC,GAAC,OAAID,EAASC,OAI5B5E,EAAAhB,EAAAiB,cAAA,OAAKC,UAAU,2BACbF,EAAAhB,EAAAiB,cAAA,KAAGC,UAAU,0BACbF,EAAAhB,EAAAiB,cAAA,SACEa,KAAK,OACLqE,YAAY,eACZhC,KAAK,WACLvE,MAAOyL,EACP1F,SAAU,SAAAC,GAAC,OAAID,EAASC,OAI5B5E,EAAAhB,EAAAiB,cAAA,OAAKC,UAAU,2BACbF,EAAAhB,EAAAiB,cAAA,KAAGC,UAAU,yBACbF,EAAAhB,EAAAiB,cAAA,SACEa,KAAK,OACLqE,YAAY,cACZhC,KAAK,UACLvE,MAAO2L,EACP5F,SAAU,SAAAC,GAAC,OAAID,EAASC,OAI5B5E,EAAAhB,EAAAiB,cAAA,OAAKC,UAAU,2BACbF,EAAAhB,EAAAiB,cAAA,KAAGC,UAAU,0BACbF,EAAAhB,EAAAiB,cAAA,SACEa,KAAK,OACLqE,YAAY,eACZhC,KAAK,WACLvE,MAAO0L,EACP3F,SAAU,SAAAC,GAAC,OAAID,EAASC,OAI5B5E,EAAAhB,EAAAiB,cAAA,OAAKC,UAAU,2BACbF,EAAAhB,EAAAiB,cAAA,KAAGC,UAAU,2BACbF,EAAAhB,EAAAiB,cAAA,SACEa,KAAK,OACLqE,YAAY,gBACZhC,KAAK,YACLvE,MAAO4L,EACP7F,SAAU,SAAAC,GAAC,OAAID,EAASC,QAMhC5E,EAAAhB,EAAAiB,cAAA,SAAOa,KAAK,SAASZ,UAAU,yBAC/BF,EAAAhB,EAAAiB,cAACyC,EAAA,EAAD,CAAMxC,UAAU,qBAAqByC,GAAG,cAAxC,gBCjHOX,cACb,KACA,CAAE+I,cRKyB,SAACtG,EAAU0B,GAAX,sBAAA6E,EAAA/M,OAAAa,EAAA,EAAAb,CAAAc,EAAAC,EAAAC,KAAuB,SAAAgM,EAAMvK,GAAN,IAAA8C,EAAAhC,EAAAkC,EAAA,OAAA3E,EAAAC,EAAAI,KAAA,SAAA8L,GAAA,cAAAA,EAAA5L,KAAA4L,EAAA3L,MAAA,cAAA2L,EAAA5L,KAAA,EAE1CkE,EAAS,CACbpC,QAAS,CACPwC,eAAgB,qBAJ4BsH,EAAA3L,KAAA,EAQ9B2B,IAAMiK,IAAN,mEAEhB1G,EACAjB,GAX8C,OAQ1ChC,EAR0C0J,EAAAvJ,KAahDjB,EAAS,CACPI,KTtIwB,iBSuIxBC,QAASS,EAAIK,OAGfnB,EAASN,EAAS,mBAAoB,YAEtC+F,EAAQI,KAAK,cApBmC2E,EAAA3L,KAAA,iBAAA2L,EAAA5L,KAAA,GAAA4L,EAAApJ,GAAAoJ,EAAA,UAsB1CxH,EAASwH,EAAApJ,GAAIkC,SAASnC,KAAK6B,SAG/BA,EAAOO,QAAQ,SAAAC,GAAK,OAAIxD,EAASN,EAAS8D,EAAM7D,IAAK,aAEvDK,EAAS,CACPI,KTnJuB,gBSoJvBC,QAAS,CAAEV,IAAK6K,EAAApJ,GAAIkC,SAASgC,WAAYC,OAAQiF,EAAApJ,GAAIkC,SAASiC,UA7BhB,yBAAAiF,EAAArL,SAAAoL,EAAA,kBAAvB,gBAAAG,GAAA,OAAAJ,EAAAlL,MAAA3B,KAAA4B,YAAA,KQPdiC,CAGb8H,YA3HoB,SAAAvI,GAAgC,IAA7BwJ,EAA6BxJ,EAA7BwJ,cAAe5E,EAAc5E,EAAd4E,QAAc/B,EACpBC,mBAAS,CACvC+C,QAAS,GACTC,MAAO,GACP2C,SAAU,GACVxC,KAAM,GACN7E,GAAI,GACJ0I,SAAS,EACTC,YAAa,KARqC/G,EAAAtG,OAAAuG,EAAA,EAAAvG,CAAAmG,EAAA,GAC7CK,EAD6CF,EAAA,GACnCG,EADmCH,EAAA,GAAAkG,EAWXpG,oBAAS,GAXEqG,EAAAzM,OAAAuG,EAAA,EAAAvG,CAAAwM,EAAA,GAW7Cc,EAX6Cb,EAAA,GAW7Bc,EAX6Bd,EAAA,GAa5CtD,EAA6D3C,EAA7D2C,QAASC,EAAoD5C,EAApD4C,MAAO2C,EAA6CvF,EAA7CuF,SAAUxC,EAAmC/C,EAAnC+C,KAAM7E,EAA6B8B,EAA7B9B,GAAI0I,EAAyB5G,EAAzB4G,QAASC,EAAgB7G,EAAhB6G,YAE/C3G,EAAW,SAAAC,GAAC,OAChBF,EAAYzG,OAAA4G,EAAA,EAAA5G,CAAA,GAAKwG,EAANxG,OAAA6G,EAAA,EAAA7G,CAAA,GAAiB2G,EAAEG,OAAO5B,KAAOyB,EAAEG,OAAOnG,UAEvD,OACEoB,EAAAhB,EAAAiB,cAAC8C,EAAA,SAAD,KACE/C,EAAAhB,EAAAiB,cAAA,MAAIC,UAAU,sBAAd,qBACAF,EAAAhB,EAAAiB,cAAA,KAAGC,UAAU,QACXF,EAAAhB,EAAAiB,cAAA,KAAGC,UAAU,uBADf,0EAIAF,EAAAhB,EAAAiB,cAAA,mCACAD,EAAAhB,EAAAiB,cAAA,QACEC,UAAU,OACV8E,SAAU,SAAAJ,GACRA,EAAEK,iBACF8F,EAActG,EAAU0B,KAG1BnG,EAAAhB,EAAAiB,cAAA,OAAKC,UAAU,cACbF,EAAAhB,EAAAiB,cAAA,SACEa,KAAK,OACLqE,YAAY,cACZhC,KAAK,QACLvE,MAAOyI,EACP1C,SAAU,SAAAC,GAAC,OAAID,EAASC,IACxBQ,UAAQ,KAGZpF,EAAAhB,EAAAiB,cAAA,OAAKC,UAAU,cACbF,EAAAhB,EAAAiB,cAAA,SACEa,KAAK,OACLqE,YAAY,YACZhC,KAAK,UACLvE,MAAOwI,EACPzC,SAAU,SAAAC,GAAC,OAAID,EAASC,IACxBQ,UAAQ,KAGZpF,EAAAhB,EAAAiB,cAAA,OAAKC,UAAU,cACbF,EAAAhB,EAAAiB,cAAA,SACEa,KAAK,OACLqE,YAAY,WACZhC,KAAK,WACLvE,MAAOoL,EACPrF,SAAU,SAAAC,GAAC,OAAID,EAASC,OAG5B5E,EAAAhB,EAAAiB,cAAA,OAAKC,UAAU,cACbF,EAAAhB,EAAAiB,cAAA,uBACAD,EAAAhB,EAAAiB,cAAA,SACEa,KAAK,OACLqC,KAAK,OACLvE,MAAO4I,EACP7C,SAAU,SAAAC,GAAC,OAAID,EAASC,OAG5B5E,EAAAhB,EAAAiB,cAAA,OAAKC,UAAU,cACbF,EAAAhB,EAAAiB,cAAA,SACED,EAAAhB,EAAAiB,cAAA,SACEa,KAAK,WACLqC,KAAK,UACLsI,QAASJ,EACTzM,MAAOyM,EACP1G,SAAU,SAAAC,GACRF,EAAYzG,OAAA4G,EAAA,EAAA5G,CAAA,GAAKwG,EAAN,CAAgB4G,SAAUA,KACrCG,GAAgBD,MAEjB,IAVL,gBAcFvL,EAAAhB,EAAAiB,cAAA,OAAKC,UAAU,cACbF,EAAAhB,EAAAiB,cAAA,qBACAD,EAAAhB,EAAAiB,cAAA,SACEa,KAAK,OACLqC,KAAK,KACLvE,MAAO+D,EACPgC,SAAU,SAAAC,GAAC,OAAID,EAASC,IACxB8G,SAAUH,EAAiB,WAAa,MAG5CvL,EAAAhB,EAAAiB,cAAA,OAAKC,UAAU,cACbF,EAAAhB,EAAAiB,cAAA,YACEkD,KAAK,cACLwI,KAAK,KACLC,KAAK,IACLzG,YAAY,kBACZvG,MAAO0M,EACP3G,SAAU,SAAAC,GAAC,OAAID,EAASC,OAG5B5E,EAAAhB,EAAAiB,cAAA,SAAOa,KAAK,SAASZ,UAAU,yBAC/BF,EAAAhB,EAAAiB,cAAA,KAAGC,UAAU,qBAAqB2C,KAAK,kBAAvC,gBClDOgJ,EA3DI,SAAAtK,GASb,IAAA6H,EAAA7H,EARJoH,QACE1C,EAOEmD,EAPFnD,OACAmB,EAMEgC,EANFhC,QACA4C,EAKEZ,EALFY,SACAD,EAIEX,EAJFW,QACAe,EAGE1B,EAHF0B,OAGEgB,EAAA1C,EAFFD,KAAQhG,EAEN2I,EAFM3I,KAAM4I,EAEZD,EAFYC,OAGhB,OACE/L,EAAAhB,EAAAiB,cAAA,OAAKC,UAAU,8BACbF,EAAAhB,EAAAiB,cAAA,OAAKC,UAAU,iBAAiBkI,IAAK2D,EAAQrD,IAAI,KACjD1I,EAAAhB,EAAAiB,cAAA,MAAIC,UAAU,SAASiD,GACvBnD,EAAAhB,EAAAiB,cAAA,KAAGC,UAAU,QACV+F,EADH,IACYmB,GAAWpH,EAAAhB,EAAAiB,cAAA,mBAAWmH,EAAX,MAEvBpH,EAAAhB,EAAAiB,cAAA,SAAI+J,GAAYhK,EAAAhB,EAAAiB,cAAA,YAAO+J,IACvBhK,EAAAhB,EAAAiB,cAAA,OAAKC,UAAU,cACZ6J,GACC/J,EAAAhB,EAAAiB,cAAA,KAAG4C,KAAMkH,EAAShF,OAAO,SAASiH,IAAI,uBACpChM,EAAAhB,EAAAiB,cAAA,KAAGC,UAAU,wBAIhB4K,GAAUA,EAAOV,SAChBpK,EAAAhB,EAAAiB,cAAA,KAAG4C,KAAMiI,EAAOV,QAASrF,OAAO,SAASiH,IAAI,uBAC3ChM,EAAAhB,EAAAiB,cAAA,KAAGC,UAAU,0BAGhB4K,GAAUA,EAAOT,UAChBrK,EAAAhB,EAAAiB,cAAA,KAAG4C,KAAMiI,EAAOT,SAAUtF,OAAO,SAASiH,IAAI,uBAC5ChM,EAAAhB,EAAAiB,cAAA,KAAGC,UAAU,2BAGhB4K,GAAUA,EAAOR,UAChBtK,EAAAhB,EAAAiB,cAAA,KAAG4C,KAAMiI,EAAOR,SAAUvF,OAAO,SAASiH,IAAI,uBAC5ChM,EAAAhB,EAAAiB,cAAA,KAAGC,UAAU,2BAGhB4K,GAAUA,EAAOP,SAChBvK,EAAAhB,EAAAiB,cAAA,KAAG4C,KAAMiI,EAAOP,QAASxF,OAAO,SAASiH,IAAI,uBAC3ChM,EAAAhB,EAAAiB,cAAA,KAAGC,UAAU,0BAGhB4K,GAAUA,EAAON,WAChBxK,EAAAhB,EAAAiB,cAAA,KAAG4C,KAAMiI,EAAON,UAAWzF,OAAO,SAASiH,IAAI,uBAC7ChM,EAAAhB,EAAAiB,cAAA,KAAGC,UAAU,+BCdV+L,EAjCM,SAAA1K,GAMf,IAAA6H,EAAA7H,EALJoH,QACEwB,EAIEf,EAJFe,IACAF,EAGEb,EAHFa,OACQ9G,EAENiG,EAFFD,KAAQhG,KAGV,OACEnD,EAAAhB,EAAAiB,cAAA,OAAKC,UAAU,8BACZiK,GACCnK,EAAAhB,EAAAiB,cAAC8C,EAAA,SAAD,KACE/C,EAAAhB,EAAAiB,cAAA,MAAIC,UAAU,gBAAgBiD,EAAK+I,OAAOC,MAAM,KAAK,GAArD,SACAnM,EAAAhB,EAAAiB,cAAA,SAAIkK,GACJnK,EAAAhB,EAAAiB,cAAA,OAAKC,UAAU,UAInBF,EAAAhB,EAAAiB,cAAA,MAAIC,UAAU,gBAAd,aACAF,EAAAhB,EAAAiB,cAAA,OAAKC,UAAU,UACZ+J,EAAOnE,IAAI,SAACsG,EAAOC,GAAR,OACVrM,EAAAhB,EAAAiB,cAAA,OAAKtB,IAAK0N,EAAOnM,UAAU,OACzBF,EAAAhB,EAAAiB,cAAA,KAAGC,UAAU,iBADf,IACkCkM,QCG7BE,EAxBW,SAAA/K,GAEpB,IAAAgL,EAAAhL,EADJyF,WAAcI,EACVmF,EADUnF,QAASC,EACnBkF,EADmBlF,MAA0B1E,GAC7C4J,EAD0BvC,SAC1BuC,EADoClB,QACpCkB,EAD6C5J,IAAI6E,EACjD+E,EADiD/E,KAAM8D,EACvDiB,EADuDjB,YAE3D,OACEtL,EAAAhB,EAAAiB,cAAA,WACED,EAAAhB,EAAAiB,cAAA,MAAIC,UAAU,aAAakH,GAC3BpH,EAAAhB,EAAAiB,cAAA,SACED,EAAAhB,EAAAiB,cAACqH,EAAAtI,EAAD,CAAQuI,OAAO,eAAeC,GADhC,KACiD,IAC7C7E,EAAc3C,EAAAhB,EAAAiB,cAACqH,EAAAtI,EAAD,CAAQuI,OAAO,cAAc5E,GAAtC,QAET3C,EAAAhB,EAAAiB,cAAA,SACED,EAAAhB,EAAAiB,cAAA,4BADF,IAC+BoH,GAE/BrH,EAAAhB,EAAAiB,cAAA,SACED,EAAAhB,EAAAiB,cAAA,6BADF,IACgCqL,KCavBkB,EA3BU,SAAAjL,GAEnB,IAAAkL,EAAAlL,EADJuG,UAAaG,EACTwE,EADSxE,OAAQyE,EACjBD,EADiBC,OAAQC,EACzBF,EADyBE,aAAuBhK,GAChD8J,EADuCpB,QACvCoB,EADgD9J,IAAI6E,EACpDiF,EADoDjF,KAAM8D,EAC1DmB,EAD0DnB,YAE9D,OACEtL,EAAAhB,EAAAiB,cAAA,WACED,EAAAhB,EAAAiB,cAAA,MAAIC,UAAU,aAAa+H,GAC3BjI,EAAAhB,EAAAiB,cAAA,SACED,EAAAhB,EAAAiB,cAACqH,EAAAtI,EAAD,CAAQuI,OAAO,eAAeC,GADhC,KACiD,IAC7C7E,EAAc3C,EAAAhB,EAAAiB,cAACqH,EAAAtI,EAAD,CAAQuI,OAAO,cAAc5E,GAAtC,QAET3C,EAAAhB,EAAAiB,cAAA,SACED,EAAAhB,EAAAiB,cAAA,0BADF,IAC6ByM,GAE7B1M,EAAAhB,EAAAiB,cAAA,SACED,EAAAhB,EAAAiB,cAAA,mCADF,IACsC0M,GAEtC3M,EAAAhB,EAAAiB,cAAA,SACED,EAAAhB,EAAAiB,cAAA,6BADF,IACgCqL,KCqCvBtJ,cAJS,SAAAzD,GAAK,MAAK,CAChCqO,MAAOrO,EAAMoK,QAAQiE,QAKrB,CAAEC,eba0B,SAAAC,GAAQ,sBAAAvH,EAAAtH,OAAAa,EAAA,EAAAb,CAAAc,EAAAC,EAAAC,KAAI,SAAAmD,EAAM1B,GAAN,IAAAc,EAAA,OAAAzC,EAAAC,EAAAI,KAAA,SAAAiD,GAAA,cAAAA,EAAA/C,KAAA+C,EAAA9C,MAAA,cAAA8C,EAAA/C,KAAA,EAAA+C,EAAA9C,KAAA,EAEpB2B,IAAMQ,IAAN,gEAAAE,OACgDkL,IAH5B,OAEhCtL,EAFgCa,EAAAV,KAMtCjB,EAAS,CACPI,KTrEmB,YSsEnBC,QAASS,EAAIK,OARuBQ,EAAA9C,KAAA,gBAAA8C,EAAA/C,KAAA,EAAA+C,EAAAP,GAAAO,EAAA,SAWtC3B,EAAS,CACPI,KTvEuB,gBSwEvBC,QAAS,CAAEV,IAAKgC,EAAAP,GAAIkC,SAASgC,WAAYC,OAAQ5D,EAAAP,GAAIkC,SAASiC,UAb1B,yBAAA5D,EAAAxC,SAAAuC,EAAA,iBAAJ,gBAAAE,GAAA,OAAAiD,EAAAzF,MAAA3B,KAAA4B,YAAA,KafvBiC,CApDO,SAAAT,GAAyC,IAAtCuL,EAAsCvL,EAAtCuL,SAAUD,EAA4BtL,EAA5BsL,eAAgBD,EAAYrL,EAAZqL,MAIjD,OAHAvD,oBAAU,WACRwD,EAAeC,IACd,CAACD,IAEF7M,EAAAhB,EAAAiB,cAAA,OAAKC,UAAU,kBACbF,EAAAhB,EAAAiB,cAAA,MAAIC,UAAU,qBAAd,gBACW,OAAV0M,EACC5M,EAAAhB,EAAAiB,cAACkI,EAAD,MAEAyE,EAAM9G,IAAI,SAAAiH,GAAI,OACZ/M,EAAAhB,EAAAiB,cAAA,OAAKtB,IAAKoO,EAAKpM,GAAIT,UAAU,0BAC3BF,EAAAhB,EAAAiB,cAAA,WACED,EAAAhB,EAAAiB,cAAA,UACED,EAAAhB,EAAAiB,cAAA,KACE4C,KAAMkK,EAAKC,SACXjI,OAAO,SACPiH,IAAI,uBAEHe,EAAK5J,OAGVnD,EAAAhB,EAAAiB,cAAA,SAAI8M,EAAKzB,cAEXtL,EAAAhB,EAAAiB,cAAA,WACED,EAAAhB,EAAAiB,cAAA,UACED,EAAAhB,EAAAiB,cAAA,MAAIC,UAAU,uBAAd,UACU6M,EAAKE,kBAEfjN,EAAAhB,EAAAiB,cAAA,MAAIC,UAAU,oBAAd,aACa6M,EAAKG,gBAElBlN,EAAAhB,EAAAiB,cAAA,MAAIC,UAAU,qBAAd,UAA0C6M,EAAKI,qBCuDhDnL,eALS,SAAAzD,GAAK,MAAK,CAChCoK,QAASpK,EAAMoK,QACf1G,KAAM1D,EAAM0D,OAKZ,CAAEmL,edzC0B,SAAAC,GAAM,sBAAA/J,EAAArF,OAAAa,EAAA,EAAAb,CAAAc,EAAAC,EAAAC,KAAI,SAAAuG,EAAM9E,GAAN,IAAAc,EAAA,OAAAzC,EAAAC,EAAAI,KAAA,SAAAqG,GAAA,cAAAA,EAAAnG,KAAAmG,EAAAlG,MAAA,cAAAkG,EAAAnG,KAAA,EAAAmG,EAAAlG,KAAA,EAElB2B,IAAMQ,IAAN,8DAAAE,OAC8CyL,IAH5B,OAE9B7L,EAF8BiE,EAAA9D,KAMpCjB,EAAS,CACPI,KTpDqB,cSqDrBC,QAASS,EAAIK,OARqB4D,EAAAlG,KAAA,gBAAAkG,EAAAnG,KAAA,EAAAmG,EAAA3D,GAAA2D,EAAA,SAWpC/E,EAAS,CACPI,KTpDuB,gBSqDvBC,QAAS,CAAEV,IAAKoF,EAAA3D,GAAIkC,SAASgC,WAAYC,OAAQR,EAAA3D,GAAIkC,SAASiC,UAb5B,yBAAAR,EAAA5F,SAAA2F,EAAA,iBAAJ,gBAAAG,GAAA,OAAArC,EAAAxD,MAAA3B,KAAA4B,YAAA,KcuCrBiC,CAhFC,SAAAT,GAKV,IAJJ6L,EAII7L,EAJJ6L,eAIIhE,EAAA7H,EAHJoH,QAAWA,EAGPS,EAHOT,QAASnK,EAGhB4K,EAHgB5K,QACpByD,EAEIV,EAFJU,KACAqL,EACI/L,EADJ+L,MAMA,OAJAjE,oBAAU,WACR+D,EAAeE,EAAMC,OAAO5M,KAC3B,CAACyM,EAAgBE,EAAMC,OAAO5M,KAG/BX,EAAAhB,EAAAiB,cAAC8C,EAAA,SAAD,KACe,OAAZ4F,GAAoBnK,EACnBwB,EAAAhB,EAAAiB,cAACkI,EAAD,MAEAnI,EAAAhB,EAAAiB,cAAC8C,EAAA,SAAD,KACE/C,EAAAhB,EAAAiB,cAACyC,EAAA,EAAD,CAAMC,GAAG,YAAYzC,UAAU,iBAA/B,oBAGC+B,EAAKO,kBACa,IAAjBP,EAAKzD,SACLyD,EAAKkH,KAAKhC,MAAQwB,EAAQQ,KAAKhC,KAC7BnH,EAAAhB,EAAAiB,cAACyC,EAAA,EAAD,CAAMC,GAAG,gBAAgBzC,UAAU,gBAAnC,gBAIJF,EAAAhB,EAAAiB,cAAA,OAAKC,UAAU,qBACbF,EAAAhB,EAAAiB,cAACuN,EAAD,CAAY7E,QAASA,IACrB3I,EAAAhB,EAAAiB,cAACwN,EAAD,CAAc9E,QAASA,IACvB3I,EAAAhB,EAAAiB,cAAA,OAAKC,UAAU,4BACbF,EAAAhB,EAAAiB,cAAA,MAAIC,UAAU,gBAAd,cACCyI,EAAQ3B,WAAWxG,OAAS,EAC3BR,EAAAhB,EAAAiB,cAAC8C,EAAA,SAAD,KACG4F,EAAQ3B,WAAWlB,IAAI,SAAAkB,GAAU,OAChChH,EAAAhB,EAAAiB,cAACyN,EAAD,CACE/O,IAAKqI,EAAWG,IAChBH,WAAYA,OAKlBhH,EAAAhB,EAAAiB,cAAA,wCAGJD,EAAAhB,EAAAiB,cAAA,OAAKC,UAAU,4BACbF,EAAAhB,EAAAiB,cAAA,MAAIC,UAAU,gBAAd,aACCyI,EAAQb,UAAUtH,OAAS,EAC1BR,EAAAhB,EAAAiB,cAAC8C,EAAA,SAAD,KACG4F,EAAQb,UAAUhC,IAAI,SAAAgC,GAAS,OAC9B9H,EAAAhB,EAAAiB,cAAC0N,EAAD,CACEhP,IAAKmJ,EAAUX,IACfW,UAAWA,OAKjB9H,EAAAhB,EAAAiB,cAAA,uCAGH0I,EAAQuB,gBACPlK,EAAAhB,EAAAiB,cAAC2N,EAAD,CAAed,SAAUnE,EAAQuB,sBC6DhClI,eACb,KACA,CAAE6L,afgCwB,SAACpJ,EAAU0B,GAAX,sBAAA2H,EAAA7P,OAAAa,EAAA,EAAAb,CAAAc,EAAAC,EAAAC,KAAuB,SAAA8O,EAAMrN,GAAN,IAAA8C,EAAAhC,EAAAkC,EAAA,OAAA3E,EAAAC,EAAAI,KAAA,SAAA4O,GAAA,cAAAA,EAAA1O,KAAA0O,EAAAzO,MAAA,cAAAyO,EAAA1O,KAAA,EAEzCkE,EAAS,CACbpC,QAAS,CACPwC,eAAgB,qBAJ2BoK,EAAAzO,KAAA,EAQ7B2B,IAAMiK,IAAN,kEAEhB1G,EACAjB,GAX6C,OAQzChC,EARyCwM,EAAArM,KAa/CjB,EAAS,CACPI,KTzKwB,iBS0KxBC,QAASS,EAAIK,OAGfnB,EAASN,EAAS,kBAAmB,YAErC+F,EAAQI,KAAK,cApBkCyH,EAAAzO,KAAA,iBAAAyO,EAAA1O,KAAA,GAAA0O,EAAAlM,GAAAkM,EAAA,UAsBzCtK,EAASsK,EAAAlM,GAAIkC,SAASnC,KAAK6B,SAG/BA,EAAOO,QAAQ,SAAAC,GAAK,OAAIxD,EAASN,EAAS8D,EAAM7D,IAAK,aAEvDK,EAAS,CACPI,KTtLuB,gBSuLvBC,QAAS,CAAEV,IAAK2N,EAAAlM,GAAIkC,SAASgC,WAAYC,OAAQ+H,EAAAlM,GAAIkC,SAASiC,UA7BjB,yBAAA+H,EAAAnO,SAAAkO,EAAA,kBAAvB,gBAAAE,GAAA,OAAAH,EAAAhO,MAAA3B,KAAA4B,YAAA,KelCbiC,CAGb8H,YAnImB,SAAAvI,GAA+B,IAA5BsM,EAA4BtM,EAA5BsM,aAAc1H,EAAc5E,EAAd4E,QAAc/B,EAClBC,mBAAS,CACvC4D,OAAQ,GACRyE,OAAQ,GACRC,aAAc,GACdnF,KAAM,GACN7E,GAAI,GACJ0I,SAAS,EACTC,YAAa,KARmC/G,EAAAtG,OAAAuG,EAAA,EAAAvG,CAAAmG,EAAA,GAC3CK,EAD2CF,EAAA,GACjCG,EADiCH,EAAA,GAAAkG,EAWTpG,oBAAS,GAXAqG,EAAAzM,OAAAuG,EAAA,EAAAvG,CAAAwM,EAAA,GAW3Cc,EAX2Cb,EAAA,GAW3Bc,EAX2Bd,EAAA,GAchDzC,EAOExD,EAPFwD,OACAyE,EAMEjI,EANFiI,OACAC,EAKElI,EALFkI,aACAnF,EAIE/C,EAJF+C,KACA7E,EAGE8B,EAHF9B,GACA0I,EAEE5G,EAFF4G,QACAC,EACE7G,EADF6G,YAGI3G,EAAW,SAAAC,GAAC,OAChBF,EAAYzG,OAAA4G,EAAA,EAAA5G,CAAA,GAAKwG,EAANxG,OAAA6G,EAAA,EAAA7G,CAAA,GAAiB2G,EAAEG,OAAO5B,KAAOyB,EAAEG,OAAOnG,UAEvD,OACEoB,EAAAhB,EAAAiB,cAAC8C,EAAA,SAAD,KACE/C,EAAAhB,EAAAiB,cAAA,MAAIC,UAAU,sBAAd,sBACAF,EAAAhB,EAAAiB,cAAA,KAAGC,UAAU,QACXF,EAAAhB,EAAAiB,cAAA,KAAGC,UAAU,uBADf,iDAIAF,EAAAhB,EAAAiB,cAAA,mCACAD,EAAAhB,EAAAiB,cAAA,QACEC,UAAU,OACV8E,SAAU,SAAAJ,GACRA,EAAEK,iBACF4I,EAAapJ,EAAU0B,KAGzBnG,EAAAhB,EAAAiB,cAAA,OAAKC,UAAU,cACbF,EAAAhB,EAAAiB,cAAA,SACEa,KAAK,OACLqE,YAAY,oBACZhC,KAAK,SACLvE,MAAOqJ,EACPtD,SAAU,SAAAC,GAAC,OAAID,EAASC,IACxBQ,UAAQ,KAGZpF,EAAAhB,EAAAiB,cAAA,OAAKC,UAAU,cACbF,EAAAhB,EAAAiB,cAAA,SACEa,KAAK,OACLqE,YAAY,uBACZhC,KAAK,SACLvE,MAAO8N,EACP/H,SAAU,SAAAC,GAAC,OAAID,EAASC,IACxBQ,UAAQ,KAGZpF,EAAAhB,EAAAiB,cAAA,OAAKC,UAAU,cACbF,EAAAhB,EAAAiB,cAAA,SACEa,KAAK,OACLqE,YAAY,iBACZhC,KAAK,eACLvE,MAAO+N,EACPhI,SAAU,SAAAC,GAAC,OAAID,EAASC,OAG5B5E,EAAAhB,EAAAiB,cAAA,OAAKC,UAAU,cACbF,EAAAhB,EAAAiB,cAAA,uBACAD,EAAAhB,EAAAiB,cAAA,SACEa,KAAK,OACLqC,KAAK,OACLvE,MAAO4I,EACP7C,SAAU,SAAAC,GAAC,OAAID,EAASC,OAG5B5E,EAAAhB,EAAAiB,cAAA,OAAKC,UAAU,cACbF,EAAAhB,EAAAiB,cAAA,SACED,EAAAhB,EAAAiB,cAAA,SACEa,KAAK,WACLqC,KAAK,UACLsI,QAASJ,EACTzM,MAAOyM,EACP1G,SAAU,SAAAC,GACRF,EAAYzG,OAAA4G,EAAA,EAAA5G,CAAA,GAAKwG,EAAN,CAAgB4G,SAAUA,KACrCG,GAAgBD,MAEjB,IAVL,sBAcFvL,EAAAhB,EAAAiB,cAAA,OAAKC,UAAU,cACbF,EAAAhB,EAAAiB,cAAA,qBACAD,EAAAhB,EAAAiB,cAAA,SACEa,KAAK,OACLqC,KAAK,KACLvE,MAAO+D,EACPgC,SAAU,SAAAC,GAAC,OAAID,EAASC,IACxB8G,SAAUH,EAAiB,WAAa,MAG5CvL,EAAAhB,EAAAiB,cAAA,OAAKC,UAAU,cACbF,EAAAhB,EAAAiB,cAAA,YACEkD,KAAK,cACLwI,KAAK,KACLC,KAAK,IACLzG,YAAY,sBACZvG,MAAO0M,EACP3G,SAAU,SAAAC,GAAC,OAAID,EAASC,OAG5B5E,EAAAhB,EAAAiB,cAAA,SAAOa,KAAK,SAASZ,UAAU,yBAC/BF,EAAAhB,EAAAiB,cAAA,KAAGC,UAAU,qBAAqB2C,KAAK,kBAAvC,gBC0GOb,eACb,KACA,CAAEkE,iBAFWlE,CAGb8H,YAhOoB,SAAAvI,GAAgC,IAA7B2E,EAA6B3E,EAA7B2E,cAAeC,EAAc5E,EAAd4E,QAAc/B,EACpBC,mBAAS,CACvC+C,QAAS,GACT2C,QAAS,GACTC,SAAU,GACV/D,OAAQ,GACRgE,OAAQ,GACRC,eAAgB,GAChBC,IAAK,GACLC,QAAS,GACTC,SAAU,GACVC,SAAU,GACVC,QAAS,GACTC,UAAW,KAbuCjG,EAAAtG,OAAAuG,EAAA,EAAAvG,CAAAmG,EAAA,GAC7CK,EAD6CF,EAAA,GACnCG,EADmCH,EAAA,GAAAkG,EAgBFpG,oBAAS,GAhBPqG,EAAAzM,OAAAuG,EAAA,EAAAvG,CAAAwM,EAAA,GAgB7CE,EAhB6CD,EAAA,GAgBxBE,EAhBwBF,EAAA,GAmBlDtD,EAYE3C,EAZF2C,QACA2C,EAWEtF,EAXFsF,QACAC,EAUEvF,EAVFuF,SACA/D,EASExB,EATFwB,OACAgE,EAQExF,EARFwF,OACAC,EAOEzF,EAPFyF,eACAC,EAME1F,EANF0F,IACAC,EAKE3F,EALF2F,QACAC,EAIE5F,EAJF4F,SACAC,EAGE7F,EAHF6F,SACAC,EAEE9F,EAFF8F,QACAC,EACE/F,EADF+F,UAGI7F,EAAW,SAAAC,GAAC,OAChBF,EAAYzG,OAAA4G,EAAA,EAAA5G,CAAA,GAAKwG,EAANxG,OAAA6G,EAAA,EAAA7G,CAAA,GAAiB2G,EAAEG,OAAO5B,KAAOyB,EAAEG,OAAOnG,UAOvD,OACEoB,EAAAhB,EAAAiB,cAAC8C,EAAA,SAAD,KACE/C,EAAAhB,EAAAiB,cAAA,MAAIC,UAAU,sBAAd,uBACAF,EAAAhB,EAAAiB,cAAA,KAAGC,UAAU,QACXF,EAAAhB,EAAAiB,cAAA,KAAGC,UAAU,gBADf,8DAIAF,EAAAhB,EAAAiB,cAAA,mCACAD,EAAAhB,EAAAiB,cAAA,QAAMC,UAAU,OAAO8E,SAAU,SAAAJ,GAAC,OAbrB,SAAAA,GACfA,EAAEK,iBAEFiB,EAAczB,EAAU0B,GAUgBnB,CAASJ,KAC7C5E,EAAAhB,EAAAiB,cAAA,OAAKC,UAAU,cACbF,EAAAhB,EAAAiB,cAAA,UAAQkD,KAAK,SAASvE,MAAOqH,EAAQtB,SAAU,SAAAC,GAAC,OAAID,EAASC,KAC3D5E,EAAAhB,EAAAiB,cAAA,UAAQrB,MAAM,KAAd,gCACAoB,EAAAhB,EAAAiB,cAAA,UAAQrB,MAAM,aAAd,aACAoB,EAAAhB,EAAAiB,cAAA,UAAQrB,MAAM,oBAAd,oBACAoB,EAAAhB,EAAAiB,cAAA,UAAQrB,MAAM,oBAAd,oBACAoB,EAAAhB,EAAAiB,cAAA,UAAQrB,MAAM,WAAd,WACAoB,EAAAhB,EAAAiB,cAAA,UAAQrB,MAAM,uBAAd,uBACAoB,EAAAhB,EAAAiB,cAAA,UAAQrB,MAAM,cAAd,yBACAoB,EAAAhB,EAAAiB,cAAA,UAAQrB,MAAM,UAAd,UACAoB,EAAAhB,EAAAiB,cAAA,UAAQrB,MAAM,SAAd,UAEFoB,EAAAhB,EAAAiB,cAAA,SAAOC,UAAU,aAAjB,uDAIFF,EAAAhB,EAAAiB,cAAA,OAAKC,UAAU,cACbF,EAAAhB,EAAAiB,cAAA,SACEa,KAAK,OACLqE,YAAY,UACZhC,KAAK,UACLvE,MAAOwI,EACPzC,SAAU,SAAAC,GAAC,OAAID,EAASC,MAE1B5E,EAAAhB,EAAAiB,cAAA,SAAOC,UAAU,aAAjB,kDAIFF,EAAAhB,EAAAiB,cAAA,OAAKC,UAAU,cACbF,EAAAhB,EAAAiB,cAAA,SACEa,KAAK,OACLqE,YAAY,UACZhC,KAAK,UACLvE,MAAOmL,EACPpF,SAAU,SAAAC,GAAC,OAAID,EAASC,MAE1B5E,EAAAhB,EAAAiB,cAAA,SAAOC,UAAU,aAAjB,2CAIFF,EAAAhB,EAAAiB,cAAA,OAAKC,UAAU,cACbF,EAAAhB,EAAAiB,cAAA,SACEa,KAAK,OACLqE,YAAY,WACZhC,KAAK,WACLvE,MAAOoL,EACPrF,SAAU,SAAAC,GAAC,OAAID,EAASC,MAE1B5E,EAAAhB,EAAAiB,cAAA,SAAOC,UAAU,aAAjB,4CAIFF,EAAAhB,EAAAiB,cAAA,OAAKC,UAAU,cACbF,EAAAhB,EAAAiB,cAAA,SACEa,KAAK,OACLqE,YAAY,WACZhC,KAAK,SACLvE,MAAOqL,EACPtF,SAAU,SAAAC,GAAC,OAAID,EAASC,MAE1B5E,EAAAhB,EAAAiB,cAAA,SAAOC,UAAU,aAAjB,oEAIFF,EAAAhB,EAAAiB,cAAA,OAAKC,UAAU,cACbF,EAAAhB,EAAAiB,cAAA,SACEa,KAAK,OACLqE,YAAY,kBACZhC,KAAK,iBACLvE,MAAOsL,EACPvF,SAAU,SAAAC,GAAC,OAAID,EAASC,MAE1B5E,EAAAhB,EAAAiB,cAAA,SAAOC,UAAU,aAAjB,2EAKFF,EAAAhB,EAAAiB,cAAA,OAAKC,UAAU,cACbF,EAAAhB,EAAAiB,cAAA,YACEkF,YAAY,0BACZhC,KAAK,MACLvE,MAAOuL,EACPxF,SAAU,SAAAC,GAAC,OAAID,EAASC,MAE1B5E,EAAAhB,EAAAiB,cAAA,SAAOC,UAAU,aAAjB,oCAGFF,EAAAhB,EAAAiB,cAAA,OAAKC,UAAU,QACbF,EAAAhB,EAAAiB,cAAA,UACEa,KAAK,SACLZ,UAAU,gBACV0C,QAAS,kBAAMgI,GAAoBD,KAHrC,4BAOA3K,EAAAhB,EAAAiB,cAAA,yBAGD0K,GACC3K,EAAAhB,EAAAiB,cAAC8C,EAAA,SAAD,KACE/C,EAAAhB,EAAAiB,cAAA,OAAKC,UAAU,2BACbF,EAAAhB,EAAAiB,cAAA,KAAGC,UAAU,yBACbF,EAAAhB,EAAAiB,cAAA,SACEa,KAAK,OACLqE,YAAY,cACZhC,KAAK,UACLvE,MAAOwL,EACPzF,SAAU,SAAAC,GAAC,OAAID,EAASC,OAI5B5E,EAAAhB,EAAAiB,cAAA,OAAKC,UAAU,2BACbF,EAAAhB,EAAAiB,cAAA,KAAGC,UAAU,0BACbF,EAAAhB,EAAAiB,cAAA,SACEa,KAAK,OACLqE,YAAY,eACZhC,KAAK,WACLvE,MAAOyL,EACP1F,SAAU,SAAAC,GAAC,OAAID,EAASC,OAI5B5E,EAAAhB,EAAAiB,cAAA,OAAKC,UAAU,2BACbF,EAAAhB,EAAAiB,cAAA,KAAGC,UAAU,yBACbF,EAAAhB,EAAAiB,cAAA,SACEa,KAAK,OACLqE,YAAY,cACZhC,KAAK,UACLvE,MAAO2L,EACP5F,SAAU,SAAAC,GAAC,OAAID,EAASC,OAI5B5E,EAAAhB,EAAAiB,cAAA,OAAKC,UAAU,2BACbF,EAAAhB,EAAAiB,cAAA,KAAGC,UAAU,0BACbF,EAAAhB,EAAAiB,cAAA,SACEa,KAAK,OACLqE,YAAY,eACZhC,KAAK,WACLvE,MAAO0L,EACP3F,SAAU,SAAAC,GAAC,OAAID,EAASC,OAI5B5E,EAAAhB,EAAAiB,cAAA,OAAKC,UAAU,2BACbF,EAAAhB,EAAAiB,cAAA,KAAGC,UAAU,2BACbF,EAAAhB,EAAAiB,cAAA,SACEa,KAAK,OACLqE,YAAY,gBACZhC,KAAK,YACLvE,MAAO4L,EACP7F,SAAU,SAAAC,GAAC,OAAID,EAASC,QAMhC5E,EAAAhB,EAAAiB,cAAA,SAAOa,KAAK,SAASZ,UAAU,yBAC/BF,EAAAhB,EAAAiB,cAACyC,EAAA,EAAD,CAAMxC,UAAU,qBAAqByC,GAAG,cAAxC,gBC5KOuL,GArCK,SAAA3M,GAQd,IAAA6H,EAAA7H,EAPJoH,QAOImD,EAAA1C,EANFD,KAAQhC,EAMN2E,EANM3E,IAAKhE,EAMX2I,EANW3I,KAAM4I,EAMjBD,EANiBC,OACnB9F,EAKEmD,EALFnD,OACAmB,EAIEgC,EAJFhC,QACA4C,EAGEZ,EAHFY,SACAC,EAEEb,EAFFa,OAGF,OACEjK,EAAAhB,EAAAiB,cAAA,OAAKC,UAAU,oBACbF,EAAAhB,EAAAiB,cAAA,OAAKmI,IAAK2D,EAAQrD,IAAI,GAAGxI,UAAU,cACnCF,EAAAhB,EAAAiB,cAAA,WACED,EAAAhB,EAAAiB,cAAA,UAAKkD,GACLnD,EAAAhB,EAAAiB,cAAA,SACGgG,EADH,IACYmB,GAAWpH,EAAAhB,EAAAiB,cAAA,mBAAWmH,IAElCpH,EAAAhB,EAAAiB,cAAA,KAAGC,UAAU,QAAQ8J,GAAYhK,EAAAhB,EAAAiB,cAAA,YAAO+J,IACxChK,EAAAhB,EAAAiB,cAACyC,EAAA,EAAD,CAAMC,GAAE,YAAAf,OAAcuF,GAAOjH,UAAU,mBAAvC,iBAIFF,EAAAhB,EAAAiB,cAAA,UACGgK,EAAOkE,MAAM,EAAG,GAAGrI,IAAI,SAACsG,EAAOC,GAAR,OACtBrM,EAAAhB,EAAAiB,cAAA,MAAItB,IAAK0N,EAAOnM,UAAU,gBACxBF,EAAAhB,EAAAiB,cAAA,KAAGC,UAAU,iBADf,IACkCkM,QCkB7BpK,eAJS,SAAAzD,GAAK,MAAK,CAChCoK,QAASpK,EAAMoK,UAKf,CAAEyF,YlBhBuB,iCAAAlL,EAAAjF,OAAAa,EAAA,EAAAb,CAAAc,EAAAC,EAAAC,KAAM,SAAAsE,EAAM7C,GAAN,IAAAc,EAAA,OAAAzC,EAAAC,EAAAI,KAAA,SAAAuE,GAAA,cAAAA,EAAArE,KAAAqE,EAAApE,MAAA,cAC/BmB,EAAS,CAAEI,KTvBgB,kBSsBI6C,EAAArE,KAAA,EAAAqE,EAAApE,KAAA,EAGX2B,IAAMQ,IAAN,yDAHW,OAGvBF,EAHuBmC,EAAAhC,KAO7BjB,EAAS,CACPI,KThCsB,eSiCtBC,QAASS,EAAIK,OATc8B,EAAApE,KAAA,gBAAAoE,EAAArE,KAAA,EAAAqE,EAAA7B,GAAA6B,EAAA,SAY7BjD,EAAS,CACPI,KTjCuB,gBSkCvBC,QAAS,CAAEV,IAAKsD,EAAA7B,GAAIkC,SAASgC,WAAYC,OAAQtC,EAAA7B,GAAIkC,SAASiC,UAdnC,yBAAAtC,EAAA9D,SAAA0D,EAAA,iBAAN,gBAAAY,GAAA,OAAAjB,EAAApD,MAAA3B,KAAA4B,YAAA,KkBcZiC,CAxCE,SAAAT,GAAqD,IAAlD6M,EAAkD7M,EAAlD6M,YAAkDhF,EAAA7H,EAArCoH,QAAW0F,EAA0BjF,EAA1BiF,SAAU7P,EAAgB4K,EAAhB5K,QAKpD,OAJA6K,oBAAU,WACR+E,KACC,CAACA,IAGFpO,EAAAhB,EAAAiB,cAAC8C,EAAA,SAAD,KACGvE,EACCwB,EAAAhB,EAAAiB,cAACkI,EAAD,MAEAnI,EAAAhB,EAAAiB,cAAC8C,EAAA,SAAD,KACE/C,EAAAhB,EAAAiB,cAAA,MAAIC,UAAU,sBAAd,cACAF,EAAAhB,EAAAiB,cAAA,KAAGC,UAAU,QACXF,EAAAhB,EAAAiB,cAAA,KAAGC,UAAU,0BADf,uCAIAF,EAAAhB,EAAAiB,cAAA,OAAKC,UAAU,YACZmO,EAAS7N,OAAS,EACjB6N,EAASvI,IAAI,SAAA6C,GAAO,OAClB3I,EAAAhB,EAAAiB,cAACqO,GAAD,CAAa3P,IAAKgK,EAAQxB,IAAKwB,QAASA,MAG1C3I,EAAAhB,EAAAiB,cAAA,uCCvBRsO,GAAW,SAAAhN,GAAA,IACfiN,EADejN,EACfiN,QACAC,EAFelN,EAEfkN,WACAC,EAHenN,EAGfmN,WACAzM,EAJeV,EAIfU,KAJe0M,EAAApN,EAKfwC,KAAQoD,EALOwH,EAKPxH,IAAKyH,EALED,EAKFC,KAAMzL,EALJwL,EAKIxL,KAAM4I,EALV4C,EAKU5C,OAAQ5C,EALlBwF,EAKkBxF,KAAM0F,EALxBF,EAKwBE,MAAOC,EAL/BH,EAK+BG,SAAUC,EALzCJ,EAKyCI,KACxDC,EANezN,EAMfyN,YANe,OAQfhP,EAAAhB,EAAAiB,cAAA,OAAKC,UAAU,0BACbF,EAAAhB,EAAAiB,cAAA,WACED,EAAAhB,EAAAiB,cAACyC,EAAA,EAAD,CAAMC,GAAE,YAAAf,OAAcuH,IACpBnJ,EAAAhB,EAAAiB,cAAA,OAAKC,UAAU,YAAYkI,IAAK2D,EAAQrD,IAAI,KAC5C1I,EAAAhB,EAAAiB,cAAA,UAAKkD,KAGTnD,EAAAhB,EAAAiB,cAAA,WACED,EAAAhB,EAAAiB,cAAA,KAAGC,UAAU,QAAQ0O,GACrB5O,EAAAhB,EAAAiB,cAAA,KAAGC,UAAU,aAAb,UACSF,EAAAhB,EAAAiB,cAACqH,EAAAtI,EAAD,CAAQuI,OAAO,cAAcwH,IAGrCC,GACChP,EAAAhB,EAAAiB,cAAC8C,EAAA,SAAD,KACE/C,EAAAhB,EAAAiB,cAAA,UACE2C,QAAS,SAAAgC,GAAC,OAAI4J,EAAQrH,IACtBrG,KAAK,SACLZ,UAAU,iBAEVF,EAAAhB,EAAAiB,cAAA,KAAGC,UAAU,qBAAsB,IACnCF,EAAAhB,EAAAiB,cAAA,YAAO4O,EAAMrO,OAAS,GAAKR,EAAAhB,EAAAiB,cAAA,YAAO4O,EAAMrO,UAE1CR,EAAAhB,EAAAiB,cAAA,UACE2C,QAAS,SAAAgC,GAAC,OAAI6J,EAAWtH,IACzBrG,KAAK,SACLZ,UAAU,iBAEVF,EAAAhB,EAAAiB,cAAA,KAAGC,UAAU,wBAEfF,EAAAhB,EAAAiB,cAACyC,EAAA,EAAD,CAAMC,GAAE,UAAAf,OAAYuF,GAAOjH,UAAU,mBAArC,aACa,IACV4O,EAAStO,OAAS,GACjBR,EAAAhB,EAAAiB,cAAA,QAAMC,UAAU,iBAAiB4O,EAAStO,UAG5CyB,EAAKzD,SAAW2K,IAASlH,EAAKkH,KAAKhC,KACnCnH,EAAAhB,EAAAiB,cAAA,UACE2C,QAAS,SAAAgC,GAAC,OAAI8J,EAAWvH,IACzBrG,KAAK,SACLZ,UAAU,kBAEVF,EAAAhB,EAAAiB,cAAA,KAAGC,UAAU,sBAS3BqO,GAASU,aAAe,CACtBD,aAAa,GAWf,IAIehN,eAJS,SAAAzD,GAAK,MAAK,CAChC0D,KAAM1D,EAAM0D,OAKZ,CAAEuM,QCnDmB,SAAA7N,GAAE,sBAAAuC,EAAAjF,OAAAa,EAAA,EAAAb,CAAAc,EAAAC,EAAAC,KAAI,SAAAsE,EAAM7C,GAAN,IAAAc,EAAA,OAAAzC,EAAAC,EAAAI,KAAA,SAAAuE,GAAA,cAAAA,EAAArE,KAAAqE,EAAApE,MAAA,cAAAoE,EAAArE,KAAA,EAAAqE,EAAApE,KAAA,EAEP2B,IAAMiK,IAAN,4DAAAvJ,OAC4CjB,IAHrC,OAEnBa,EAFmBmC,EAAAhC,KAKzBjB,EAAS,CACPI,K7BpBsB,e6BqBtBC,QAAS,CAAEJ,KAAIkO,MAAOrN,EAAIK,QAPH8B,EAAApE,KAAA,gBAAAoE,EAAArE,KAAA,EAAAqE,EAAA7B,GAAA6B,EAAA,SAUzBjD,EAAS,CACPI,K7B1BoB,a6B2BpBC,QAAS,CAAEV,IAAKsD,EAAA7B,GAAIkC,SAASgC,WAAYC,OAAQtC,EAAA7B,GAAIkC,SAASiC,UAZvC,yBAAAtC,EAAA9D,SAAA0D,EAAA,iBAAJ,gBAAAY,GAAA,OAAAjB,EAAApD,MAAA3B,KAAA4B,YAAA,IDmDZ0O,WCjCa,SAAA9N,GAAE,sBAAA2C,EAAArF,OAAAa,EAAA,EAAAb,CAAAc,EAAAC,EAAAC,KAAI,SAAAuG,EAAM9E,GAAN,IAAAc,EAAA,OAAAzC,EAAAC,EAAAI,KAAA,SAAAqG,GAAA,cAAAA,EAAAnG,KAAAmG,EAAAlG,MAAA,cAAAkG,EAAAnG,KAAA,EAAAmG,EAAAlG,KAAA,EAEV2B,IAAMiK,IAAN,8DAAAvJ,OAC8CjB,IAHpC,OAEtBa,EAFsBiE,EAAA9D,KAK5BjB,EAAS,CACPI,K7BtCsB,e6BuCtBC,QAAS,CAAEJ,KAAIkO,MAAOrN,EAAIK,QAPA4D,EAAAlG,KAAA,gBAAAkG,EAAAnG,KAAA,EAAAmG,EAAA3D,GAAA2D,EAAA,SAU5B/E,EAAS,CACPI,K7B5CoB,a6B6CpBC,QAAS,CAAEV,IAAKoF,EAAA3D,GAAIkC,SAASgC,WAAYC,OAAQR,EAAA3D,GAAIkC,SAASiC,UAZpC,yBAAAR,EAAA5F,SAAA2F,EAAA,iBAAJ,gBAAAG,GAAA,OAAArC,EAAAxD,MAAA3B,KAAA4B,YAAA,IDiCH2O,WCfC,SAAA/N,GAAE,sBAAA4E,EAAAtH,OAAAa,EAAA,EAAAb,CAAAc,EAAAC,EAAAC,KAAI,SAAAmD,EAAM1B,GAAN,OAAA3B,EAAAC,EAAAI,KAAA,SAAAiD,GAAA,cAAAA,EAAA/C,KAAA+C,EAAA9C,MAAA,cAAA8C,EAAA/C,KAAA,EAAA+C,EAAA9C,KAAA,EAEtB2B,IAAM4F,OAAN,uDAAAlF,OACmDjB,IAH7B,OAK5BD,EAAS,CACPI,K7BvDqB,c6BwDrBC,QAASJ,IAGXD,EAASN,EAAS,eAAgB,YAVNiC,EAAA9C,KAAA,gBAAA8C,EAAA/C,KAAA,EAAA+C,EAAAP,GAAAO,EAAA,SAY5B3B,EAAS,CACPI,K7BhEoB,a6BiEpBC,QAAS,CAAEV,IAAKgC,EAAAP,GAAIkC,SAASgC,WAAYC,OAAQ5D,EAAAP,GAAIkC,SAASiC,UAdpC,yBAAA5D,EAAAxC,SAAAuC,EAAA,iBAAJ,gBAAAE,GAAA,OAAAiD,EAAAzF,MAAA3B,KAAA4B,YAAA,KDabiC,CAGbuM,IE5CavM,eACb,KACA,CAAEkN,QD8CmB,SAAAzK,GAAQ,sBAAAtC,EAAAlE,OAAAa,EAAA,EAAAb,CAAAc,EAAAC,EAAAC,KAAI,SAAAoH,EAAM3F,GAAN,IAAA8C,EAAAhC,EAAA,OAAAzC,EAAAC,EAAAI,KAAA,SAAAkH,GAAA,cAAAA,EAAAhH,KAAAgH,EAAA/G,MAAA,cAC3BiE,EAAS,CACbpC,QAAS,CACPwC,eAAgB,qBAHa0C,EAAAhH,KAAA,EAAAgH,EAAA/G,KAAA,EAQb2B,IAAM6C,KAAN,uDAEhBU,EACAjB,GAX6B,OAQzBhC,EARyB8E,EAAA3E,KAa/BjB,EAAS,CACPI,K7BlFkB,W6BmFlBC,QAASS,EAAIK,OAGfnB,EAASN,EAAS,eAAgB,YAlBHkG,EAAA/G,KAAA,gBAAA+G,EAAAhH,KAAA,EAAAgH,EAAAxE,GAAAwE,EAAA,SAoB/B5F,EAAS,CACPI,K7B5FoB,a6B6FpBC,QAAS,CAAEV,IAAKiG,EAAAxE,GAAIkC,SAASgC,WAAYC,OAAQK,EAAAxE,GAAIkC,SAASiC,UAtBjC,yBAAAK,EAAAzG,SAAAwG,EAAA,iBAAJ,gBAAAG,GAAA,OAAArE,EAAArC,MAAA3B,KAAA4B,YAAA,KChDhBiC,CAnCE,SAAAT,GAAiB,IAAd2N,EAAc3N,EAAd2N,QAAc9K,EACRC,mBAAS,IADDE,EAAAtG,OAAAuG,EAAA,EAAAvG,CAAAmG,EAAA,GACzBwK,EADyBrK,EAAA,GACnB4K,EADmB5K,EAAA,GAGhC,OACEvE,EAAAhB,EAAAiB,cAAA,OAAKC,UAAU,aACbF,EAAAhB,EAAAiB,cAAA,OAAKC,UAAU,gBACbF,EAAAhB,EAAAiB,cAAA,4BAEFD,EAAAhB,EAAAiB,cAAA,QACEC,UAAU,YACV8E,SAAU,SAAAJ,GACRA,EAAEK,iBACFiK,EAAQ,CAAEN,SACVO,EAAQ,MAGVnP,EAAAhB,EAAAiB,cAAA,YACEkD,KAAK,OACLwI,KAAK,KACLC,KAAK,IACLzG,YAAY,uBACZC,UAAQ,EACRxG,MAAOgQ,EACPjK,SAAU,SAAAC,GAAC,OAAIuK,EAAQvK,EAAEG,OAAOnG,UAElCoB,EAAAhB,EAAAiB,cAAA,SAAOa,KAAK,SAASZ,UAAU,oBAAoBtB,MAAM,eCSlDoD,eAJS,SAAAzD,GAAK,MAAK,CAChCwF,KAAMxF,EAAMwF,OAKZ,CAAEqL,SF3BoB,iCAAA7N,EAAAtD,OAAAa,EAAA,EAAAb,CAAAc,EAAAC,EAAAC,KAAM,SAAAC,EAAMwB,GAAN,IAAAc,EAAA,OAAAzC,EAAAC,EAAAI,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAER2B,IAAMQ,IAAN,uDAFQ,OAEpBF,EAFoBnC,EAAAsC,KAK1BjB,EAAS,CACPI,K7BLmB,Y6BMnBC,QAASS,EAAIK,OAPWxC,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAyC,GAAAzC,EAAA,SAU1BqB,EAAS,CACPI,K7BRoB,a6BSpBC,QAAS,CAAEV,IAAKhB,EAAAyC,GAAIkC,SAASgC,WAAYC,OAAQ5G,EAAAyC,GAAIkC,SAASiC,UAZtC,yBAAA5G,EAAAQ,SAAAX,EAAA,iBAAN,gBAAA6C,GAAA,OAAAR,EAAAzB,MAAA3B,KAAA4B,YAAA,KEyBTiC,CAhCD,SAAAT,GAA4C,IAAzC6N,EAAyC7N,EAAzC6N,SAAyCT,EAAApN,EAA/BwC,KAAQsL,EAAuBV,EAAvBU,MAAO7Q,EAAgBmQ,EAAhBnQ,QAKxC,OAJA6K,oBAAU,WACR+F,KACC,CAACA,IAEG5Q,EACLwB,EAAAhB,EAAAiB,cAACkI,EAAD,MAEAnI,EAAAhB,EAAAiB,cAAC8C,EAAA,SAAD,KACE/C,EAAAhB,EAAAiB,cAAA,MAAIC,UAAU,sBACZF,EAAAhB,EAAAiB,cAAA,KAAGC,UAAU,QACXF,EAAAhB,EAAAiB,cAAA,KAAGC,UAAU,gBADf,6BAGAF,EAAAhB,EAAAiB,cAACqP,GAAD,MAECD,EAAMvJ,IAAI,SAAA/B,GAAI,OACb/D,EAAAhB,EAAAiB,cAACsP,GAAD,CAAU5Q,IAAKoF,EAAKoD,IAAKpD,KAAMA,UCiB1B/B,eACb,KACA,CAAEwN,WH4FsB,SAACC,EAAQhL,GAAT,sBAAAqJ,EAAA7P,OAAAa,EAAA,EAAAb,CAAAc,EAAAC,EAAAC,KAAsB,SAAA8O,EAAMrN,GAAN,IAAA8C,EAAAhC,EAAA,OAAAzC,EAAAC,EAAAI,KAAA,SAAA4O,GAAA,cAAAA,EAAA1O,KAAA0O,EAAAzO,MAAA,cACxCiE,EAAS,CACbpC,QAAS,CACPwC,eAAgB,qBAH0BoK,EAAA1O,KAAA,EAAA0O,EAAAzO,KAAA,EAQ1B2B,IAAM6C,KAAN,+DAAAnC,OAC+C6N,GAC/DhL,EACAjB,GAX0C,OAQtChC,EARsCwM,EAAArM,KAa5CjB,EAAS,CACPI,K7B/HqB,c6BgIrBC,QAASS,EAAIK,OAGfnB,EAASN,EAAS,gBAAiB,YAlBS4N,EAAAzO,KAAA,gBAAAyO,EAAA1O,KAAA,EAAA0O,EAAAlM,GAAAkM,EAAA,SAoB5CtN,EAAS,CACPI,K7B1IoB,a6B2IpBC,QAAS,CAAEV,IAAK2N,EAAAlM,GAAIkC,SAASgC,WAAYC,OAAQ+H,EAAAlM,GAAIkC,SAASiC,UAtBpB,yBAAA+H,EAAAnO,SAAAkO,EAAA,iBAAtB,gBAAAE,GAAA,OAAAH,EAAAhO,MAAA3B,KAAA4B,YAAA,KG9FXiC,CAnCK,SAAAT,GAA4B,IAAzBkO,EAAyBlO,EAAzBkO,OAAQD,EAAiBjO,EAAjBiO,WAAiBpL,EACtBC,mBAAS,IADaE,EAAAtG,OAAAuG,EAAA,EAAAvG,CAAAmG,EAAA,GACvCwK,EADuCrK,EAAA,GACjC4K,EADiC5K,EAAA,GAG9C,OACEvE,EAAAhB,EAAAiB,cAAA,OAAKC,UAAU,aACbF,EAAAhB,EAAAiB,cAAA,OAAKC,UAAU,gBACbF,EAAAhB,EAAAiB,cAAA,8BAEFD,EAAAhB,EAAAiB,cAAA,QACEC,UAAU,YACV8E,SAAU,SAAAJ,GACRA,EAAEK,iBACFuK,EAAWC,EAAQ,CAAEb,SACrBO,EAAQ,MAGVnP,EAAAhB,EAAAiB,cAAA,YACEkD,KAAK,OACLwI,KAAK,KACLC,KAAK,IACLzG,YAAY,uBACZC,UAAQ,EACRxG,MAAOgQ,EACPjK,SAAU,SAAAC,GAAC,OAAIuK,EAAQvK,EAAEG,OAAOnG,UAElCoB,EAAAhB,EAAAiB,cAAA,SAAOa,KAAK,SAASZ,UAAU,oBAAoBtB,MAAM,eCoBlDoD,eAJS,SAAAzD,GAAK,MAAK,CAChC0D,KAAM1D,EAAM0D,OAKZ,CAAEyN,cJ8GyB,SAACD,EAAQE,GAAT,sBAAAhJ,EAAA1I,OAAAa,EAAA,EAAAb,CAAAc,EAAAC,EAAAC,KAAuB,SAAA2H,EAAMlG,GAAN,OAAA3B,EAAAC,EAAAI,KAAA,SAAAyH,GAAA,cAAAA,EAAAvH,KAAAuH,EAAAtH,MAAA,cAAAsH,EAAAvH,KAAA,EAAAuH,EAAAtH,KAAA,EAE9B2B,IAAM4F,OAAN,+DAAAlF,OAC+C6N,EAD/C,KAAA7N,OACyD+N,IAH3B,OAAA9I,EAAAlF,KAKhDjB,EAAS,CACPI,K7BlJwB,iB6BoJxBC,QAAS4O,IAGXjP,EAASN,EAAS,kBAAmB,YAXWyG,EAAAtH,KAAA,gBAAAsH,EAAAvH,KAAA,EAAAuH,EAAA/E,GAAA+E,EAAA,SAahDnG,EAAS,CACPI,K7B/JoB,a6BgKpBC,QAAS,CAAEV,IAAKwG,EAAA/E,GAAIkC,SAASgC,WAAYC,OAAQY,EAAA/E,GAAIkC,SAASiC,UAfhB,yBAAAY,EAAAhH,SAAA+G,EAAA,iBAAvB,gBAAAG,GAAA,OAAAJ,EAAA7G,MAAA3B,KAAA4B,YAAA,KIhHdiC,CA5CK,SAAAT,GAKd,IAJJkO,EAIIlO,EAJJkO,OAIIG,EAAArO,EAHJsO,QAAW1I,EAGPyI,EAHOzI,IAAKyH,EAGZgB,EAHYhB,KAAMzL,EAGlByM,EAHkBzM,KAAM4I,EAGxB6D,EAHwB7D,OAAQ5C,EAGhCyG,EAHgCzG,KAAM4F,EAGtCa,EAHsCb,KAC1C9M,EAEIV,EAFJU,KACAyN,EACInO,EADJmO,cAEA,OACE1P,EAAAhB,EAAAiB,cAAA,OAAKC,UAAU,0BACbF,EAAAhB,EAAAiB,cAAA,WACED,EAAAhB,EAAAiB,cAACyC,EAAA,EAAD,CAAMC,GAAE,YAAAf,OAAcuH,IACpBnJ,EAAAhB,EAAAiB,cAAA,OAAKC,UAAU,YAAYkI,IAAK2D,EAAQrD,IAAI,KAC5C1I,EAAAhB,EAAAiB,cAAA,UAAKkD,KAGTnD,EAAAhB,EAAAiB,cAAA,WACED,EAAAhB,EAAAiB,cAAA,KAAGC,UAAU,QAAQ0O,GACrB5O,EAAAhB,EAAAiB,cAAA,KAAGC,UAAU,aAAb,aACYF,EAAAhB,EAAAiB,cAACqH,EAAAtI,EAAD,CAAQ8Q,OAAO,cAAcf,KAEvC9M,EAAKzD,SAAW2K,IAASlH,EAAKkH,KAAKhC,KACnCnH,EAAAhB,EAAAiB,cAAA,UACE2C,QAAS,SAAAgC,GAAC,OAAI8K,EAAcD,EAAQtI,IACpCrG,KAAK,SACLZ,UAAU,kBAEVF,EAAAhB,EAAAiB,cAAA,KAAGC,UAAU,sBCWV8B,eAJS,SAAAzD,GAAK,MAAK,CAChCwF,KAAMxF,EAAMwF,OAKZ,CAAEgM,QLwEmB,SAAApP,GAAE,sBAAAqK,EAAA/M,OAAAa,EAAA,EAAAb,CAAAc,EAAAC,EAAAC,KAAI,SAAAgM,EAAMvK,GAAN,IAAAc,EAAA,OAAAzC,EAAAC,EAAAI,KAAA,SAAA8L,GAAA,cAAAA,EAAA5L,KAAA4L,EAAA3L,MAAA,cAAA2L,EAAA5L,KAAA,EAAA4L,EAAA3L,KAAA,EAEP2B,IAAMQ,IAAN,uDAAAE,OACuCjB,IAHhC,OAEnBa,EAFmB0J,EAAAvJ,KAKzBjB,EAAS,CACPI,K7B1GkB,W6B2GlBC,QAASS,EAAIK,OAPUqJ,EAAA3L,KAAA,gBAAA2L,EAAA5L,KAAA,EAAA4L,EAAApJ,GAAAoJ,EAAA,SAUzBxK,EAAS,CACPI,K7B9GoB,a6B+GpBC,QAAS,CAAEV,IAAK6K,EAAApJ,GAAIkC,SAASgC,WAAYC,OAAQiF,EAAApJ,GAAIkC,SAASiC,UAZvC,yBAAAiF,EAAArL,SAAAoL,EAAA,iBAAJ,gBAAAG,GAAA,OAAAJ,EAAAlL,MAAA3B,KAAA4B,YAAA,KK1EViC,CAhCF,SAAAT,GAAiD,IAA9CwO,EAA8CxO,EAA9CwO,QAA8CpB,EAAApN,EAArCwC,KAAQA,EAA6B4K,EAA7B5K,KAAMvF,EAAuBmQ,EAAvBnQ,QAAW8O,EAAY/L,EAAZ+L,MAKhD,OAJAjE,oBAAU,WACR0G,EAAQzC,EAAMC,OAAO5M,KACpB,CAACoP,IAEGvR,GAAoB,OAATuF,EAChB/D,EAAAhB,EAAAiB,cAACkI,EAAD,MAEAnI,EAAAhB,EAAAiB,cAAC8C,EAAA,SAAD,KACE/C,EAAAhB,EAAAiB,cAACyC,EAAA,EAAD,CAAMC,GAAI,SAAUzC,UAAU,OAA9B,iBAGAF,EAAAhB,EAAAiB,cAACsP,GAAD,CAAUxL,KAAMA,EAAMiL,aAAa,IACnChP,EAAAhB,EAAAiB,cAAC+P,GAAD,CAAaP,OAAQ1L,EAAKoD,MAC1BnH,EAAAhB,EAAAiB,cAAA,OAAKC,UAAU,YACZ6D,EAAK+K,SAAShJ,IAAI,SAAA+J,GAAO,OACxB7P,EAAAhB,EAAAiB,cAACgQ,GAAD,CAAatR,IAAKkR,EAAQ1I,IAAK0I,QAASA,EAASJ,OAAQ1L,EAAKoD,gDCzBlE+I,GAAe,GCSfA,GAAe,CACnBjP,MAAOQ,aAAa0O,QAAQ,SAC5B3N,gBAAiB,KACjBhE,SAAS,EACT2K,KAAM,MCNF+G,GAAe,CACnBvH,QAAS,KACT0F,SAAU,GACVzB,MAAO,GACPpO,SAAS,EACT0F,MAAO,ICHHgM,GAAe,CACnBb,MAAO,GACPtL,KAAM,KACNvF,SAAS,EACT0F,MAAO,ICTMkM,8BAAgB,CAC7BvK,MJHa,WAAuC,IAA9BtH,EAA8BwB,UAAAS,OAAA,QAAAC,IAAAV,UAAA,GAAAA,UAAA,GAAtBmQ,GAAcG,EAAQtQ,UAAAS,OAAA,EAAAT,UAAA,QAAAU,EAC5CK,EAAkBuP,EAAlBvP,KAAMC,EAAYsP,EAAZtP,QAEd,OAAQD,GACN,InCRqB,YmCSnB,SAAAc,OAAA3D,OAAAqS,GAAA,EAAArS,CAAWM,GAAX,CAAkBwC,IACpB,InCTwB,emCUtB,OAAOxC,EAAMgS,OAAO,SAAA1K,GAAK,OAAIA,EAAMlF,KAAOI,IAC5C,QACE,OAAOxC,IILX0D,KHUa,WAAuC,IAA9B1D,EAA8BwB,UAAAS,OAAA,QAAAC,IAAAV,UAAA,GAAAA,UAAA,GAAtBmQ,GAAcG,EAAQtQ,UAAAS,OAAA,EAAAT,UAAA,QAAAU,EAC5CK,EAAkBuP,EAAlBvP,KAAMC,EAAYsP,EAAZtP,QACd,OAAQD,GACN,IpCjBuB,coCkBrB,OAAO7C,OAAA4G,EAAA,EAAA5G,CAAA,GACFM,EADL,CAEEiE,iBAAiB,EACjBhE,SAAS,EACT2K,KAAMpI,IAEV,IpC1B4B,mBoC2B5B,IpCvByB,gBoCyBvB,OADAU,aAAa+O,QAAQ,QAASzP,EAAQE,OAC/BhD,OAAA4G,EAAA,EAAA5G,CAAA,GACFM,EACAwC,EAFL,CAGEyB,iBAAiB,EACjBhE,SAAS,IAEb,IpClCyB,gBoCmCzB,IpCjCsB,aoCkCtB,IpChCsB,aoCiCtB,IpChCkB,SoCiClB,IpC1B2B,kBoC4BzB,OADAiD,aAAagP,WAAW,SACjBxS,OAAA4G,EAAA,EAAA5G,CAAA,GACFM,EADL,CAEE0C,MAAO,KACPuB,iBAAiB,EACjBhE,SAAS,IAGb,QACE,OAAOD,IG1CXoK,QFQa,WAAuC,IAA9BpK,EAA8BwB,UAAAS,OAAA,QAAAC,IAAAV,UAAA,GAAAA,UAAA,GAAtBmQ,GAAcG,EAAQtQ,UAAAS,OAAA,EAAAT,UAAA,QAAAU,EAC5CK,EAAkBuP,EAAlBvP,KAAMC,EAAYsP,EAAZtP,QAEd,OAAQD,GACN,IrCZuB,cqCavB,IrCT0B,iBqCUxB,OAAO7C,OAAA4G,EAAA,EAAA5G,CAAA,GACFM,EADL,CAEEoK,QAAS5H,EACTvC,SAAS,IAEb,IrClBwB,eqCmBtB,OAAOP,OAAA4G,EAAA,EAAA5G,CAAA,GACFM,EADL,CAEE8P,SAAUtN,EACVvC,SAAS,IAEb,IrCpByB,gBqCqBvB,OAAOP,OAAA4G,EAAA,EAAA5G,CAAA,GACFM,EADL,CAEE2F,MAAOnD,EACPvC,SAAS,IAEb,IrC5ByB,gBqC6BvB,OAAOP,OAAA4G,EAAA,EAAA5G,CAAA,GACFM,EADL,CAEEoK,QAAS,KACTiE,MAAO,GACPpO,SAAS,IAEb,IrCpCqB,YqCqCnB,OAAOP,OAAA4G,EAAA,EAAA5G,CAAA,GACFM,EADL,CAEEqO,MAAO7L,EACPvC,SAAS,IAEb,QACE,OAAOD,IE5CXwF,KDQa,WAAuC,IAA9BxF,EAA8BwB,UAAAS,OAAA,QAAAC,IAAAV,UAAA,GAAAA,UAAA,GAAtBmQ,GAAcG,EAAQtQ,UAAAS,OAAA,EAAAT,UAAA,QAAAU,EAC5CK,EAAkBuP,EAAlBvP,KAAMC,EAAYsP,EAAZtP,QAEd,OAAQD,GACN,ItCNqB,YsCOnB,OAAO7C,OAAA4G,EAAA,EAAA5G,CAAA,GACFM,EADL,CAEE8Q,MAAOtO,EACPvC,SAAS,IAEb,ItCXoB,WsCYlB,OAAOP,OAAA4G,EAAA,EAAA5G,CAAA,GACFM,EADL,CAEEwF,KAAMhD,EACNvC,SAAS,IAEb,ItCboB,WsCclB,OAAOP,OAAA4G,EAAA,EAAA5G,CAAA,GACFM,EADL,CAEE8Q,MAAK,CAAGtO,GAAHa,OAAA3D,OAAAqS,GAAA,EAAArS,CAAeM,EAAM8Q,QAC1B7Q,SAAS,IAEb,ItCpBuB,csCqBrB,OAAOP,OAAA4G,EAAA,EAAA5G,CAAA,GACFM,EADL,CAEE8Q,MAAO9Q,EAAM8Q,MAAMkB,OAAO,SAAAxM,GAAI,OAAIA,EAAKoD,MAAQpG,IAC/CvC,SAAS,IAEb,ItC5BsB,asC6BpB,OAAOP,OAAA4G,EAAA,EAAA5G,CAAA,GACFM,EADL,CAEE2F,MAAOnD,EACPvC,SAAS,IAEb,ItCjCwB,esCkCtB,OAAOP,OAAA4G,EAAA,EAAA5G,CAAA,GACFM,EADL,CAEE8Q,MAAO9Q,EAAM8Q,MAAMvJ,IAAI,SAAA/B,GAAI,OACzBA,EAAKoD,MAAQpG,EAAQJ,GAArB1C,OAAA4G,EAAA,EAAA5G,CAAA,GAA+B8F,EAA/B,CAAqC8K,MAAO9N,EAAQ8N,QAAU9K,IAEhEvF,SAAS,IAEb,ItCtCuB,csCuCrB,OAAOP,OAAA4G,EAAA,EAAA5G,CAAA,GACFM,EADL,CAEEwF,KAAK9F,OAAA4G,EAAA,EAAA5G,CAAA,GAAMM,EAAMwF,KAAb,CAAmB+K,SAAU/N,IACjCvC,SAAS,IAEb,ItC3C0B,iBsC4CxB,OAAOP,OAAA4G,EAAA,EAAA5G,CAAA,GACFM,EADL,CAEEwF,KAAK9F,OAAA4G,EAAA,EAAA5G,CAAA,GACAM,EAAMwF,KADP,CAGF+K,SAAUvQ,EAAMwF,KAAK+K,SAASyB,OAE5B,SAAAV,GAAO,OAAIA,EAAQ1I,MAAQpG,MAG/BvC,SAAS,IAEb,QACE,OAAOD,MEzEPmS,GAAa,CAACC,MAQLC,GANDC,uBACZC,GALmB,GAOnBC,+BAAoBC,mBAAelR,WAAf,EAAmB4Q,MCerCjP,aAAaR,OACfD,EAAaS,aAAaR,OAG5B,IAmDetD,KAnDH,WAOV,OAJA0L,oBAAU,WACRuH,GAAMlQ,SAASY,MACd,IAGDtB,EAAAhB,EAAAiB,cAACgR,EAAA,EAAD,CAAUL,MAAOA,IACf5Q,EAAAhB,EAAAiB,cAACyC,EAAA,EAAD,KACE1C,EAAAhB,EAAAiB,cAAC8C,EAAA,SAAD,KACE/C,EAAAhB,EAAAiB,cAACiR,EAAD,MACAlR,EAAAhB,EAAAiB,cAACiF,EAAA,EAAD,CAAOiM,OAAK,EAACC,KAAK,IAAI3H,UAAWzG,IACjChD,EAAAhB,EAAAiB,cAAA,WAASC,UAAU,aACjBF,EAAAhB,EAAAiB,cAACoR,EAAD,MACArR,EAAAhB,EAAAiB,cAACiF,EAAA,EAAD,KACElF,EAAAhB,EAAAiB,cAACiF,EAAA,EAAD,CAAOiM,OAAK,EAACC,KAAK,YAAY3H,UAAW6H,IACzCtR,EAAAhB,EAAAiB,cAACiF,EAAA,EAAD,CAAOiM,OAAK,EAACC,KAAK,SAAS3H,UAAW8H,IACtCvR,EAAAhB,EAAAiB,cAACiF,EAAA,EAAD,CAAOiM,OAAK,EAACC,KAAK,YAAY3H,UAAW+H,KACzCxR,EAAAhB,EAAAiB,cAACiF,EAAA,EAAD,CAAOiM,OAAK,EAACC,KAAK,eAAe3H,UAAWgI,KAC5CzR,EAAAhB,EAAAiB,cAACyR,EAAD,CAAcP,OAAK,EAACC,KAAK,aAAa3H,UAAWkI,IACjD3R,EAAAhB,EAAAiB,cAACyR,EAAD,CACEP,OAAK,EACLC,KAAK,kBACL3H,UAAWmI,KAEb5R,EAAAhB,EAAAiB,cAACyR,EAAD,CACEP,OAAK,EACLC,KAAK,gBACL3H,UAAWoI,IAEb7R,EAAAhB,EAAAiB,cAACyR,EAAD,CACEP,OAAK,EACLC,KAAK,kBACL3H,UAAWqI,IAEb9R,EAAAhB,EAAAiB,cAACyR,EAAD,CACEP,OAAK,EACLC,KAAK,iBACL3H,UAAWsI,KAEb/R,EAAAhB,EAAAiB,cAACyR,EAAD,CAAcP,OAAK,EAACC,KAAK,SAAS3H,UAAWuI,KAC7ChS,EAAAhB,EAAAiB,cAACyR,EAAD,CAAcP,OAAK,EAACC,KAAK,aAAa3H,UAAWwI,YCpE/DC,IAASrI,OAAO7J,EAAAhB,EAAAiB,cAACkS,GAAD,MAASC,SAASC,eAAe","file":"static/js/main.633e4248.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/spinner.8ac12962.gif\";","import React, { Component } from 'react';\r\n// import auth0Client from '../Auth';\r\nimport './splash-screen.css';\r\n\r\nfunction LoadingMessage() {\r\n  return (\r\n    <div className='splash-screen'>\r\n      Wait a moment while we load your app.\r\n      <div className='loading-dot'>.</div>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction withSplashScreen(WrappedComponent) {\r\n  return class extends Component {\r\n    constructor(props) {\r\n      super(props);\r\n      this.state = {\r\n        loading: true\r\n      };\r\n    }\r\n\r\n    async componentDidMount() {\r\n      try {\r\n        // await auth0Client.loadSession();\r\n        setTimeout(() => {\r\n          this.setState({\r\n            loading: false\r\n          });\r\n        }, 1500);\r\n      } catch (err) {\r\n        console.log(err);\r\n        this.setState({\r\n          loading: false\r\n        });\r\n      }\r\n    }\r\n\r\n    render() {\r\n      // while checking user session, show \"loading\" message\r\n      if (this.state.loading) return LoadingMessage();\r\n\r\n      // otherwise, show the desired route\r\n      return <WrappedComponent {...this.props} />;\r\n    }\r\n  };\r\n}\r\n\r\nexport default withSplashScreen;\r\n","import uuid from 'uuid';\r\nimport { SET_ALERT, REMOVE_ALERT } from './types';\r\n\r\nexport const setAlert = (msg, alertType, timeout = 5000) => dispatch => {\r\n  const id = uuid.v4();\r\n  dispatch({\r\n    type: SET_ALERT,\r\n    payload: { msg, alertType, id }\r\n  });\r\n\r\n  setTimeout(() => dispatch({ type: REMOVE_ALERT, payload: id }), timeout);\r\n};\r\n","export const SET_ALERT = 'SET_ALERT';\r\nexport const REMOVE_ALERT = 'REMOVE_ALERT';\r\nexport const REGISTER_SUCCESS = 'REGISTER_SUCCESS';\r\nexport const REGISTER_FAIL = 'REGISTER_FAIL';\r\nexport const USER_LOADED = 'USER_LOADED';\r\nexport const AUTH_ERROR = 'AUTH_ERROR';\r\nexport const LOGIN_SUCCESS = 'LOGIN_SUCCESS';\r\nexport const LOGIN_FAIL = 'LOGIN_FAIL';\r\nexport const LOGOUT = 'LOGOUT';\r\nexport const GET_PROFILE = 'GET_PROFILE';\r\nexport const GET_PROFILES = 'GET_PROFILES';\r\nexport const GET_REPOS = 'GET_REPOS';\r\nexport const CLEAR_PROFILE = 'CLEAR_PROFILE';\r\nexport const UPDATE_PROFILE = 'UPDATE_PROFILE';\r\nexport const PROFILE_ERROR = 'PROFILE_ERROR';\r\nexport const ACCOUNT_DELETED = 'ACCOUNT_DELETED';\r\nexport const GET_POSTS = 'GET_POSTS';\r\nexport const GET_POST = 'GET_POST';\r\nexport const POST_ERROR = 'POST_ERROR';\r\nexport const UPDATE_LIKES = 'UPDATE_LIKES';\r\nexport const DELETE_POST = 'DELETE_POST';\r\nexport const ADD_POST = 'ADD_POST';\r\nexport const ADD_COMMENT = 'ADD_COMMENT';\r\nexport const REMOVE_COMMENT = 'REMOVE_COMMENT';\r\n","import axios from 'axios';\r\n\r\nconst setAuthToken = token => {\r\n  if (token) {\r\n    console.log('token: '.token);\r\n    axios.defaults.headers.common['x-auth-token'] = token;\r\n  } else {\r\n    delete axios.defaults.headers.common['x-auth-token'];\r\n  }\r\n};\r\n\r\nexport default setAuthToken;\r\n","import axios from 'axios';\r\nimport { setAlert } from './alert';\r\nimport {\r\n  REGISTER_SUCCESS,\r\n  REGISTER_FAIL,\r\n  USER_LOADED,\r\n  AUTH_ERROR,\r\n  LOGIN_SUCCESS,\r\n  LOGIN_FAIL,\r\n  LOGOUT,\r\n  CLEAR_PROFILE\r\n} from './types';\r\nimport setAuthToken from '../utils/setAuthToken';\r\nimport backend from './backend';\r\n\r\n// Load User\r\nexport const loadUser = () => async dispatch => {\r\n  if (localStorage.token) {\r\n    setAuthToken(localStorage.token);\r\n  }\r\n\r\n  try {\r\n    const res = await axios.get(\r\n      `https://boiling-taiga-24831.herokuapp.com/api/auth`\r\n    );\r\n    console.log(`${backend}`);\r\n    dispatch({\r\n      type: USER_LOADED,\r\n      // payload is 'user'\r\n      payload: res.data\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: AUTH_ERROR\r\n    });\r\n  }\r\n};\r\n\r\n// Register User\r\nexport const register = ({ name, email, password }) => async dispatch => {\r\n  const config = {\r\n    headers: {\r\n      'Content-Type': 'application/json'\r\n    }\r\n  };\r\n\r\n  const body = JSON.stringify({ name, email, password });\r\n\r\n  try {\r\n    const res = await axios.post(\r\n      `https://boiling-taiga-24831.herokuapp.com/api/users`,\r\n      body,\r\n      config\r\n    );\r\n    dispatch({\r\n      type: REGISTER_SUCCESS,\r\n      payload: res.data\r\n    });\r\n    dispatch(loadUser());\r\n  } catch (err) {\r\n    const errors = err.response.data.errors;\r\n\r\n    if (errors) {\r\n      errors.forEach(error => dispatch(setAlert(error.msg, 'danger')));\r\n    }\r\n    dispatch({\r\n      type: REGISTER_FAIL\r\n    });\r\n  }\r\n};\r\n\r\n// Login User\r\nexport const login = (email, password) => async dispatch => {\r\n  const config = {\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n      'Access-Control-Allow-Origin': '*'\r\n    }\r\n  };\r\n\r\n  const body = JSON.stringify({ email, password });\r\n\r\n  try {\r\n    const res = await axios.post(\r\n      `https://boiling-taiga-24831.herokuapp.com/api/auth`,\r\n      body,\r\n      config\r\n    );\r\n\r\n    dispatch({\r\n      type: LOGIN_SUCCESS,\r\n      payload: res.data\r\n    });\r\n    dispatch(loadUser());\r\n  } catch (err) {\r\n    const errors = err.response.data.errors;\r\n\r\n    if (errors) {\r\n      errors.forEach(error => dispatch(setAlert(error.msg, 'danger')));\r\n    }\r\n    dispatch({\r\n      type: LOGIN_FAIL\r\n    });\r\n  }\r\n};\r\n\r\n// LOgout / Clear profile\r\nexport const logout = () => async dispatch => {\r\n  dispatch({ type: CLEAR_PROFILE });\r\n  dispatch({ type: LOGOUT });\r\n};\r\n","// const backend = 'https://boiling-taiga-24831.herokuapp.com';\r\nconst backend =\r\n  \"https://dev-connector2020.herokuapp.com\";\r\n\r\nexport default backend;\r\n","import React, { Fragment } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport { logout } from '../../actions/auth';\r\n\r\nconst Navbar = ({ auth: { isAuthenticated, loading }, logout }) => {\r\n  const authLinks = (\r\n    <ul>\r\n      <li>\r\n        <Link to='/profiles'>Developers</Link>\r\n      </li>\r\n      <li>\r\n        <Link to='/posts'>Posts</Link>\r\n      </li>\r\n      <li>\r\n        <Link to='/dashboard'>\r\n          <i className='fas fa-user' />\r\n          <span className='hide-sm'>Dashboard</span>\r\n        </Link>\r\n      </li>\r\n      <li>\r\n        <a onClick={logout} href='#!'>\r\n          <i className='fas fa-sign-out-alt' />\r\n          <span className='hide-sm'>Logout</span>\r\n        </a>\r\n      </li>\r\n    </ul>\r\n  );\r\n\r\n  const guestLinks = (\r\n    <ul>\r\n      <li>\r\n        <Link to='/profiles'>Developers</Link>\r\n      </li>\r\n      <li>\r\n        <Link to='/register'>Register</Link>\r\n      </li>\r\n      <li>\r\n        <Link to='/login'>Login</Link>\r\n      </li>\r\n    </ul>\r\n  );\r\n\r\n  return (\r\n    <nav className='navbar bg-dark'>\r\n      <h1>\r\n        <Link to='/'>\r\n          <i className='fas fa-code' /> DevConnector\r\n        </Link>\r\n      </h1>\r\n      {!loading && (\r\n        <Fragment>{isAuthenticated ? authLinks : guestLinks} </Fragment>\r\n      )}\r\n    </nav>\r\n  );\r\n};\r\n\r\nNavbar.propTypes = {\r\n  // ptfr\r\n  logout: PropTypes.func.isRequired,\r\n  // ptor\r\n  auth: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  auth: state.auth\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { logout }\r\n)(Navbar);\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Landing = props => {\r\n  return (\r\n    <section className='landing'>\r\n      <div className='dark-overlay'>\r\n        <div className='landing-inner'>\r\n          <h1 className='x-large'>Developer Connector</h1>\r\n          <p className='lead'>\r\n            Create a developer profile/portfolio, share posts and get help from\r\n            other developers\r\n          </p>\r\n          <div className='buttons'>\r\n            <Link to='/register' className='btn btn-primary'>\r\n              Sign Up\r\n            </Link>\r\n            <Link to='/login' className='btn btn-light'>\r\n              Login\r\n            </Link>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nLanding.propTypes = {};\r\n\r\nexport default Landing;\r\n","import React, { Fragment, useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport { setAlert } from '../../actions/alert';\r\nimport { register } from '../../actions/auth';\r\n// impt\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Register = ({ setAlert, register, isAuthenticated }) => {\r\n  // 'formData' is the state, 'setFormData' sets the values in\r\n  const [formData, setFormData] = useState({\r\n    name: '',\r\n    email: '',\r\n    password: '',\r\n    password2: ''\r\n  });\r\n\r\n  const { name, email, password, password2 } = formData;\r\n\r\n  const onChange = e =>\r\n    setFormData({\r\n      ...formData,\r\n      [e.target.name]: e.target.value\r\n    });\r\n\r\n  const onSubmit = async e => {\r\n    e.preventDefault();\r\n    if (password !== password2) {\r\n      setAlert('Passwords do not match', 'danger');\r\n    } else {\r\n      register({ name, email, password });\r\n    }\r\n  };\r\n\r\n  if (isAuthenticated) {\r\n    return <Redirect to='/dashboard' />;\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      <h1 className='large text-primary'>Sign Up</h1>\r\n      <p className='lead'>\r\n        <i className='fas fa-user' /> Create Your Account\r\n      </p>\r\n      <form className='form' onSubmit={e => onSubmit(e)}>\r\n        <div className='form-group'>\r\n          <input\r\n            type='text'\r\n            placeholder='Name'\r\n            name='name'\r\n            value={name}\r\n            onChange={e => onChange(e)}\r\n            required\r\n          />\r\n        </div>\r\n        <div className='form-group'>\r\n          <input\r\n            type='email'\r\n            placeholder='Email Address'\r\n            name='email'\r\n            value={email}\r\n            onChange={e => onChange(e)}\r\n            required\r\n          />\r\n          <small className='form-text'>\r\n            This site uses Gravatar so if you want a profile image, use a\r\n            Gravatar email\r\n          </small>\r\n        </div>\r\n        <div className='form-group'>\r\n          <input\r\n            type='password'\r\n            placeholder='Password'\r\n            name='password'\r\n            value={password}\r\n            onChange={e => onChange(e)}\r\n            minLength='6'\r\n          />\r\n        </div>\r\n        <div className='form-group'>\r\n          <input\r\n            type='password'\r\n            placeholder='Confirm Password'\r\n            name='password2'\r\n            value={password2}\r\n            onChange={e => onChange(e)}\r\n            minLength='6'\r\n          />\r\n        </div>\r\n        <input type='submit' className='btn btn-primary' value='Register' />\r\n      </form>\r\n      <p className='my-1'>\r\n        Already have an account? <Link to='/login'>Sign In</Link>\r\n      </p>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nRegister.propTypes = {\r\n  // ptfr\r\n  setAlert: PropTypes.func.isRequired,\r\n  register: PropTypes.func.isRequired,\r\n  isAuthenticated: PropTypes.bool\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  isAuthenticated: state.auth.isAuthenticated\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { setAlert, register }\r\n)(Register);\r\n\r\n/*\r\nRegister.js -> added 'connect' + 'the action 'setAlert', called it when passwords don't match and sent the 'msg' + 'alertType' to the action\r\n\r\nSET_ALERT -> msg, alertType, id -> added to state (...state, payload)\r\n\r\nAlert.js -> getting that state 'mapStateToProps'\r\n*/\r\n","import React, { Fragment, useState } from 'react';\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\n// impt\r\nimport PropTypes from 'prop-types';\r\nimport { login } from '../../actions/auth';\r\n\r\nconst Login = ({ login, isAuthenticated }) => {\r\n  // 'formData' is the state, 'setFormData' sets the values in\r\n  const [formData, setFormData] = useState({\r\n    email: '',\r\n    password: ''\r\n  });\r\n\r\n  const { email, password } = formData;\r\n\r\n  const onChange = e =>\r\n    setFormData({\r\n      ...formData,\r\n      [e.target.name]: e.target.value\r\n    });\r\n\r\n  const onSubmit = async e => {\r\n    e.preventDefault();\r\n    login(email, password);\r\n  };\r\n\r\n  // Redirect fo logedin\r\n  if (isAuthenticated) {\r\n    return <Redirect to='/dashboard' />;\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      <h1 className='large text-primary'>Sign In</h1>\r\n      <p className='lead'>\r\n        <i className='fas fa-user' /> Sign into your account\r\n      </p>\r\n      <form className='form' onSubmit={e => onSubmit(e)}>\r\n        <div className='form-group'>\r\n          <input\r\n            type='email'\r\n            placeholder='Email Address'\r\n            name='email'\r\n            value={email}\r\n            onChange={e => onChange(e)}\r\n            required\r\n          />\r\n        </div>\r\n        <div className='form-group'>\r\n          <input\r\n            type='password'\r\n            placeholder='Password'\r\n            name='password'\r\n            value={password}\r\n            onChange={e => onChange(e)}\r\n            minLength='6'\r\n          />\r\n        </div>\r\n\r\n        <input type='submit' className='btn btn-primary' value='Login' />\r\n      </form>\r\n      <p className='my-1'>\r\n        Dont't have an account? <Link to='/register'>Sign Up</Link>\r\n      </p>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nLogin.propTypes = {\r\n  // login: ptfr\r\n  login: PropTypes.func.isRequired,\r\n  // ..: ptb\r\n  isAuthenticated: PropTypes.bool\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  isAuthenticated: state.auth.isAuthenticated\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { login }\r\n)(Login);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\n\r\n//\r\nconst Alert = ({ alerts }) =>\r\n  alerts !== null &&\r\n  alerts.length > 0 &&\r\n  alerts.map(alert => (\r\n    <div key={alert.id} className={`alert alert-${alert.alertType}`}>\r\n      {alert.msg}\r\n    </div>\r\n  ));\r\n\r\nAlert.propTypes = {\r\n  // ptar\r\n  alerts: PropTypes.array.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  // access to props.alerts\r\n  alerts: state.alert\r\n});\r\n\r\nexport default connect(mapStateToProps)(Alert);\r\n","import axios from 'axios';\r\nimport { setAlert } from './alert';\r\n\r\nimport {\r\n  GET_PROFILE,\r\n  PROFILE_ERROR,\r\n  UPDATE_PROFILE,\r\n  ACCOUNT_DELETED,\r\n  CLEAR_PROFILE,\r\n  GET_PROFILES,\r\n  GET_REPOS\r\n} from './types';\r\nimport backend from './backend';\r\n\r\n// Get current user profile\r\nexport const getCurrentProfile = () => async dispatch => {\r\n  try {\r\n    const res = await axios.get(\r\n      `https://boiling-taiga-24831.herokuapp.com/api/profile/me`\r\n    );\r\n\r\n    dispatch({\r\n      type: GET_PROFILE,\r\n      payload: res.data\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: PROFILE_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status }\r\n    });\r\n  }\r\n};\r\n\r\n// Get All profiles\r\nexport const getProfiles = () => async dispatch => {\r\n  dispatch({ type: CLEAR_PROFILE });\r\n  try {\r\n    const res = await axios.get(\r\n      `https://boiling-taiga-24831.herokuapp.com/api/profile`\r\n    );\r\n\r\n    dispatch({\r\n      type: GET_PROFILES,\r\n      payload: res.data\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: PROFILE_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status }\r\n    });\r\n  }\r\n};\r\n\r\n// Get profile by ID\r\nexport const getProfileById = userId => async dispatch => {\r\n  try {\r\n    const res = await axios.get(\r\n      `https://boiling-taiga-24831.herokuapp.com/api/profile/user/${userId}`\r\n    );\r\n\r\n    dispatch({\r\n      type: GET_PROFILE,\r\n      payload: res.data\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: PROFILE_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status }\r\n    });\r\n  }\r\n};\r\n\r\n// Get github repos\r\nexport const getGithubRepos = username => async dispatch => {\r\n  try {\r\n    const res = await axios.get(\r\n      `https://boiling-taiga-24831.herokuapp.com/api/profile/github/${username}`\r\n    );\r\n\r\n    dispatch({\r\n      type: GET_REPOS,\r\n      payload: res.data\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: PROFILE_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status }\r\n    });\r\n  }\r\n};\r\n\r\n// Create or update a profile\r\nexport const createProfile = (\r\n  formData,\r\n  history,\r\n  edit = false\r\n) => async dispatch => {\r\n  try {\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      }\r\n    };\r\n\r\n    const res = await axios.post(\r\n      `https://boiling-taiga-24831.herokuapp.com/api/profile`,\r\n      formData,\r\n      config\r\n    );\r\n    dispatch({\r\n      type: GET_PROFILE,\r\n      payload: res.data\r\n    });\r\n\r\n    dispatch(setAlert(edit ? 'Profile Updated' : 'Profile Created', 'success'));\r\n\r\n    if (!edit) {\r\n      history.push('/dashboard');\r\n    }\r\n  } catch (err) {\r\n    const errors = err.response.data.errors;\r\n\r\n    if (errors) {\r\n      errors.forEach(error => dispatch(setAlert(error.msg, 'danger')));\r\n    }\r\n    dispatch({\r\n      type: PROFILE_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status }\r\n    });\r\n  }\r\n};\r\n\r\n// Add Experience\r\nexport const addExperience = (formData, history) => async dispatch => {\r\n  try {\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      }\r\n    };\r\n\r\n    const res = await axios.put(\r\n      `https://boiling-taiga-24831.herokuapp.com/api/profile/experience`,\r\n      formData,\r\n      config\r\n    );\r\n    dispatch({\r\n      type: UPDATE_PROFILE,\r\n      payload: res.data\r\n    });\r\n\r\n    dispatch(setAlert('Experience Added', 'success'));\r\n\r\n    history.push('/dashboard');\r\n  } catch (err) {\r\n    const errors = err.response.data.errors;\r\n\r\n    if (errors) {\r\n      errors.forEach(error => dispatch(setAlert(error.msg, 'danger')));\r\n    }\r\n    dispatch({\r\n      type: PROFILE_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status }\r\n    });\r\n  }\r\n};\r\n\r\n// Add Education\r\nexport const addEducation = (formData, history) => async dispatch => {\r\n  try {\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      }\r\n    };\r\n\r\n    const res = await axios.put(\r\n      `https://boiling-taiga-24831.herokuapp.com/api/profile/education`,\r\n      formData,\r\n      config\r\n    );\r\n    dispatch({\r\n      type: UPDATE_PROFILE,\r\n      payload: res.data\r\n    });\r\n\r\n    dispatch(setAlert('Education Added', 'success'));\r\n\r\n    history.push('/dashboard');\r\n  } catch (err) {\r\n    const errors = err.response.data.errors;\r\n\r\n    if (errors) {\r\n      errors.forEach(error => dispatch(setAlert(error.msg, 'danger')));\r\n    }\r\n    dispatch({\r\n      type: PROFILE_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status }\r\n    });\r\n  }\r\n};\r\n\r\n// Delete Experience\r\nexport const deleteExperience = id => async dispatch => {\r\n  try {\r\n    const res = await axios.delete(\r\n      `https://boiling-taiga-24831.herokuapp.com/api/profile/experience/${id}`\r\n    );\r\n    dispatch({\r\n      type: UPDATE_PROFILE,\r\n      payload: res.data\r\n    });\r\n\r\n    dispatch(setAlert('Experience removed', 'success'));\r\n  } catch (err) {\r\n    dispatch({\r\n      type: PROFILE_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status }\r\n    });\r\n  }\r\n};\r\n\r\n// Delete Education\r\nexport const deleteEducation = id => async dispatch => {\r\n  try {\r\n    const res = await axios.delete(\r\n      `https://boiling-taiga-24831.herokuapp.com/api/profile/education/${id}`\r\n    );\r\n    dispatch({\r\n      type: UPDATE_PROFILE,\r\n      payload: res.data\r\n    });\r\n\r\n    dispatch(setAlert('Education removed', 'success'));\r\n  } catch (err) {\r\n    dispatch({\r\n      type: PROFILE_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status }\r\n    });\r\n  }\r\n};\r\n\r\n// Delete Account & profile\r\nexport const deleteAccount = () => async dispatch => {\r\n  if (window.confirm('Are you sure ? this cannot be undone.')) {\r\n    try {\r\n      await axios.delete(\r\n        `https://boiling-taiga-24831.herokuapp.com/api/profile`\r\n      );\r\n      dispatch({\r\n        type: CLEAR_PROFILE\r\n      });\r\n      dispatch({\r\n        type: ACCOUNT_DELETED\r\n      });\r\n\r\n      dispatch(setAlert('Your account has been permanently deleted'));\r\n    } catch (err) {\r\n      dispatch({\r\n        type: PROFILE_ERROR,\r\n        payload: { msg: err.response.statusText, status: err.response.status }\r\n      });\r\n    }\r\n  }\r\n};\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst DashboardActions = props => {\r\n  return (\r\n    <div className='dash-buttons'>\r\n      <Link to='/edit-profile' className='btn btn-light'>\r\n        <i className='fas fa-user-circle text-primary' /> Edit Profile\r\n      </Link>\r\n      <Link to='/add-experience' className='btn btn-light'>\r\n        <i className='fab fa-black-tie text-primary' /> Add Experience\r\n      </Link>\r\n      <Link to='/add-education' className='btn btn-light'>\r\n        <i className='fas fa-graduation-cap text-primary' /> Add Education\r\n      </Link>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DashboardActions;\r\n","// racfp\r\nimport React, { Fragment } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Moment from 'react-moment';\r\nimport { connect } from 'react-redux';\r\nimport { deleteExperience } from '../../actions/profile';\r\n\r\nconst Experience = ({ experience, deleteExperience }) => {\r\n  const experiences = experience.map(exp => (\r\n    <tr key={exp._id}>\r\n      <td>{exp.company}</td>\r\n      <td className='hide-sm'>{exp.title}</td>\r\n\r\n      <td>\r\n        <Moment format='YYYY/MM/DD'>{exp.from}</Moment> -{' '}\r\n        {exp.to === null ? (\r\n          ' Now '\r\n        ) : (\r\n          <Moment format='YYYY/MM/DD'>{exp.to}</Moment>\r\n        )}\r\n      </td>\r\n      <td>\r\n        <button\r\n          onClick={() => deleteExperience(exp._id)}\r\n          className='btn btn-danger'\r\n        >\r\n          Delete\r\n        </button>\r\n      </td>\r\n    </tr>\r\n  ));\r\n\r\n  return (\r\n    <Fragment>\r\n      <h2 className='my-2'>Experience credentials</h2>\r\n      <table className='table'>\r\n        <thead>\r\n          <tr>\r\n            <th>Company</th>\r\n            <th className='hide-s'>Title</th>\r\n            <th className='hide-s'>Years</th>\r\n            <th />\r\n          </tr>\r\n        </thead>\r\n        <tbody>{experiences}</tbody>\r\n      </table>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nExperience.propTypes = {\r\n  // ptar\r\n  experience: PropTypes.array.isRequired,\r\n  deleteExperience: PropTypes.func.isRequired\r\n};\r\n\r\nexport default connect(\r\n  null,\r\n  { deleteExperience }\r\n)(Experience);\r\n","// racfp\r\nimport React, { Fragment } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Moment from 'react-moment';\r\nimport { connect } from 'react-redux';\r\nimport { deleteEducation } from '../../actions/profile';\r\n\r\nconst Education = ({ education, deleteEducation }) => {\r\n  const educations = education.map(edu => (\r\n    <tr key={edu._id}>\r\n      <td>{edu.school}</td>\r\n      <td className='hide-sm'>{edu.degreee}</td>\r\n\r\n      <td>\r\n        <Moment format='YYYY/MM/DD'>{edu.from}</Moment> -{' '}\r\n        {edu.to === null ? (\r\n          ' Now '\r\n        ) : (\r\n          <Moment format='YYYY/MM/DD'>{edu.to}</Moment>\r\n        )}\r\n      </td>\r\n      <td>\r\n        <button\r\n          onClick={() => deleteEducation(edu._id)}\r\n          className='btn btn-danger'\r\n        >\r\n          Delete\r\n        </button>\r\n      </td>\r\n    </tr>\r\n  ));\r\n\r\n  return (\r\n    <Fragment>\r\n      <h2 className='my-2'>Education credentials</h2>\r\n      <table className='table'>\r\n        <thead>\r\n          <tr>\r\n            <th>School</th>\r\n            <th className='hide-s'>Degree</th>\r\n            <th className='hide-s'>Years</th>\r\n            <th />\r\n          </tr>\r\n        </thead>\r\n        <tbody>{educations}</tbody>\r\n      </table>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nEducation.propTypes = {\r\n  // ptar\r\n  education: PropTypes.array.isRequired,\r\n  deleteEducation: PropTypes.func.isRequired\r\n};\r\n\r\nexport default connect(\r\n  null,\r\n  { deleteEducation }\r\n)(Education);\r\n","import React, { Fragment } from 'react';\r\nimport spinner from './spinner.gif';\r\n\r\nexport default () => (\r\n  <Fragment>\r\n    <img\r\n      src={spinner}\r\n      style={{ width: '200px', margin: 'auto', display: 'block' }}\r\n      alt='Spinner'\r\n    />\r\n  </Fragment>\r\n);\r\n","import React, { Fragment, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport { getCurrentProfile, deleteAccount } from '../../actions/profile';\r\nimport DashboardActions from './DashboardActions';\r\nimport Experience from './Experience';\r\nimport Education from './Education';\r\nimport Spinner from '../layout/Spinner';\r\n\r\nconst Dashboard = ({\r\n  getCurrentProfile,\r\n  deleteAccount,\r\n  auth: { user },\r\n  profile: { profile, loading }\r\n}) => {\r\n  useEffect(() => {\r\n    getCurrentProfile();\r\n  }, [getCurrentProfile]);\r\n\r\n  return loading && profile === null ? (\r\n    <Spinner />\r\n  ) : (\r\n    <Fragment>\r\n      <h1 className='large text-primary'>Dashboard</h1>\r\n      <p className='lead'>\r\n        <i className='fas fa-user' />\r\n        Welcome {user && user.name}\r\n      </p>\r\n      {profile !== null ? (\r\n        <Fragment>\r\n          <DashboardActions />\r\n          <Experience experience={profile.experience} />\r\n          <Education education={profile.education} />\r\n\r\n          <div className='my-'>\r\n            <button className='btn btn-danger' onClick={() => deleteAccount()}>\r\n              <i className='fas fa-user-minus' /> Delete my account\r\n            </button>\r\n          </div>\r\n        </Fragment>\r\n      ) : (\r\n        <Fragment>\r\n          <p>You have not yet setup a profile, please add some info</p>\r\n          <Link to='/create-profile' className='btn btn-primary my-1'>\r\n            Create profile\r\n          </Link>\r\n        </Fragment>\r\n      )}\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nDashboard.propTypes = {\r\n  // ptfr\r\n  getCurrentProfile: PropTypes.func.isRequired,\r\n  // ptor\r\n  auth: PropTypes.object.isRequired,\r\n  // ptor\r\n  profile: PropTypes.object.isRequired,\r\n  deleteAccount: PropTypes.func.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  auth: state.auth,\r\n  profile: state.profile\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { getCurrentProfile, deleteAccount }\r\n)(Dashboard);\r\n","import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\n\r\nconst PrivateRoute = ({\r\n  component: Component,\r\n  auth: { isAuthenticated, loading },\r\n  ...rest\r\n}) => (\r\n  <Route\r\n    {...rest}\r\n    render={props =>\r\n      !isAuthenticated && !loading ? (\r\n        <Redirect to='/login' />\r\n      ) : (\r\n        <Component {...props} />\r\n      )\r\n    }\r\n  />\r\n);\r\n\r\nPrivateRoute.propTypes = {\r\n  /// ptbr\r\n  auth: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  auth: state.auth\r\n});\r\n\r\nexport default connect(mapStateToProps)(PrivateRoute);\r\n","import React, { Fragment, useState, useEffect } from 'react';\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { createProfile, getCurrentProfile } from '../../actions/profile';\r\n\r\nconst EditProfile = ({\r\n  profile: { profile, loading },\r\n  createProfile,\r\n  getCurrentProfile,\r\n  history\r\n}) => {\r\n  const [formData, setFormData] = useState({\r\n    company: '',\r\n    website: '',\r\n    location: '',\r\n    status: '',\r\n    skills: '',\r\n    githubusername: '',\r\n    bio: '',\r\n    twitter: '',\r\n    facebook: '',\r\n    linkedin: '',\r\n    youtube: '',\r\n    instagram: ''\r\n  });\r\n\r\n  const [displaySocialInputs, toggleSocialInputs] = useState(false);\r\n\r\n  useEffect(() => {\r\n    getCurrentProfile();\r\n\r\n    setFormData({\r\n      company: loading || !profile.company ? '' : profile.company,\r\n      website: loading || !profile.website ? '' : profile.website,\r\n      location: loading || !profile.location ? '' : profile.location,\r\n      status: loading || !profile.status ? '' : profile.status,\r\n      skills: loading || !profile.skills ? '' : profile.skills.join(','),\r\n      githubusername:\r\n        loading || !profile.githubusername ? '' : profile.githubusername,\r\n      bio: loading || !profile.bio ? '' : profile.bio,\r\n      twitter: loading || !profile.social ? '' : profile.social.twitter,\r\n      facebook: loading || !profile.social ? '' : profile.social.facebook,\r\n      linkedin: loading || !profile.social ? '' : profile.social.linkedin,\r\n      youtube: loading || !profile.social ? '' : profile.social.youtube,\r\n      instagram: loading || !profile.social ? '' : profile.social.instagram\r\n    });\r\n  }, [loading, getCurrentProfile]); // when 'loading', run useEffect\r\n\r\n  const {\r\n    company,\r\n    website,\r\n    location,\r\n    status,\r\n    skills,\r\n    githubusername,\r\n    bio,\r\n    twitter,\r\n    facebook,\r\n    linkedin,\r\n    youtube,\r\n    instagram\r\n  } = formData;\r\n\r\n  const onChange = e =>\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n\r\n  const onSubmit = e => {\r\n    e.preventDefault();\r\n    // console.log(formData);\r\n    createProfile(formData, history, true);\r\n  };\r\n  return (\r\n    <Fragment>\r\n      <h1 className='large text-primary'>Create Your Profile</h1>\r\n      <p className='lead'>\r\n        <i className='fas fa-user' /> Let's get some information to make your\r\n        profile stand out\r\n      </p>\r\n      <small>* = required field</small>\r\n      <form className='form' onSubmit={e => onSubmit(e)}>\r\n        <div className='form-group'>\r\n          <select name='status' value={status} onChange={e => onChange(e)}>\r\n            <option value='0'>* Select Professional Status</option>\r\n            <option value='Developer'>Developer</option>\r\n            <option value='Junior Developer'>Junior Developer</option>\r\n            <option value='Senior Developer'>Senior Developer</option>\r\n            <option value='Manager'>Manager</option>\r\n            <option value='Student or Learning'>Student or Learning</option>\r\n            <option value='Instructor'>Instructor or Teacher</option>\r\n            <option value='Intern'>Intern</option>\r\n            <option value='Other'>Other</option>\r\n          </select>\r\n          <small className='form-text'>\r\n            Give us an idea of where you are at in your career\r\n          </small>\r\n        </div>\r\n        <div className='form-group'>\r\n          <input\r\n            type='text'\r\n            placeholder='Company'\r\n            name='company'\r\n            value={company}\r\n            onChange={e => onChange(e)}\r\n          />\r\n          <small className='form-text'>\r\n            Could be your own company or one you work for\r\n          </small>\r\n        </div>\r\n        <div className='form-group'>\r\n          <input\r\n            type='text'\r\n            placeholder='Website'\r\n            name='website'\r\n            value={website}\r\n            onChange={e => onChange(e)}\r\n          />\r\n          <small className='form-text'>\r\n            Could be your own or a company website\r\n          </small>\r\n        </div>\r\n        <div className='form-group'>\r\n          <input\r\n            type='text'\r\n            placeholder='Location'\r\n            name='location'\r\n            value={location}\r\n            onChange={e => onChange(e)}\r\n          />\r\n          <small className='form-text'>\r\n            City & state suggested (eg. Boston, MA)\r\n          </small>\r\n        </div>\r\n        <div className='form-group'>\r\n          <input\r\n            type='text'\r\n            placeholder='* Skills'\r\n            name='skills'\r\n            value={skills}\r\n            onChange={e => onChange(e)}\r\n          />\r\n          <small className='form-text'>\r\n            Please use comma separated values (eg. HTML,CSS,JavaScript,PHP)\r\n          </small>\r\n        </div>\r\n        <div className='form-group'>\r\n          <input\r\n            type='text'\r\n            placeholder='Github Username'\r\n            name='githubusername'\r\n            value={githubusername}\r\n            onChange={e => onChange(e)}\r\n          />\r\n          <small className='form-text'>\r\n            If you want your latest repos and a Github link, include your\r\n            username\r\n          </small>\r\n        </div>\r\n        <div className='form-group'>\r\n          <textarea\r\n            placeholder='A short bio of yourself'\r\n            name='bio'\r\n            value={bio}\r\n            onChange={e => onChange(e)}\r\n          />\r\n          <small className='form-text'>Tell us a little about yourself</small>\r\n        </div>\r\n\r\n        <div className='my-2'>\r\n          <button\r\n            type='button'\r\n            className='btn btn-light'\r\n            onClick={() => toggleSocialInputs(!displaySocialInputs)}\r\n          >\r\n            Add Social Network Links\r\n          </button>\r\n          <span>Optional</span>\r\n        </div>\r\n\r\n        {displaySocialInputs && (\r\n          <Fragment>\r\n            <div className='form-group social-input'>\r\n              <i className='fab fa-twitter fa-2x' />\r\n              <input\r\n                type='text'\r\n                placeholder='Twitter URL'\r\n                name='twitter'\r\n                value={twitter}\r\n                onChange={e => onChange(e)}\r\n              />\r\n            </div>\r\n\r\n            <div className='form-group social-input'>\r\n              <i className='fab fa-facebook fa-2x' />\r\n              <input\r\n                type='text'\r\n                placeholder='Facebook URL'\r\n                name='facebook'\r\n                value={facebook}\r\n                onChange={e => onChange(e)}\r\n              />\r\n            </div>\r\n\r\n            <div className='form-group social-input'>\r\n              <i className='fab fa-youtube fa-2x' />\r\n              <input\r\n                type='text'\r\n                placeholder='YouTube URL'\r\n                name='youtube'\r\n                value={youtube}\r\n                onChange={e => onChange(e)}\r\n              />\r\n            </div>\r\n\r\n            <div className='form-group social-input'>\r\n              <i className='fab fa-linkedin fa-2x' />\r\n              <input\r\n                type='text'\r\n                placeholder='Linkedin URL'\r\n                name='linkedin'\r\n                value={linkedin}\r\n                onChange={e => onChange(e)}\r\n              />\r\n            </div>\r\n\r\n            <div className='form-group social-input'>\r\n              <i className='fab fa-instagram fa-2x' />\r\n              <input\r\n                type='text'\r\n                placeholder='Instagram URL'\r\n                name='instagram'\r\n                value={instagram}\r\n                onChange={e => onChange(e)}\r\n              />\r\n            </div>\r\n          </Fragment>\r\n        )}\r\n\r\n        <input type='submit' className='btn btn-primary my-1' />\r\n        <Link className='btn btn-light my-1' to='/dashboard'>\r\n          Go Back\r\n        </Link>\r\n      </form>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nEditProfile.propTypes = {\r\n  // prfr\r\n  createProfile: PropTypes.func.isRequired,\r\n  getCurrentProfile: PropTypes.func.isRequired,\r\n  profile: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  profile: state.profile\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { createProfile, getCurrentProfile }\r\n)(withRouter(EditProfile));\r\n","import React, { Fragment, useState } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { addExperience } from '../../actions/profile';\r\n\r\nconst AddExperience = ({ addExperience, history }) => {\r\n  const [formData, setFormData] = useState({\r\n    company: '',\r\n    title: '',\r\n    location: '',\r\n    from: '',\r\n    to: '',\r\n    current: false,\r\n    description: ''\r\n  });\r\n\r\n  const [toDateDisabled, toggleDisabled] = useState(false);\r\n\r\n  const { company, title, location, from, to, current, description } = formData;\r\n\r\n  const onChange = e =>\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n\r\n  return (\r\n    <Fragment>\r\n      <h1 className='large text-primary'>Add An Experience</h1>\r\n      <p className='lead'>\r\n        <i className='fas fa-code-branch' /> Add any developer/programming\r\n        positions that you have had in the past\r\n      </p>\r\n      <small>* = required field</small>\r\n      <form\r\n        className='form'\r\n        onSubmit={e => {\r\n          e.preventDefault();\r\n          addExperience(formData, history);\r\n        }}\r\n      >\r\n        <div className='form-group'>\r\n          <input\r\n            type='text'\r\n            placeholder='* Job Title'\r\n            name='title'\r\n            value={title}\r\n            onChange={e => onChange(e)}\r\n            required\r\n          />\r\n        </div>\r\n        <div className='form-group'>\r\n          <input\r\n            type='text'\r\n            placeholder='* Company'\r\n            name='company'\r\n            value={company}\r\n            onChange={e => onChange(e)}\r\n            required\r\n          />\r\n        </div>\r\n        <div className='form-group'>\r\n          <input\r\n            type='text'\r\n            placeholder='Location'\r\n            name='location'\r\n            value={location}\r\n            onChange={e => onChange(e)}\r\n          />\r\n        </div>\r\n        <div className='form-group'>\r\n          <h4>From Date</h4>\r\n          <input\r\n            type='date'\r\n            name='from'\r\n            value={from}\r\n            onChange={e => onChange(e)}\r\n          />\r\n        </div>\r\n        <div className='form-group'>\r\n          <p>\r\n            <input\r\n              type='checkbox'\r\n              name='current'\r\n              checked={current}\r\n              value={current}\r\n              onChange={e => {\r\n                setFormData({ ...formData, current: !current });\r\n                toggleDisabled(!toDateDisabled);\r\n              }}\r\n            />{' '}\r\n            Current Job\r\n          </p>\r\n        </div>\r\n        <div className='form-group'>\r\n          <h4>To Date</h4>\r\n          <input\r\n            type='date'\r\n            name='to'\r\n            value={to}\r\n            onChange={e => onChange(e)}\r\n            disabled={toDateDisabled ? 'disabled' : ''}\r\n          />\r\n        </div>\r\n        <div className='form-group'>\r\n          <textarea\r\n            name='description'\r\n            cols='30'\r\n            rows='5'\r\n            placeholder='Job Description'\r\n            value={description}\r\n            onChange={e => onChange(e)}\r\n          />\r\n        </div>\r\n        <input type='submit' className='btn btn-primary my-1' />\r\n        <a className='btn btn-light my-1' href='dashboard.html'>\r\n          Go Back\r\n        </a>\r\n      </form>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nAddExperience.propTypes = {\r\n  // ptfr\r\n  addExperience: PropTypes.func.isRequired\r\n};\r\n\r\nexport default connect(\r\n  null,\r\n  { addExperience }\r\n)(withRouter(AddExperience));\r\n","// racfp\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst ProfileTop = ({\r\n  profile: {\r\n    status,\r\n    company,\r\n    location,\r\n    website,\r\n    social,\r\n    user: { name, avatar }\r\n  }\r\n}) => {\r\n  return (\r\n    <div className='profile-top bg-primary p-2'>\r\n      <img className='round-img my-1' src={avatar} alt='' />\r\n      <h1 className='large'>{name}</h1>\r\n      <p className='lead'>\r\n        {status} {company && <span> at {company} </span>}\r\n      </p>\r\n      <p>{location && <span>{location}</span>}</p>\r\n      <div className='icons my-1'>\r\n        {website && (\r\n          <a href={website} target='_blank' rel='noopener noreferrer'>\r\n            <i className='fas fa-globe fa-2x' />\r\n          </a>\r\n        )}\r\n\r\n        {social && social.twitter && (\r\n          <a href={social.twitter} target='_blank' rel='noopener noreferrer'>\r\n            <i className='fab fa-twitter fa-2x' />\r\n          </a>\r\n        )}\r\n        {social && social.facebook && (\r\n          <a href={social.facebook} target='_blank' rel='noopener noreferrer'>\r\n            <i className='fab fa-facebook fa-2x' />\r\n          </a>\r\n        )}\r\n        {social && social.linkedin && (\r\n          <a href={social.linkedin} target='_blank' rel='noopener noreferrer'>\r\n            <i className='fab fa-linkedin fa-2x' />\r\n          </a>\r\n        )}\r\n        {social && social.youtube && (\r\n          <a href={social.youtube} target='_blank' rel='noopener noreferrer'>\r\n            <i className='fab fa-youtube fa-2x' />\r\n          </a>\r\n        )}\r\n        {social && social.instagram && (\r\n          <a href={social.instagram} target='_blank' rel='noopener noreferrer'>\r\n            <i className='fab fa-instagram fa-2x' />\r\n          </a>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nProfileTop.propTypes = {\r\n  profile: PropTypes.object.isRequired\r\n};\r\n\r\nexport default ProfileTop;\r\n","// racfp\r\nimport React, { Fragment } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst ProfileAbout = ({\r\n  profile: {\r\n    bio,\r\n    skills,\r\n    user: { name }\r\n  }\r\n}) => {\r\n  return (\r\n    <div className='profile-about bg-light p-2'>\r\n      {bio && (\r\n        <Fragment>\r\n          <h2 className='text-primary'>{name.trim().split(' ')[0]}s Bio</h2>\r\n          <p>{bio}</p>\r\n          <div className='line' />\r\n        </Fragment>\r\n      )}\r\n\r\n      <h2 className='text-primary'>Skill Set</h2>\r\n      <div className='skills'>\r\n        {skills.map((skill, index) => (\r\n          <div key={index} className='p-1'>\r\n            <i className='fas fa-check' /> {skill}\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nProfileAbout.propTypes = {\r\n  profile: PropTypes.object.isRequired\r\n};\r\n\r\nexport default ProfileAbout;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Moment from 'react-moment';\r\n\r\nconst ProfileExperience = ({\r\n  experience: { company, title, location, current, to, from, description }\r\n}) => {\r\n  return (\r\n    <div>\r\n      <h3 className='text-dark'>{company}</h3>\r\n      <p>\r\n        <Moment format='YYYY//MM/DD'>{from}</Moment> -{' '}\r\n        {!to ? ' Now' : <Moment format='YYYY/MM/DD'>{to}</Moment>}\r\n      </p>\r\n      <p>\r\n        <strong>Position: </strong> {title}\r\n      </p>\r\n      <p>\r\n        <strong>Description</strong> {description}\r\n      </p>\r\n    </div>\r\n  );\r\n};\r\n\r\nProfileExperience.propTypes = {\r\n  experience: PropTypes.object.isRequired\r\n};\r\n\r\nexport default ProfileExperience;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Moment from 'react-moment';\r\n\r\nconst ProfileEducation = ({\r\n  education: { school, degree, fieldofstudy, current, to, from, description }\r\n}) => {\r\n  return (\r\n    <div>\r\n      <h3 className='text-dark'>{school}</h3>\r\n      <p>\r\n        <Moment format='YYYY//MM/DD'>{from}</Moment> -{' '}\r\n        {!to ? ' Now' : <Moment format='YYYY/MM/DD'>{to}</Moment>}\r\n      </p>\r\n      <p>\r\n        <strong>Degree: </strong> {degree}\r\n      </p>\r\n      <p>\r\n        <strong>Fields of Study: </strong> {fieldofstudy}\r\n      </p>\r\n      <p>\r\n        <strong>Description</strong> {description}\r\n      </p>\r\n    </div>\r\n  );\r\n};\r\n\r\nProfileEducation.propTypes = {\r\n  education: PropTypes.object.isRequired\r\n};\r\n\r\nexport default ProfileEducation;\r\n","import React, { useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { getGithubRepos } from '../../actions/profile';\r\nimport Spinner from '../layout/Spinner';\r\n\r\nconst ProfileGithub = ({ username, getGithubRepos, repos }) => {\r\n  useEffect(() => {\r\n    getGithubRepos(username);\r\n  }, [getGithubRepos]);\r\n  return (\r\n    <div className='profile-github'>\r\n      <h2 className='text-primary my-1'>Github Repos</h2>\r\n      {repos === null ? (\r\n        <Spinner />\r\n      ) : (\r\n        repos.map(repo => (\r\n          <div key={repo.id} className='repo bg-white p-1 my-1'>\r\n            <div>\r\n              <h4>\r\n                <a\r\n                  href={repo.html_url}\r\n                  target='_blank'\r\n                  rel='noopener noreferrer'\r\n                >\r\n                  {repo.name}\r\n                </a>\r\n              </h4>\r\n              <p>{repo.description}</p>\r\n            </div>\r\n            <div>\r\n              <ul>\r\n                <li className='badge badge-primary'>\r\n                  Stars: {repo.stargazers_count}\r\n                </li>\r\n                <li className='badge badge-dark'>\r\n                  Watchers: {repo.watchers_count}\r\n                </li>\r\n                <li className='badge badge-light'>Forks: {repo.forks_count}</li>\r\n              </ul>\r\n            </div>\r\n          </div>\r\n        ))\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nProfileGithub.propTypes = {\r\n  getGithubRepos: PropTypes.func.isRequired,\r\n  repos: PropTypes.array.isRequired,\r\n  username: PropTypes.string.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  repos: state.profile.repos\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { getGithubRepos }\r\n)(ProfileGithub);\r\n","// racfp\r\nimport React, { Fragment, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport Spinner from '../layout/Spinner';\r\nimport { getProfileById } from '../../actions/profile';\r\nimport ProfileTop from './ProfileTop';\r\nimport ProfileAbout from './ProfileAbout';\r\nimport ProfileExperience from './ProfileExperience';\r\nimport ProfileEducation from './ProfileEducation';\r\nimport ProfileGithub from './ProfileGithub';\r\n\r\nconst Profile = ({\r\n  getProfileById,\r\n  profile: { profile, loading },\r\n  auth,\r\n  match\r\n}) => {\r\n  useEffect(() => {\r\n    getProfileById(match.params.id);\r\n  }, [getProfileById, match.params.id]);\r\n\r\n  return (\r\n    <Fragment>\r\n      {profile === null || loading ? (\r\n        <Spinner />\r\n      ) : (\r\n        <Fragment>\r\n          <Link to='/profiles' className='btn btn-light'>\r\n            Back to profiles\r\n          </Link>\r\n          {auth.isAuthenticated &&\r\n            auth.loading === false &&\r\n            auth.user._id === profile.user._id && (\r\n              <Link to='/edit-profile' className='btn btn-dark'>\r\n                Edit profile\r\n              </Link>\r\n            )}\r\n          <div className='profile-grid my-1'>\r\n            <ProfileTop profile={profile} />\r\n            <ProfileAbout profile={profile} />\r\n            <div className='profile-exp bg-white p-2'>\r\n              <h2 className='text-primary'>Experience</h2>\r\n              {profile.experience.length > 0 ? (\r\n                <Fragment>\r\n                  {profile.experience.map(experience => (\r\n                    <ProfileExperience\r\n                      key={experience._id}\r\n                      experience={experience}\r\n                    />\r\n                  ))}\r\n                </Fragment>\r\n              ) : (\r\n                <h4>No experience credentials</h4>\r\n              )}\r\n            </div>\r\n            <div className='profile-edu bg-white p-2'>\r\n              <h2 className='text-primary'>Education</h2>\r\n              {profile.education.length > 0 ? (\r\n                <Fragment>\r\n                  {profile.education.map(education => (\r\n                    <ProfileEducation\r\n                      key={education._id}\r\n                      education={education}\r\n                    />\r\n                  ))}\r\n                </Fragment>\r\n              ) : (\r\n                <h4>No education credentials</h4>\r\n              )}\r\n            </div>\r\n            {profile.githubusername && (\r\n              <ProfileGithub username={profile.githubusername} />\r\n            )}\r\n          </div>\r\n        </Fragment>\r\n      )}\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nProfile.propTypes = {\r\n  getProfileById: PropTypes.func.isRequired,\r\n  profile: PropTypes.object.isRequired,\r\n  auth: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  profile: state.profile,\r\n  auth: state.auth\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { getProfileById }\r\n)(Profile);\r\n","import React, { Fragment, useState } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { addEducation } from '../../actions/profile';\r\n\r\nconst AddEducation = ({ addEducation, history }) => {\r\n  const [formData, setFormData] = useState({\r\n    school: '',\r\n    degree: '',\r\n    fieldofstudy: '',\r\n    from: '',\r\n    to: '',\r\n    current: false,\r\n    description: ''\r\n  });\r\n\r\n  const [toDateDisabled, toggleDisabled] = useState(false);\r\n\r\n  const {\r\n    school,\r\n    degree,\r\n    fieldofstudy,\r\n    from,\r\n    to,\r\n    current,\r\n    description\r\n  } = formData;\r\n\r\n  const onChange = e =>\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n\r\n  return (\r\n    <Fragment>\r\n      <h1 className='large text-primary'>Add your Education</h1>\r\n      <p className='lead'>\r\n        <i className='fas fa-code-branch' /> Add any school or bootcamp that you\r\n        attended\r\n      </p>\r\n      <small>* = required field</small>\r\n      <form\r\n        className='form'\r\n        onSubmit={e => {\r\n          e.preventDefault();\r\n          addEducation(formData, history);\r\n        }}\r\n      >\r\n        <div className='form-group'>\r\n          <input\r\n            type='text'\r\n            placeholder='* School/Bootcamp'\r\n            name='school'\r\n            value={school}\r\n            onChange={e => onChange(e)}\r\n            required\r\n          />\r\n        </div>\r\n        <div className='form-group'>\r\n          <input\r\n            type='text'\r\n            placeholder='* Degree/Certificate'\r\n            name='degree'\r\n            value={degree}\r\n            onChange={e => onChange(e)}\r\n            required\r\n          />\r\n        </div>\r\n        <div className='form-group'>\r\n          <input\r\n            type='text'\r\n            placeholder='Field of Study'\r\n            name='fieldofstudy'\r\n            value={fieldofstudy}\r\n            onChange={e => onChange(e)}\r\n          />\r\n        </div>\r\n        <div className='form-group'>\r\n          <h4>From Date</h4>\r\n          <input\r\n            type='date'\r\n            name='from'\r\n            value={from}\r\n            onChange={e => onChange(e)}\r\n          />\r\n        </div>\r\n        <div className='form-group'>\r\n          <p>\r\n            <input\r\n              type='checkbox'\r\n              name='current'\r\n              checked={current}\r\n              value={current}\r\n              onChange={e => {\r\n                setFormData({ ...formData, current: !current });\r\n                toggleDisabled(!toDateDisabled);\r\n              }}\r\n            />{' '}\r\n            Current Education\r\n          </p>\r\n        </div>\r\n        <div className='form-group'>\r\n          <h4>To Date</h4>\r\n          <input\r\n            type='date'\r\n            name='to'\r\n            value={to}\r\n            onChange={e => onChange(e)}\r\n            disabled={toDateDisabled ? 'disabled' : ''}\r\n          />\r\n        </div>\r\n        <div className='form-group'>\r\n          <textarea\r\n            name='description'\r\n            cols='30'\r\n            rows='5'\r\n            placeholder='Program Description'\r\n            value={description}\r\n            onChange={e => onChange(e)}\r\n          />\r\n        </div>\r\n        <input type='submit' className='btn btn-primary my-1' />\r\n        <a className='btn btn-light my-1' href='dashboard.html'>\r\n          Go Back\r\n        </a>\r\n      </form>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nAddEducation.propTypes = {\r\n  // ptfr\r\n  addEducation: PropTypes.func.isRequired\r\n};\r\n\r\nexport default connect(\r\n  null,\r\n  { addEducation }\r\n)(withRouter(AddEducation));\r\n","import React, { Fragment, useState } from 'react';\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { createProfile } from '../../actions/profile';\r\n\r\nconst CreateProfile = ({ createProfile, history }) => {\r\n  const [formData, setFormData] = useState({\r\n    company: '',\r\n    website: '',\r\n    location: '',\r\n    status: '',\r\n    skills: '',\r\n    githubusername: '',\r\n    bio: '',\r\n    twitter: '',\r\n    facebook: '',\r\n    linkedin: '',\r\n    youtube: '',\r\n    instagram: ''\r\n  });\r\n\r\n  const [displaySocialInputs, toggleSocialInputs] = useState(false);\r\n\r\n  const {\r\n    company,\r\n    website,\r\n    location,\r\n    status,\r\n    skills,\r\n    githubusername,\r\n    bio,\r\n    twitter,\r\n    facebook,\r\n    linkedin,\r\n    youtube,\r\n    instagram\r\n  } = formData;\r\n\r\n  const onChange = e =>\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n\r\n  const onSubmit = e => {\r\n    e.preventDefault();\r\n    // console.log(formData);\r\n    createProfile(formData, history);\r\n  };\r\n  return (\r\n    <Fragment>\r\n      <h1 className='large text-primary'>Create Your Profile</h1>\r\n      <p className='lead'>\r\n        <i className='fas fa-user' /> Let's get some information to make your\r\n        profile stand out\r\n      </p>\r\n      <small>* = required field</small>\r\n      <form className='form' onSubmit={e => onSubmit(e)}>\r\n        <div className='form-group'>\r\n          <select name='status' value={status} onChange={e => onChange(e)}>\r\n            <option value='0'>* Select Professional Status</option>\r\n            <option value='Developer'>Developer</option>\r\n            <option value='Junior Developer'>Junior Developer</option>\r\n            <option value='Senior Developer'>Senior Developer</option>\r\n            <option value='Manager'>Manager</option>\r\n            <option value='Student or Learning'>Student or Learning</option>\r\n            <option value='Instructor'>Instructor or Teacher</option>\r\n            <option value='Intern'>Intern</option>\r\n            <option value='Other'>Other</option>\r\n          </select>\r\n          <small className='form-text'>\r\n            Give us an idea of where you are at in your career\r\n          </small>\r\n        </div>\r\n        <div className='form-group'>\r\n          <input\r\n            type='text'\r\n            placeholder='Company'\r\n            name='company'\r\n            value={company}\r\n            onChange={e => onChange(e)}\r\n          />\r\n          <small className='form-text'>\r\n            Could be your own company or one you work for\r\n          </small>\r\n        </div>\r\n        <div className='form-group'>\r\n          <input\r\n            type='text'\r\n            placeholder='Website'\r\n            name='website'\r\n            value={website}\r\n            onChange={e => onChange(e)}\r\n          />\r\n          <small className='form-text'>\r\n            Could be your own or a company website\r\n          </small>\r\n        </div>\r\n        <div className='form-group'>\r\n          <input\r\n            type='text'\r\n            placeholder='Location'\r\n            name='location'\r\n            value={location}\r\n            onChange={e => onChange(e)}\r\n          />\r\n          <small className='form-text'>\r\n            City & state suggested (eg. Boston, MA)\r\n          </small>\r\n        </div>\r\n        <div className='form-group'>\r\n          <input\r\n            type='text'\r\n            placeholder='* Skills'\r\n            name='skills'\r\n            value={skills}\r\n            onChange={e => onChange(e)}\r\n          />\r\n          <small className='form-text'>\r\n            Please use comma separated values (eg. HTML,CSS,JavaScript,PHP)\r\n          </small>\r\n        </div>\r\n        <div className='form-group'>\r\n          <input\r\n            type='text'\r\n            placeholder='Github Username'\r\n            name='githubusername'\r\n            value={githubusername}\r\n            onChange={e => onChange(e)}\r\n          />\r\n          <small className='form-text'>\r\n            If you want your latest repos and a Github link, include your\r\n            username\r\n          </small>\r\n        </div>\r\n        <div className='form-group'>\r\n          <textarea\r\n            placeholder='A short bio of yourself'\r\n            name='bio'\r\n            value={bio}\r\n            onChange={e => onChange(e)}\r\n          />\r\n          <small className='form-text'>Tell us a little about yourself</small>\r\n        </div>\r\n\r\n        <div className='my-2'>\r\n          <button\r\n            type='button'\r\n            className='btn btn-light'\r\n            onClick={() => toggleSocialInputs(!displaySocialInputs)}\r\n          >\r\n            Add Social Network Links\r\n          </button>\r\n          <span>Optional</span>\r\n        </div>\r\n\r\n        {displaySocialInputs && (\r\n          <Fragment>\r\n            <div className='form-group social-input'>\r\n              <i className='fab fa-twitter fa-2x' />\r\n              <input\r\n                type='text'\r\n                placeholder='Twitter URL'\r\n                name='twitter'\r\n                value={twitter}\r\n                onChange={e => onChange(e)}\r\n              />\r\n            </div>\r\n\r\n            <div className='form-group social-input'>\r\n              <i className='fab fa-facebook fa-2x' />\r\n              <input\r\n                type='text'\r\n                placeholder='Facebook URL'\r\n                name='facebook'\r\n                value={facebook}\r\n                onChange={e => onChange(e)}\r\n              />\r\n            </div>\r\n\r\n            <div className='form-group social-input'>\r\n              <i className='fab fa-youtube fa-2x' />\r\n              <input\r\n                type='text'\r\n                placeholder='YouTube URL'\r\n                name='youtube'\r\n                value={youtube}\r\n                onChange={e => onChange(e)}\r\n              />\r\n            </div>\r\n\r\n            <div className='form-group social-input'>\r\n              <i className='fab fa-linkedin fa-2x' />\r\n              <input\r\n                type='text'\r\n                placeholder='Linkedin URL'\r\n                name='linkedin'\r\n                value={linkedin}\r\n                onChange={e => onChange(e)}\r\n              />\r\n            </div>\r\n\r\n            <div className='form-group social-input'>\r\n              <i className='fab fa-instagram fa-2x' />\r\n              <input\r\n                type='text'\r\n                placeholder='Instagram URL'\r\n                name='instagram'\r\n                value={instagram}\r\n                onChange={e => onChange(e)}\r\n              />\r\n            </div>\r\n          </Fragment>\r\n        )}\r\n\r\n        <input type='submit' className='btn btn-primary my-1' />\r\n        <Link className='btn btn-light my-1' to='/dashboard'>\r\n          Go Back\r\n        </Link>\r\n      </form>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nCreateProfile.propTypes = {\r\n  // prfr\r\n  createProfile: PropTypes.func.isRequired\r\n};\r\n\r\nexport default connect(\r\n  null,\r\n  { createProfile }\r\n)(withRouter(CreateProfile));\r\n","// racfp\r\nimport React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst ProfileItem = ({\r\n  profile: {\r\n    user: { _id, name, avatar },\r\n    status,\r\n    company,\r\n    location,\r\n    skills\r\n  }\r\n}) => {\r\n  return (\r\n    <div className='profile bg-light'>\r\n      <img src={avatar} alt='' className='round-img' />\r\n      <div>\r\n        <h2>{name}</h2>\r\n        <p>\r\n          {status} {company && <span> at {company}</span>}\r\n        </p>\r\n        <p className='my-1'>{location && <span>{location}</span>}</p>\r\n        <Link to={`/profile/${_id}`} className='btn btn-primary'>\r\n          View Profile\r\n        </Link>\r\n      </div>\r\n      <ul>\r\n        {skills.slice(0, 4).map((skill, index) => (\r\n          <li key={index} className='text-primary'>\r\n            <i className='fas fa-check' /> {skill}\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nProfileItem.propTypes = {\r\n  profile: PropTypes.object.isRequired\r\n};\r\n\r\nexport default ProfileItem;\r\n","// racpf\r\nimport React, { Fragment, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport Spinner from '../layout/Spinner';\r\nimport ProfileItem from './ProfileItem';\r\nimport { getProfiles } from '../../actions/profile';\r\n\r\nconst Profiles = ({ getProfiles, profile: { profiles, loading } }) => {\r\n  useEffect(() => {\r\n    getProfiles();\r\n  }, [getProfiles]);\r\n\r\n  return (\r\n    <Fragment>\r\n      {loading ? (\r\n        <Spinner />\r\n      ) : (\r\n        <Fragment>\r\n          <h1 className='large text-primary'>Developers</h1>\r\n          <p className='lead'>\r\n            <i className='fab fa-connectdevelop' /> Browse and connect with\r\n            Developers\r\n          </p>\r\n          <div className='profiles'>\r\n            {profiles.length > 0 ? (\r\n              profiles.map(profile => (\r\n                <ProfileItem key={profile._id} profile={profile} />\r\n              ))\r\n            ) : (\r\n              <h4>No profiles found...</h4>\r\n            )}\r\n          </div>\r\n        </Fragment>\r\n      )}\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nProfiles.propTypes = {\r\n  getProfiles: PropTypes.func.isRequired,\r\n  profile: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  profile: state.profile\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { getProfiles }\r\n)(Profiles);\r\n","import React, { Fragment } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Link } from 'react-router-dom';\r\nimport Moment from 'react-moment';\r\nimport { connect } from 'react-redux';\r\nimport { addLike, removeLike, deletePost } from '../../actions/post';\r\n\r\nconst PostItem = ({\r\n  addLike,\r\n  removeLike,\r\n  deletePost,\r\n  auth,\r\n  post: { _id, text, name, avatar, user, likes, comments, date },\r\n  showActions\r\n}) => (\r\n  <div className='post bg-white p-1 my-1'>\r\n    <div>\r\n      <Link to={`/profile/${user}`}>\r\n        <img className='round-img' src={avatar} alt='' />\r\n        <h4>{name}</h4>\r\n      </Link>\r\n    </div>\r\n    <div>\r\n      <p className='my-1'>{text}</p>\r\n      <p className='post-date'>\r\n        Posted <Moment format='YYYY/MM/DD'>{date}</Moment>\r\n      </p>\r\n\r\n      {showActions && (\r\n        <Fragment>\r\n          <button\r\n            onClick={e => addLike(_id)}\r\n            type='button'\r\n            className='btn btn-light'\r\n          >\r\n            <i className='fas fa-thumbs-up' />{' '}\r\n            <span>{likes.length > 0 && <span>{likes.length}</span>}</span>\r\n          </button>\r\n          <button\r\n            onClick={e => removeLike(_id)}\r\n            type='button'\r\n            className='btn btn-light'\r\n          >\r\n            <i className='fas fa-thumbs-down' />\r\n          </button>\r\n          <Link to={`/posts/${_id}`} className='btn btn-primary'>\r\n            Discussion{' '}\r\n            {comments.length > 0 && (\r\n              <span className='comment-count'>{comments.length}</span>\r\n            )}\r\n          </Link>\r\n          {!auth.loading && user === auth.user._id && (\r\n            <button\r\n              onClick={e => deletePost(_id)}\r\n              type='button'\r\n              className='btn btn-danger'\r\n            >\r\n              <i className='fas fa-times' />\r\n            </button>\r\n          )}\r\n        </Fragment>\r\n      )}\r\n    </div>\r\n  </div>\r\n);\r\n\r\nPostItem.defaultProps = {\r\n  showActions: true\r\n};\r\n\r\nPostItem.propTypes = {\r\n  post: PropTypes.object.isRequired,\r\n  auth: PropTypes.object.isRequired,\r\n  addLike: PropTypes.func.isRequired,\r\n  removeLike: PropTypes.func.isRequired,\r\n  deletePost: PropTypes.func.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  auth: state.auth\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { addLike, removeLike, deletePost }\r\n)(PostItem);\r\n","import axios from 'axios';\r\nimport { setAlert } from './alert';\r\nimport {\r\n  GET_POSTS,\r\n  POST_ERROR,\r\n  UPDATE_LIKES,\r\n  DELETE_POST,\r\n  ADD_POST,\r\n  GET_POST,\r\n  ADD_COMMENT,\r\n  REMOVE_COMMENT\r\n} from './types';\r\nimport backend from './backend';\r\n\r\n// Get posts\r\nexport const getPosts = () => async dispatch => {\r\n  try {\r\n    const res = await axios.get(\r\n      `https://boiling-taiga-24831.herokuapp.com/api/posts`\r\n    );\r\n    dispatch({\r\n      type: GET_POSTS,\r\n      payload: res.data\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: POST_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status }\r\n    });\r\n  }\r\n};\r\n\r\n// Add like\r\nexport const addLike = id => async dispatch => {\r\n  try {\r\n    const res = await axios.put(\r\n      `https://boiling-taiga-24831.herokuapp.com/api/posts/like/${id}`\r\n    );\r\n    dispatch({\r\n      type: UPDATE_LIKES,\r\n      payload: { id, likes: res.data }\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: POST_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status }\r\n    });\r\n  }\r\n};\r\n\r\n// Remove like\r\nexport const removeLike = id => async dispatch => {\r\n  try {\r\n    const res = await axios.put(\r\n      `https://boiling-taiga-24831.herokuapp.com/api/posts/unlike/${id}`\r\n    );\r\n    dispatch({\r\n      type: UPDATE_LIKES,\r\n      payload: { id, likes: res.data }\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: POST_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status }\r\n    });\r\n  }\r\n};\r\n\r\n// Delete post\r\nexport const deletePost = id => async dispatch => {\r\n  try {\r\n    await axios.delete(\r\n      `https://boiling-taiga-24831.herokuapp.com/api/posts/${id}`\r\n    );\r\n    dispatch({\r\n      type: DELETE_POST,\r\n      payload: id\r\n    });\r\n\r\n    dispatch(setAlert('Post Removed', 'success'));\r\n  } catch (err) {\r\n    dispatch({\r\n      type: POST_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status }\r\n    });\r\n  }\r\n};\r\n\r\n// Add post\r\nexport const addPost = formData => async dispatch => {\r\n  const config = {\r\n    headers: {\r\n      'Content-Type': 'application/json'\r\n    }\r\n  };\r\n\r\n  try {\r\n    const res = await axios.post(\r\n      `https://boiling-taiga-24831.herokuapp.com/api/posts/`,\r\n      formData,\r\n      config\r\n    );\r\n    dispatch({\r\n      type: ADD_POST,\r\n      payload: res.data\r\n    });\r\n\r\n    dispatch(setAlert('Post Created', 'success'));\r\n  } catch (err) {\r\n    dispatch({\r\n      type: POST_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status }\r\n    });\r\n  }\r\n};\r\n\r\n// Get post\r\nexport const getPost = id => async dispatch => {\r\n  try {\r\n    const res = await axios.get(\r\n      `https://boiling-taiga-24831.herokuapp.com/api/posts/${id}`\r\n    );\r\n    dispatch({\r\n      type: GET_POST,\r\n      payload: res.data\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: POST_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status }\r\n    });\r\n  }\r\n};\r\n\r\n// Add comment\r\nexport const addComment = (postId, formData) => async dispatch => {\r\n  const config = {\r\n    headers: {\r\n      'Content-Type': 'application/json'\r\n    }\r\n  };\r\n\r\n  try {\r\n    const res = await axios.post(\r\n      `https://boiling-taiga-24831.herokuapp.com/api/posts/comment/${postId}`,\r\n      formData,\r\n      config\r\n    );\r\n    dispatch({\r\n      type: ADD_COMMENT,\r\n      payload: res.data\r\n    });\r\n\r\n    dispatch(setAlert('Comment added', 'success'));\r\n  } catch (err) {\r\n    dispatch({\r\n      type: POST_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status }\r\n    });\r\n  }\r\n};\r\n\r\n// Delete comment\r\nexport const deleteComment = (postId, commentId) => async dispatch => {\r\n  try {\r\n    const res = await axios.delete(\r\n      `https://boiling-taiga-24831.herokuapp.com/api/posts/comment/${postId}/${commentId}`\r\n    );\r\n    dispatch({\r\n      type: REMOVE_COMMENT,\r\n      // send the comment id in teh payload\r\n      payload: commentId\r\n    });\r\n\r\n    dispatch(setAlert('Comment removed', 'success'));\r\n  } catch (err) {\r\n    dispatch({\r\n      type: POST_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status }\r\n    });\r\n  }\r\n};\r\n","// racfp\r\nimport React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { addPost } from '../../actions/post';\r\n\r\nconst PostForm = ({ addPost }) => {\r\n  const [text, setText] = useState('');\r\n\r\n  return (\r\n    <div className='post-form'>\r\n      <div className='bg-primary p'>\r\n        <h3>Say something</h3>\r\n      </div>\r\n      <form\r\n        className='form my-1'\r\n        onSubmit={e => {\r\n          e.preventDefault();\r\n          addPost({ text });\r\n          setText('');\r\n        }}\r\n      >\r\n        <textarea\r\n          name='text'\r\n          cols='30'\r\n          rows='5'\r\n          placeholder='Comment on this post'\r\n          required\r\n          value={text}\r\n          onChange={e => setText(e.target.value)}\r\n        />\r\n        <input type='submit' className='btn btn-dark my-1' value='Submit' />\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nPostForm.propTypes = {\r\n  addPost: PropTypes.func.isRequired\r\n};\r\n\r\nexport default connect(\r\n  null,\r\n  { addPost }\r\n)(PostForm);\r\n","import React, { Fragment, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { getPosts } from '../../actions/post';\r\nimport PostItem from './PostItem';\r\nimport Spinner from '../layout/Spinner';\r\nimport PostForm from './PostForm';\r\n\r\nconst Posts = ({ getPosts, post: { posts, loading } }) => {\r\n  useEffect(() => {\r\n    getPosts();\r\n  }, [getPosts]);\r\n\r\n  return loading ? (\r\n    <Spinner />\r\n  ) : (\r\n    <Fragment>\r\n      <h1 className='large text-primary'>\r\n        <p className='lead'>\r\n          <i className='fas fa-user' /> Welcome to the community\r\n        </p>\r\n        <PostForm />\r\n\r\n        {posts.map(post => (\r\n          <PostItem key={post._id} post={post} />\r\n        ))}\r\n      </h1>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nPosts.propTypes = {\r\n  getPosts: PropTypes.func.isRequired,\r\n  post: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  post: state.post\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { getPosts }\r\n)(Posts);\r\n","// racfp\r\nimport React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { addComment } from '../../actions/post';\r\n\r\nconst CommentForm = ({ postId, addComment }) => {\r\n  const [text, setText] = useState('');\r\n\r\n  return (\r\n    <div className='post-form'>\r\n      <div className='bg-primary p'>\r\n        <h3>Leave A Comment</h3>\r\n      </div>\r\n      <form\r\n        className='form my-1'\r\n        onSubmit={e => {\r\n          e.preventDefault();\r\n          addComment(postId, { text });\r\n          setText('');\r\n        }}\r\n      >\r\n        <textarea\r\n          name='text'\r\n          cols='30'\r\n          rows='5'\r\n          placeholder='Comment on this post'\r\n          required\r\n          value={text}\r\n          onChange={e => setText(e.target.value)}\r\n        />\r\n        <input type='submit' className='btn btn-dark my-1' value='Submit' />\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nCommentForm.propTypes = {\r\n  addComment: PropTypes.func.isRequired\r\n};\r\n\r\nexport default connect(\r\n  null,\r\n  { addComment }\r\n)(CommentForm);\r\n","import React, { Fragment } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport Moment from 'react-moment';\r\nimport { deleteComment } from '../../actions/post';\r\n\r\nconst CommentItem = ({\r\n  postId,\r\n  comment: { _id, text, name, avatar, user, date },\r\n  auth,\r\n  deleteComment\r\n}) => {\r\n  return (\r\n    <div className='post bg-white p-1 my-1'>\r\n      <div>\r\n        <Link to={`/profile/${user}`}>\r\n          <img className='round-img' src={avatar} alt='' />\r\n          <h4>{name}</h4>\r\n        </Link>\r\n      </div>\r\n      <div>\r\n        <p className='my-1'>{text}</p>\r\n        <p className='post-date'>\r\n          Posted on <Moment fromat='YYYY/MM/DD'>{date}</Moment>\r\n        </p>\r\n        {!auth.loading && user === auth.user._id && (\r\n          <button\r\n            onClick={e => deleteComment(postId, _id)}\r\n            type='button'\r\n            className='btn btn-danger'\r\n          >\r\n            <i className='fas fa-times' />\r\n          </button>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nCommentItem.propTypes = {\r\n  postId: PropTypes.string.isRequired,\r\n  comment: PropTypes.object.isRequired,\r\n  auth: PropTypes.object.isRequired,\r\n  deleteComment: PropTypes.func.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  auth: state.auth\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { deleteComment }\r\n)(CommentItem);\r\n","// racfp\r\nimport React, { Fragment, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport Spinner from '../layout/Spinner';\r\nimport PostItem from '../posts/PostItem';\r\nimport { getPost } from '../../actions/post';\r\nimport CommentForm from './CommentForm';\r\nimport CommentItem from './CommentItem';\r\n\r\nconst Post = ({ getPost, post: { post, loading }, match }) => {\r\n  useEffect(() => {\r\n    getPost(match.params.id);\r\n  }, [getPost]);\r\n\r\n  return loading || post === null ? (\r\n    <Spinner />\r\n  ) : (\r\n    <Fragment>\r\n      <Link to={'/posts'} className='btn'>\r\n        Back to Posts\r\n      </Link>\r\n      <PostItem post={post} showActions={false} />\r\n      <CommentForm postId={post._id} />\r\n      <div className='comments'>\r\n        {post.comments.map(comment => (\r\n          <CommentItem key={comment._id} comment={comment} postId={post._id} />\r\n        ))}\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nPost.propTypes = {\r\n  getPost: PropTypes.func.isRequired,\r\n  post: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  post: state.post\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { getPost }\r\n)(Post);\r\n","import { SET_ALERT, REMOVE_ALERT } from '../actions/types';\r\n\r\nconst initialState = [];\r\n\r\nexport default function(state = initialState, action) {\r\n  const { type, payload } = action;\r\n\r\n  switch (type) {\r\n    case SET_ALERT:\r\n      return [...state, payload];\r\n    case REMOVE_ALERT:\r\n      return state.filter(alert => alert.id !== payload);\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import {\r\n  REGISTER_SUCCESS,\r\n  REGISTER_FAIL,\r\n  USER_LOADED,\r\n  AUTH_ERROR,\r\n  LOGIN_SUCCESS,\r\n  LOGIN_FAIL,\r\n  LOGOUT,\r\n  ACCOUNT_DELETED\r\n} from '../actions/types';\r\n\r\nconst initialState = {\r\n  token: localStorage.getItem('token'),\r\n  isAuthenticated: null,\r\n  loading: true,\r\n  user: null\r\n};\r\n\r\nexport default function(state = initialState, action) {\r\n  const { type, payload } = action;\r\n  switch (type) {\r\n    case USER_LOADED:\r\n      return {\r\n        ...state,\r\n        isAuthenticated: true,\r\n        loading: false,\r\n        user: payload\r\n      };\r\n    case REGISTER_SUCCESS:\r\n    case LOGIN_SUCCESS:\r\n      localStorage.setItem('token', payload.token);\r\n      return {\r\n        ...state,\r\n        ...payload,\r\n        isAuthenticated: true,\r\n        loading: false\r\n      };\r\n    case REGISTER_FAIL:\r\n    case AUTH_ERROR:\r\n    case LOGIN_FAIL:\r\n    case LOGOUT:\r\n    case ACCOUNT_DELETED:\r\n      localStorage.removeItem('token');\r\n      return {\r\n        ...state,\r\n        token: null,\r\n        isAuthenticated: false,\r\n        loading: false\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import {\r\n  GET_PROFILE,\r\n  PROFILE_ERROR,\r\n  CLEAR_PROFILE,\r\n  UPDATE_PROFILE,\r\n  GET_PROFILES,\r\n  GET_REPOS\r\n} from '../actions/types';\r\n\r\nconst initialState = {\r\n  profile: null,\r\n  profiles: [],\r\n  repos: [],\r\n  loading: true,\r\n  error: {}\r\n};\r\n\r\nexport default function(state = initialState, action) {\r\n  const { type, payload } = action;\r\n\r\n  switch (type) {\r\n    case GET_PROFILE:\r\n    case UPDATE_PROFILE:\r\n      return {\r\n        ...state,\r\n        profile: payload,\r\n        loading: false\r\n      };\r\n    case GET_PROFILES:\r\n      return {\r\n        ...state,\r\n        profiles: payload,\r\n        loading: false\r\n      };\r\n    case PROFILE_ERROR:\r\n      return {\r\n        ...state,\r\n        error: payload,\r\n        loading: false\r\n      };\r\n    case CLEAR_PROFILE:\r\n      return {\r\n        ...state,\r\n        profile: null,\r\n        repos: [],\r\n        loading: false\r\n      };\r\n    case GET_REPOS:\r\n      return {\r\n        ...state,\r\n        repos: payload,\r\n        loading: false\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import {\r\n  GET_POSTS,\r\n  POST_ERROR,\r\n  UPDATE_LIKES,\r\n  DELETE_POST,\r\n  ADD_POST,\r\n  GET_POST,\r\n  ADD_COMMENT,\r\n  REMOVE_COMMENT\r\n} from '../actions/types';\r\n\r\nconst initialState = {\r\n  posts: [],\r\n  post: null,\r\n  loading: true,\r\n  error: {}\r\n};\r\n\r\nexport default function(state = initialState, action) {\r\n  const { type, payload } = action;\r\n\r\n  switch (type) {\r\n    case GET_POSTS:\r\n      return {\r\n        ...state,\r\n        posts: payload,\r\n        loading: false\r\n      };\r\n    case GET_POST:\r\n      return {\r\n        ...state,\r\n        post: payload,\r\n        loading: false\r\n      };\r\n    case ADD_POST:\r\n      return {\r\n        ...state,\r\n        posts: [payload, ...state.posts],\r\n        loading: false\r\n      };\r\n    case DELETE_POST:\r\n      return {\r\n        ...state,\r\n        posts: state.posts.filter(post => post._id !== payload),\r\n        loading: false\r\n      };\r\n    case POST_ERROR:\r\n      return {\r\n        ...state,\r\n        error: payload,\r\n        loading: false\r\n      };\r\n    case UPDATE_LIKES:\r\n      return {\r\n        ...state,\r\n        posts: state.posts.map(post =>\r\n          post._id === payload.id ? { ...post, likes: payload.likes } : post\r\n        ),\r\n        loading: false\r\n      };\r\n    case ADD_COMMENT:\r\n      return {\r\n        ...state,\r\n        post: { ...state.post, comments: payload },\r\n        loading: false\r\n      };\r\n    case REMOVE_COMMENT:\r\n      return {\r\n        ...state,\r\n        post: {\r\n          ...state.post,\r\n          // gets the comment id in the payload from the action\r\n          comments: state.post.comments.filter(\r\n            // bring all the comments exept the one with that id\r\n            comment => comment._id !== payload\r\n          )\r\n        },\r\n        loading: false\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { combineReducers } from 'redux';\r\nimport alert from './alert';\r\nimport auth from './auth';\r\nimport profile from './profile';\r\nimport post from './post';\r\n\r\nexport default combineReducers({\r\n  alert,\r\n  auth,\r\n  profile,\r\n  post\r\n});\r\n","import { createStore, applyMiddleware } from 'redux';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport thunk from 'redux-thunk';\r\nimport rootReducer from './reducers';\r\n\r\nconst initialState = {};\r\n\r\nconst middleware = [thunk];\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  initialState,\r\n  composeWithDevTools(applyMiddleware(...middleware))\r\n);\r\n\r\nexport default store;\r\n","import React, { Fragment, useEffect } from 'react';\r\nimport withSplashScreen from './components/withSplashScreen';\r\nimport './App.css';\r\nimport Navbar from './components/layout/Navbar';\r\nimport Landing from './components/layout/Landing';\r\nimport Register from './components/auth/Register';\r\nimport Login from './components/auth/Login';\r\nimport Alert from './components/layout/Alert';\r\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\r\n\r\nimport Dashboard from './components/dashboard/Dashboard';\r\nimport PrivateRoute from './components/routing/PrivateRoute';\r\nimport EditProfile from './components/profile-form/EditProfile';\r\nimport AddExperience from './components/profile-form/AddExperience';\r\nimport Profile from './components/profile/Profile';\r\nimport AddEducation from './components/profile-form/AddEducation';\r\nimport CreateProfile from './components/profile-form/CreateProfile';\r\nimport Profiles from './components/profiles/Profiles';\r\nimport Posts from './components/posts/Posts';\r\nimport Post from './components/post/Post';\r\n\r\n// Redux\r\nimport { Provider } from 'react-redux';\r\nimport store from './store';\r\nimport { loadUser } from './actions/auth';\r\nimport setAuthToken from './utils/setAuthToken';\r\n\r\nif (localStorage.token) {\r\n  setAuthToken(localStorage.token);\r\n}\r\n\r\nconst App = () => {\r\n  // when the state updates 'useEffect' will keep running and be in a constant loop,\r\n  // '[]' means it will only run once\r\n  useEffect(() => {\r\n    store.dispatch(loadUser());\r\n  }, []);\r\n\r\n  return (\r\n    <Provider store={store}>\r\n      <Router>\r\n        <Fragment>\r\n          <Navbar />\r\n          <Route exact path='/' component={Landing} />\r\n          <section className='container'>\r\n            <Alert />\r\n            <Switch>\r\n              <Route exact path='/register' component={Register} />\r\n              <Route exact path='/login' component={Login} />\r\n              <Route exact path='/profiles' component={Profiles} />\r\n              <Route exact path='/profile/:id' component={Profile} />\r\n              <PrivateRoute exact path='/dashboard' component={Dashboard} />\r\n              <PrivateRoute\r\n                exact\r\n                path='/create-profile'\r\n                component={CreateProfile}\r\n              />\r\n              <PrivateRoute\r\n                exact\r\n                path='/edit-profile'\r\n                component={EditProfile}\r\n              />\r\n              <PrivateRoute\r\n                exact\r\n                path='/add-experience'\r\n                component={AddExperience}\r\n              />\r\n              <PrivateRoute\r\n                exact\r\n                path='/add-education'\r\n                component={AddEducation}\r\n              />\r\n              <PrivateRoute exact path='/posts' component={Posts} />\r\n              <PrivateRoute exact path='/posts/:id' component={Post} />\r\n            </Switch>\r\n          </section>\r\n        </Fragment>\r\n      </Router>\r\n    </Provider>\r\n  );\r\n};\r\n\r\nexport default withSplashScreen(App);\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}