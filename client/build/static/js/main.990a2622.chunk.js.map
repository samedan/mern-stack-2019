{"version":3,"sources":["components/layout/spinner.gif","actions/alert.js","actions/types.js","utils/setAuthToken.js","actions/auth.js","components/layout/Navbar.js","components/layout/Landing.js","components/auth/Register.js","components/auth/Login.js","components/layout/Alert.js","actions/profile.js","components/dashboard/DashboardActions.js","components/dashboard/Experience.js","components/dashboard/Education.js","components/layout/Spinner.js","components/dashboard/Dashboard.js","components/routing/PrivateRoute.js","components/profile-form/EditProfile.js","components/profile-form/AddExperience.js","components/profile/ProfileTop.js","components/profile/ProfileAbout.js","components/profile/ProfileExperience.js","components/profile/ProfileEducation.js","components/profile/ProfileGithub.js","components/profile/Profile.js","components/profile-form/AddEducation.js","components/profile-form/CreateProfile.js","components/profiles/ProfileItem.js","components/profiles/Profiles.js","components/posts/PostItem.js","actions/post.js","components/posts/PostForm.js","components/posts/Posts.js","components/post/CommentForm.js","components/post/CommentItem.js","components/post/Post.js","reducers/alert.js","reducers/auth.js","reducers/profile.js","reducers/post.js","reducers/index.js","store.js","App.js","index.js"],"names":["module","exports","__webpack_require__","p","setAlert","msg","alertType","timeout","arguments","length","undefined","dispatch","id","uuid","v4","type","payload","setTimeout","setAuthToken","token","console","log","axios","defaults","headers","common","loadUser","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","res","wrap","_context","prev","next","localStorage","get","sent","data","t0","stop","_x","apply","this","connect","state","auth","logout","_ref5","_callee4","_context4","_x4","_ref$auth","isAuthenticated","loading","authLinks","react_default","createElement","react_router_dom","to","className","onClick","href","guestLinks","react","Landing","props","register","_ref2","name","email","password","_ref3","_callee2","config","body","errors","_context2","Content-Type","JSON","stringify","post","response","forEach","error","_x2","_useState","useState","password2","_useState2","slicedToArray","formData","setFormData","onChange","e","objectSpread","defineProperty","target","value","onSubmit","preventDefault","react_router","placeholder","required","minLength","login","_ref4","_callee3","_context3","_x3","alerts","alert","map","key","concat","getCurrentProfile","statusText","status","createProfile","history","edit","_callee5","_context5","push","_x5","DashboardActions","deleteExperience","_ref8","_callee8","_context8","delete","_x8","experience","experiences","exp","_id","company","title","dist_default","format","from","deleteEducation","_ref9","_callee9","_context9","_x9","education","educations","edu","school","degreee","Spinner","src","spinner","style","width","margin","display","alt","profile","deleteAccount","_ref10","_callee10","_context10","window","confirm","_x10","user","_ref$profile","useEffect","dashboard_DashboardActions","dashboard_Experience","dashboard_Education","Component","component","rest","objectWithoutProperties","assign","render","withRouter","website","location","skills","githubusername","bio","twitter","facebook","linkedin","youtube","instagram","_useState3","_useState4","displaySocialInputs","toggleSocialInputs","join","social","addExperience","_ref6","_callee6","_context6","put","_x6","current","description","toDateDisabled","toggleDisabled","checked","disabled","cols","rows","ProfileTop","_ref$profile$user","avatar","rel","ProfileAbout","trim","split","skill","index","ProfileExperience","_ref$experience","ProfileEducation","_ref$education","degree","fieldofstudy","repos","getGithubRepos","username","repo","html_url","stargazers_count","watchers_count","forks_count","getProfileById","userId","match","params","profile_ProfileTop","profile_ProfileAbout","profile_ProfileExperience","profile_ProfileEducation","profile_ProfileGithub","addEducation","_ref7","_callee7","_context7","_x7","ProfileItem","slice","getProfiles","profiles","profiles_ProfileItem","PostItem","addLike","removeLike","deletePost","_ref$post","text","likes","comments","date","showActions","defaultProps","addPost","setText","getPosts","posts","posts_PostForm","posts_PostItem","addComment","postId","deleteComment","commentId","_ref$comment","comment","fromat","getPost","post_CommentForm","post_CommentItem","initialState","getItem","combineReducers","action","toConsumableArray","filter","setItem","removeItem","middleware","thunk","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","App","es","layout_Navbar","exact","path","layout_Alert","Register","Login","Profiles","Profile","routing_PrivateRoute","Dashboard","CreateProfile","EditProfile","AddExperience","AddEducation","Posts","Post","ReactDOM","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.990a2622.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/spinner.8ac12962.gif\";","import uuid from 'uuid';\r\nimport { SET_ALERT, REMOVE_ALERT } from './types';\r\n\r\nexport const setAlert = (msg, alertType, timeout = 5000) => dispatch => {\r\n  const id = uuid.v4();\r\n  dispatch({\r\n    type: SET_ALERT,\r\n    payload: { msg, alertType, id }\r\n  });\r\n\r\n  setTimeout(() => dispatch({ type: REMOVE_ALERT, payload: id }), timeout);\r\n};\r\n","export const SET_ALERT = 'SET_ALERT';\r\nexport const REMOVE_ALERT = 'REMOVE_ALERT';\r\nexport const REGISTER_SUCCESS = 'REGISTER_SUCCESS';\r\nexport const REGISTER_FAIL = 'REGISTER_FAIL';\r\nexport const USER_LOADED = 'USER_LOADED';\r\nexport const AUTH_ERROR = 'AUTH_ERROR';\r\nexport const LOGIN_SUCCESS = 'LOGIN_SUCCESS';\r\nexport const LOGIN_FAIL = 'LOGIN_FAIL';\r\nexport const LOGOUT = 'LOGOUT';\r\nexport const GET_PROFILE = 'GET_PROFILE';\r\nexport const GET_PROFILES = 'GET_PROFILES';\r\nexport const GET_REPOS = 'GET_REPOS';\r\nexport const CLEAR_PROFILE = 'CLEAR_PROFILE';\r\nexport const UPDATE_PROFILE = 'UPDATE_PROFILE';\r\nexport const PROFILE_ERROR = 'PROFILE_ERROR';\r\nexport const ACCOUNT_DELETED = 'ACCOUNT_DELETED';\r\nexport const GET_POSTS = 'GET_POSTS';\r\nexport const GET_POST = 'GET_POST';\r\nexport const POST_ERROR = 'POST_ERROR';\r\nexport const UPDATE_LIKES = 'UPDATE_LIKES';\r\nexport const DELETE_POST = 'DELETE_POST';\r\nexport const ADD_POST = 'ADD_POST';\r\nexport const ADD_COMMENT = 'ADD_COMMENT';\r\nexport const REMOVE_COMMENT = 'REMOVE_COMMENT';\r\n","import axios from 'axios';\r\n\r\nconst setAuthToken = token => {\r\n  if (token) {\r\n    console.log('token: '.token);\r\n    axios.defaults.headers.common['x-auth-token'] = token;\r\n  } else {\r\n    delete axios.defaults.headers.common['x-auth-token'];\r\n  }\r\n};\r\n\r\nexport default setAuthToken;\r\n","import axios from 'axios';\r\nimport { setAlert } from './alert';\r\nimport {\r\n  REGISTER_SUCCESS,\r\n  REGISTER_FAIL,\r\n  USER_LOADED,\r\n  AUTH_ERROR,\r\n  LOGIN_SUCCESS,\r\n  LOGIN_FAIL,\r\n  LOGOUT,\r\n  CLEAR_PROFILE\r\n} from './types';\r\nimport setAuthToken from '../utils/setAuthToken';\r\n\r\n// Load User\r\nexport const loadUser = () => async dispatch => {\r\n  if (localStorage.token) {\r\n    setAuthToken(localStorage.token);\r\n  }\r\n\r\n  try {\r\n    const res = await axios.get('/api/auth');\r\n    dispatch({\r\n      type: USER_LOADED,\r\n      // payload is 'user'\r\n      payload: res.data\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: AUTH_ERROR\r\n    });\r\n  }\r\n};\r\n\r\n// Register User\r\nexport const register = ({ name, email, password }) => async dispatch => {\r\n  const config = {\r\n    headers: {\r\n      'Content-Type': 'application/json'\r\n    }\r\n  };\r\n\r\n  const body = JSON.stringify({ name, email, password });\r\n\r\n  try {\r\n    const res = await axios.post('/api/users', body, config);\r\n    dispatch({\r\n      type: REGISTER_SUCCESS,\r\n      payload: res.data\r\n    });\r\n    dispatch(loadUser());\r\n  } catch (err) {\r\n    const errors = err.response.data.errors;\r\n\r\n    if (errors) {\r\n      errors.forEach(error => dispatch(setAlert(error.msg, 'danger')));\r\n    }\r\n    dispatch({\r\n      type: REGISTER_FAIL\r\n    });\r\n  }\r\n};\r\n\r\n// Login User\r\nexport const login = (email, password) => async dispatch => {\r\n  const config = {\r\n    headers: {\r\n      'Content-Type': 'application/json'\r\n    }\r\n  };\r\n\r\n  const body = JSON.stringify({ email, password });\r\n\r\n  try {\r\n    const res = await axios.post('/api/auth', body, config);\r\n\r\n    dispatch({\r\n      type: LOGIN_SUCCESS,\r\n      payload: res.data\r\n    });\r\n    dispatch(loadUser());\r\n  } catch (err) {\r\n    const errors = err.response.data.errors;\r\n\r\n    if (errors) {\r\n      errors.forEach(error => dispatch(setAlert(error.msg, 'danger')));\r\n    }\r\n    dispatch({\r\n      type: LOGIN_FAIL\r\n    });\r\n  }\r\n};\r\n\r\n// LOgout / Clear profile\r\nexport const logout = () => async dispatch => {\r\n  dispatch({ type: CLEAR_PROFILE });\r\n  dispatch({ type: LOGOUT });\r\n};\r\n","import React, { Fragment } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport { logout } from '../../actions/auth';\r\n\r\nconst Navbar = ({ auth: { isAuthenticated, loading }, logout }) => {\r\n  const authLinks = (\r\n    <ul>\r\n      <li>\r\n        <Link to='/profiles'>Developers</Link>\r\n      </li>\r\n      <li>\r\n        <Link to='/posts'>Posts</Link>\r\n      </li>\r\n      <li>\r\n        <Link to='/dashboard'>\r\n          <i className='fas fa-user' />\r\n          <span className='hide-sm'>Dashboard</span>\r\n        </Link>\r\n      </li>\r\n      <li>\r\n        <a onClick={logout} href='#!'>\r\n          <i className='fas fa-sign-out-alt' />\r\n          <span className='hide-sm'>Logout</span>\r\n        </a>\r\n      </li>\r\n    </ul>\r\n  );\r\n\r\n  const guestLinks = (\r\n    <ul>\r\n      <li>\r\n        <Link to='/profiles'>Developers</Link>\r\n      </li>\r\n      <li>\r\n        <Link to='/register'>Register</Link>\r\n      </li>\r\n      <li>\r\n        <Link to='/login'>Login</Link>\r\n      </li>\r\n    </ul>\r\n  );\r\n\r\n  return (\r\n    <nav className='navbar bg-dark'>\r\n      <h1>\r\n        <Link to='/'>\r\n          <i className='fas fa-code' /> DevConnector\r\n        </Link>\r\n      </h1>\r\n      {!loading && (\r\n        <Fragment>{isAuthenticated ? authLinks : guestLinks} </Fragment>\r\n      )}\r\n    </nav>\r\n  );\r\n};\r\n\r\nNavbar.propTypes = {\r\n  // ptfr\r\n  logout: PropTypes.func.isRequired,\r\n  // ptor\r\n  auth: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  auth: state.auth\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { logout }\r\n)(Navbar);\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Landing = props => {\r\n  return (\r\n    <section className='landing'>\r\n      <div className='dark-overlay'>\r\n        <div className='landing-inner'>\r\n          <h1 className='x-large'>Developer Connector</h1>\r\n          <p className='lead'>\r\n            Create a developer profile/portfolio, share posts and get help from\r\n            other developers\r\n          </p>\r\n          <div className='buttons'>\r\n            <Link to='/register' className='btn btn-primary'>\r\n              Sign Up\r\n            </Link>\r\n            <Link to='/login' className='btn btn-light'>\r\n              Login\r\n            </Link>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nLanding.propTypes = {};\r\n\r\nexport default Landing;\r\n","import React, { Fragment, useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport { setAlert } from '../../actions/alert';\r\nimport { register } from '../../actions/auth';\r\n// impt\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Register = ({ setAlert, register, isAuthenticated }) => {\r\n  // 'formData' is the state, 'setFormData' sets the values in\r\n  const [formData, setFormData] = useState({\r\n    name: '',\r\n    email: '',\r\n    password: '',\r\n    password2: ''\r\n  });\r\n\r\n  const { name, email, password, password2 } = formData;\r\n\r\n  const onChange = e =>\r\n    setFormData({\r\n      ...formData,\r\n      [e.target.name]: e.target.value\r\n    });\r\n\r\n  const onSubmit = async e => {\r\n    e.preventDefault();\r\n    if (password !== password2) {\r\n      setAlert('Passwords do not match', 'danger');\r\n    } else {\r\n      register({ name, email, password });\r\n    }\r\n  };\r\n\r\n  if (isAuthenticated) {\r\n    return <Redirect to='/dashbord' />;\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      <h1 className='large text-primary'>Sign Up</h1>\r\n      <p className='lead'>\r\n        <i className='fas fa-user' /> Create Your Account\r\n      </p>\r\n      <form className='form' onSubmit={e => onSubmit(e)}>\r\n        <div className='form-group'>\r\n          <input\r\n            type='text'\r\n            placeholder='Name'\r\n            name='name'\r\n            value={name}\r\n            onChange={e => onChange(e)}\r\n            required\r\n          />\r\n        </div>\r\n        <div className='form-group'>\r\n          <input\r\n            type='email'\r\n            placeholder='Email Address'\r\n            name='email'\r\n            value={email}\r\n            onChange={e => onChange(e)}\r\n            required\r\n          />\r\n          <small className='form-text'>\r\n            This site uses Gravatar so if you want a profile image, use a\r\n            Gravatar email\r\n          </small>\r\n        </div>\r\n        <div className='form-group'>\r\n          <input\r\n            type='password'\r\n            placeholder='Password'\r\n            name='password'\r\n            value={password}\r\n            onChange={e => onChange(e)}\r\n            minLength='6'\r\n          />\r\n        </div>\r\n        <div className='form-group'>\r\n          <input\r\n            type='password'\r\n            placeholder='Confirm Password'\r\n            name='password2'\r\n            value={password2}\r\n            onChange={e => onChange(e)}\r\n            minLength='6'\r\n          />\r\n        </div>\r\n        <input type='submit' className='btn btn-primary' value='Register' />\r\n      </form>\r\n      <p className='my-1'>\r\n        Already have an account? <Link to='/login'>Sign In</Link>\r\n      </p>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nRegister.propTypes = {\r\n  // ptfr\r\n  setAlert: PropTypes.func.isRequired,\r\n  register: PropTypes.func.isRequired,\r\n  isAuthenticated: PropTypes.bool\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  isAuthenticated: state.auth.isAuthenticated\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { setAlert, register }\r\n)(Register);\r\n\r\n/*\r\nRegister.js -> added 'connect' + 'the action 'setAlert', called it when passwords don't match and sent the 'msg' + 'alertType' to the action\r\n\r\nSET_ALERT -> msg, alertType, id -> added to state (...state, payload)\r\n\r\nAlert.js -> getting that state 'mapStateToProps'\r\n*/\r\n","import React, { Fragment, useState } from 'react';\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\n// impt\r\nimport PropTypes from 'prop-types';\r\nimport { login } from '../../actions/auth';\r\n\r\nconst Login = ({ login, isAuthenticated }) => {\r\n  // 'formData' is the state, 'setFormData' sets the values in\r\n  const [formData, setFormData] = useState({\r\n    email: '',\r\n    password: ''\r\n  });\r\n\r\n  const { email, password } = formData;\r\n\r\n  const onChange = e =>\r\n    setFormData({\r\n      ...formData,\r\n      [e.target.name]: e.target.value\r\n    });\r\n\r\n  const onSubmit = async e => {\r\n    e.preventDefault();\r\n    login(email, password);\r\n  };\r\n\r\n  // Redirect fo logedin\r\n  if (isAuthenticated) {\r\n    return <Redirect to='/dashboard' />;\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      <h1 className='large text-primary'>Sign In</h1>\r\n      <p className='lead'>\r\n        <i className='fas fa-user' /> Sign into your account\r\n      </p>\r\n      <form className='form' onSubmit={e => onSubmit(e)}>\r\n        <div className='form-group'>\r\n          <input\r\n            type='email'\r\n            placeholder='Email Address'\r\n            name='email'\r\n            value={email}\r\n            onChange={e => onChange(e)}\r\n            required\r\n          />\r\n        </div>\r\n        <div className='form-group'>\r\n          <input\r\n            type='password'\r\n            placeholder='Password'\r\n            name='password'\r\n            value={password}\r\n            onChange={e => onChange(e)}\r\n            minLength='6'\r\n          />\r\n        </div>\r\n\r\n        <input type='submit' className='btn btn-primary' value='Login' />\r\n      </form>\r\n      <p className='my-1'>\r\n        Dont't have an account? <Link to='/register'>Sign Up</Link>\r\n      </p>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nLogin.propTypes = {\r\n  // login: ptfr\r\n  login: PropTypes.func.isRequired,\r\n  // ..: ptb\r\n  isAuthenticated: PropTypes.bool\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  isAuthenticated: state.auth.isAuthenticated\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { login }\r\n)(Login);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\n\r\n//\r\nconst Alert = ({ alerts }) =>\r\n  alerts !== null &&\r\n  alerts.length > 0 &&\r\n  alerts.map(alert => (\r\n    <div key={alert.id} className={`alert alert-${alert.alertType}`}>\r\n      {alert.msg}\r\n    </div>\r\n  ));\r\n\r\nAlert.propTypes = {\r\n  // ptar\r\n  alerts: PropTypes.array.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  // access to props.alerts\r\n  alerts: state.alert\r\n});\r\n\r\nexport default connect(mapStateToProps)(Alert);\r\n","import axios from 'axios';\r\nimport { setAlert } from './alert';\r\n\r\nimport {\r\n  GET_PROFILE,\r\n  PROFILE_ERROR,\r\n  UPDATE_PROFILE,\r\n  ACCOUNT_DELETED,\r\n  CLEAR_PROFILE,\r\n  GET_PROFILES,\r\n  GET_REPOS\r\n} from './types';\r\n\r\n// Get current user profile\r\nexport const getCurrentProfile = () => async dispatch => {\r\n  try {\r\n    const res = await axios.get('/api/profile/me');\r\n\r\n    dispatch({\r\n      type: GET_PROFILE,\r\n      payload: res.data\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: PROFILE_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status }\r\n    });\r\n  }\r\n};\r\n\r\n// Get All profiles\r\nexport const getProfiles = () => async dispatch => {\r\n  dispatch({ type: CLEAR_PROFILE });\r\n  try {\r\n    const res = await axios.get('/api/profile');\r\n\r\n    dispatch({\r\n      type: GET_PROFILES,\r\n      payload: res.data\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: PROFILE_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status }\r\n    });\r\n  }\r\n};\r\n\r\n// Get profile by ID\r\nexport const getProfileById = userId => async dispatch => {\r\n  try {\r\n    const res = await axios.get(`/api/profile/user/${userId}`);\r\n\r\n    dispatch({\r\n      type: GET_PROFILE,\r\n      payload: res.data\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: PROFILE_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status }\r\n    });\r\n  }\r\n};\r\n\r\n// Get github repos\r\nexport const getGithubRepos = username => async dispatch => {\r\n  try {\r\n    const res = await axios.get(`/api/profile/github/${username}`);\r\n\r\n    dispatch({\r\n      type: GET_REPOS,\r\n      payload: res.data\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: PROFILE_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status }\r\n    });\r\n  }\r\n};\r\n\r\n// Create or update a profile\r\nexport const createProfile = (\r\n  formData,\r\n  history,\r\n  edit = false\r\n) => async dispatch => {\r\n  try {\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      }\r\n    };\r\n\r\n    const res = await axios.post('/api/profile', formData, config);\r\n    dispatch({\r\n      type: GET_PROFILE,\r\n      payload: res.data\r\n    });\r\n\r\n    dispatch(setAlert(edit ? 'Profile Updated' : 'Profile Created', 'success'));\r\n\r\n    if (!edit) {\r\n      history.push('/dashboard');\r\n    }\r\n  } catch (err) {\r\n    const errors = err.response.data.errors;\r\n\r\n    if (errors) {\r\n      errors.forEach(error => dispatch(setAlert(error.msg, 'danger')));\r\n    }\r\n    dispatch({\r\n      type: PROFILE_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status }\r\n    });\r\n  }\r\n};\r\n\r\n// Add Experience\r\nexport const addExperience = (formData, history) => async dispatch => {\r\n  try {\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      }\r\n    };\r\n\r\n    const res = await axios.put('/api/profile/experience', formData, config);\r\n    dispatch({\r\n      type: UPDATE_PROFILE,\r\n      payload: res.data\r\n    });\r\n\r\n    dispatch(setAlert('Experience Added', 'success'));\r\n\r\n    history.push('/dashboard');\r\n  } catch (err) {\r\n    const errors = err.response.data.errors;\r\n\r\n    if (errors) {\r\n      errors.forEach(error => dispatch(setAlert(error.msg, 'danger')));\r\n    }\r\n    dispatch({\r\n      type: PROFILE_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status }\r\n    });\r\n  }\r\n};\r\n\r\n// Add Education\r\nexport const addEducation = (formData, history) => async dispatch => {\r\n  try {\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      }\r\n    };\r\n\r\n    const res = await axios.put('/api/profile/education', formData, config);\r\n    dispatch({\r\n      type: UPDATE_PROFILE,\r\n      payload: res.data\r\n    });\r\n\r\n    dispatch(setAlert('Education Added', 'success'));\r\n\r\n    history.push('/dashboard');\r\n  } catch (err) {\r\n    const errors = err.response.data.errors;\r\n\r\n    if (errors) {\r\n      errors.forEach(error => dispatch(setAlert(error.msg, 'danger')));\r\n    }\r\n    dispatch({\r\n      type: PROFILE_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status }\r\n    });\r\n  }\r\n};\r\n\r\n// Delete Experience\r\nexport const deleteExperience = id => async dispatch => {\r\n  try {\r\n    const res = await axios.delete(`/api/profile/experience/${id}`);\r\n    dispatch({\r\n      type: UPDATE_PROFILE,\r\n      payload: res.data\r\n    });\r\n\r\n    dispatch(setAlert('Experience removed', 'success'));\r\n  } catch (err) {\r\n    dispatch({\r\n      type: PROFILE_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status }\r\n    });\r\n  }\r\n};\r\n\r\n// Delete Education\r\nexport const deleteEducation = id => async dispatch => {\r\n  try {\r\n    const res = await axios.delete(`/api/profile/education/${id}`);\r\n    dispatch({\r\n      type: UPDATE_PROFILE,\r\n      payload: res.data\r\n    });\r\n\r\n    dispatch(setAlert('Education removed', 'success'));\r\n  } catch (err) {\r\n    dispatch({\r\n      type: PROFILE_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status }\r\n    });\r\n  }\r\n};\r\n\r\n// Delete Account & profile\r\nexport const deleteAccount = () => async dispatch => {\r\n  if (window.confirm('Are you sure ? thsi cannot be undone.')) {\r\n    try {\r\n      await axios.delete(`/api/profile`);\r\n      dispatch({\r\n        type: CLEAR_PROFILE\r\n      });\r\n      dispatch({\r\n        type: ACCOUNT_DELETED\r\n      });\r\n\r\n      dispatch(setAlert('Your account has been permanently deleted'));\r\n    } catch (err) {\r\n      dispatch({\r\n        type: PROFILE_ERROR,\r\n        payload: { msg: err.response.statusText, status: err.response.status }\r\n      });\r\n    }\r\n  }\r\n};\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst DashboardActions = props => {\r\n  return (\r\n    <div className='dash-buttons'>\r\n      <Link to='/edit-profile' className='btn btn-light'>\r\n        <i className='fas fa-user-circle text-primary' /> Edit Profile\r\n      </Link>\r\n      <Link to='/add-experience' className='btn btn-light'>\r\n        <i className='fab fa-black-tie text-primary' /> Add Experience\r\n      </Link>\r\n      <Link to='/add-education' className='btn btn-light'>\r\n        <i className='fas fa-graduation-cap text-primary' /> Add Education\r\n      </Link>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DashboardActions;\r\n","// racfp\r\nimport React, { Fragment } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Moment from 'react-moment';\r\nimport { connect } from 'react-redux';\r\nimport { deleteExperience } from '../../actions/profile';\r\n\r\nconst Experience = ({ experience, deleteExperience }) => {\r\n  const experiences = experience.map(exp => (\r\n    <tr key={exp._id}>\r\n      <td>{exp.company}</td>\r\n      <td className='hide-sm'>{exp.title}</td>\r\n\r\n      <td>\r\n        <Moment format='YYYY/MM/DD'>{exp.from}</Moment> -{' '}\r\n        {exp.to === null ? (\r\n          ' Now '\r\n        ) : (\r\n          <Moment format='YYYY/MM/DD'>{exp.to}</Moment>\r\n        )}\r\n      </td>\r\n      <td>\r\n        <button\r\n          onClick={() => deleteExperience(exp._id)}\r\n          className='btn btn-danger'\r\n        >\r\n          Delete\r\n        </button>\r\n      </td>\r\n    </tr>\r\n  ));\r\n\r\n  return (\r\n    <Fragment>\r\n      <h2 className='my-2'>Experience credentials</h2>\r\n      <table className='table'>\r\n        <thead>\r\n          <tr>\r\n            <th>Company</th>\r\n            <th className='hide-s'>Title</th>\r\n            <th className='hide-s'>Years</th>\r\n            <th />\r\n          </tr>\r\n        </thead>\r\n        <tbody>{experiences}</tbody>\r\n      </table>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nExperience.propTypes = {\r\n  // ptar\r\n  experience: PropTypes.array.isRequired,\r\n  deleteExperience: PropTypes.func.isRequired\r\n};\r\n\r\nexport default connect(\r\n  null,\r\n  { deleteExperience }\r\n)(Experience);\r\n","// racfp\r\nimport React, { Fragment } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Moment from 'react-moment';\r\nimport { connect } from 'react-redux';\r\nimport { deleteEducation } from '../../actions/profile';\r\n\r\nconst Education = ({ education, deleteEducation }) => {\r\n  const educations = education.map(edu => (\r\n    <tr key={edu._id}>\r\n      <td>{edu.school}</td>\r\n      <td className='hide-sm'>{edu.degreee}</td>\r\n\r\n      <td>\r\n        <Moment format='YYYY/MM/DD'>{edu.from}</Moment> -{' '}\r\n        {edu.to === null ? (\r\n          ' Now '\r\n        ) : (\r\n          <Moment format='YYYY/MM/DD'>{edu.to}</Moment>\r\n        )}\r\n      </td>\r\n      <td>\r\n        <button\r\n          onClick={() => deleteEducation(edu._id)}\r\n          className='btn btn-danger'\r\n        >\r\n          Delete\r\n        </button>\r\n      </td>\r\n    </tr>\r\n  ));\r\n\r\n  return (\r\n    <Fragment>\r\n      <h2 className='my-2'>Education credentials</h2>\r\n      <table className='table'>\r\n        <thead>\r\n          <tr>\r\n            <th>School</th>\r\n            <th className='hide-s'>Degree</th>\r\n            <th className='hide-s'>Years</th>\r\n            <th />\r\n          </tr>\r\n        </thead>\r\n        <tbody>{educations}</tbody>\r\n      </table>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nEducation.propTypes = {\r\n  // ptar\r\n  education: PropTypes.array.isRequired,\r\n  deleteEducation: PropTypes.func.isRequired\r\n};\r\n\r\nexport default connect(\r\n  null,\r\n  { deleteEducation }\r\n)(Education);\r\n","import React, { Fragment } from 'react';\r\nimport spinner from './spinner.gif';\r\n\r\nexport default () => (\r\n  <Fragment>\r\n    <img\r\n      src={spinner}\r\n      style={{ width: '200px', margin: 'auto', display: 'block' }}\r\n      alt='Spinner'\r\n    />\r\n  </Fragment>\r\n);\r\n","import React, { Fragment, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport { getCurrentProfile, deleteAccount } from '../../actions/profile';\r\nimport DashboardActions from './DashboardActions';\r\nimport Experience from './Experience';\r\nimport Education from './Education';\r\nimport Spinner from '../layout/Spinner';\r\n\r\nconst Dashboard = ({\r\n  getCurrentProfile,\r\n  deleteAccount,\r\n  auth: { user },\r\n  profile: { profile, loading }\r\n}) => {\r\n  useEffect(() => {\r\n    getCurrentProfile();\r\n  }, [getCurrentProfile]);\r\n\r\n  return loading && profile === null ? (\r\n    <Spinner />\r\n  ) : (\r\n    <Fragment>\r\n      <h1 className='large text-primary'>Dashboard</h1>\r\n      <p className='lead'>\r\n        <i className='fas fa-user' />\r\n        Welcome {user && user.name}\r\n      </p>\r\n      {profile !== null ? (\r\n        <Fragment>\r\n          <DashboardActions />\r\n          <Experience experience={profile.experience} />\r\n          <Education education={profile.education} />\r\n\r\n          <div className='my-'>\r\n            <button className='btn btn-danger' onClick={() => deleteAccount()}>\r\n              <i className='fas fa-user-minus' /> Delete my account\r\n            </button>\r\n          </div>\r\n        </Fragment>\r\n      ) : (\r\n        <Fragment>\r\n          <p>You have not yet setup a profile, please add some info</p>\r\n          <Link to='/create-profile' className='btn btn-primary my-1'>\r\n            Create profile\r\n          </Link>\r\n        </Fragment>\r\n      )}\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nDashboard.propTypes = {\r\n  // ptfr\r\n  getCurrentProfile: PropTypes.func.isRequired,\r\n  // ptor\r\n  auth: PropTypes.object.isRequired,\r\n  // ptor\r\n  profile: PropTypes.object.isRequired,\r\n  deleteAccount: PropTypes.func.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  auth: state.auth,\r\n  profile: state.profile\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { getCurrentProfile, deleteAccount }\r\n)(Dashboard);\r\n","import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\n\r\nconst PrivateRoute = ({\r\n  component: Component,\r\n  auth: { isAuthenticated, loading },\r\n  ...rest\r\n}) => (\r\n  <Route\r\n    {...rest}\r\n    render={props =>\r\n      !isAuthenticated && !loading ? (\r\n        <Redirect to='/login' />\r\n      ) : (\r\n        <Component {...props} />\r\n      )\r\n    }\r\n  />\r\n);\r\n\r\nPrivateRoute.propTypes = {\r\n  /// ptbr\r\n  auth: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  auth: state.auth\r\n});\r\n\r\nexport default connect(mapStateToProps)(PrivateRoute);\r\n","import React, { Fragment, useState, useEffect } from 'react';\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { createProfile, getCurrentProfile } from '../../actions/profile';\r\n\r\nconst EditProfile = ({\r\n  profile: { profile, loading },\r\n  createProfile,\r\n  getCurrentProfile,\r\n  history\r\n}) => {\r\n  const [formData, setFormData] = useState({\r\n    company: '',\r\n    website: '',\r\n    location: '',\r\n    status: '',\r\n    skills: '',\r\n    githubusername: '',\r\n    bio: '',\r\n    twitter: '',\r\n    facebook: '',\r\n    linkedin: '',\r\n    youtube: '',\r\n    instagram: ''\r\n  });\r\n\r\n  const [displaySocialInputs, toggleSocialInputs] = useState(false);\r\n\r\n  useEffect(() => {\r\n    getCurrentProfile();\r\n\r\n    setFormData({\r\n      company: loading || !profile.company ? '' : profile.company,\r\n      website: loading || !profile.website ? '' : profile.website,\r\n      location: loading || !profile.location ? '' : profile.location,\r\n      status: loading || !profile.status ? '' : profile.status,\r\n      skills: loading || !profile.skills ? '' : profile.skills.join(','),\r\n      githubusername:\r\n        loading || !profile.githubusername ? '' : profile.githubusername,\r\n      bio: loading || !profile.bio ? '' : profile.bio,\r\n      twitter: loading || !profile.social ? '' : profile.social.twitter,\r\n      facebook: loading || !profile.social ? '' : profile.social.facebook,\r\n      linkedin: loading || !profile.social ? '' : profile.social.linkedin,\r\n      youtube: loading || !profile.social ? '' : profile.social.youtube,\r\n      instagram: loading || !profile.social ? '' : profile.social.instagram\r\n    });\r\n  }, [loading, getCurrentProfile]); // when 'loading', run useEffect\r\n\r\n  const {\r\n    company,\r\n    website,\r\n    location,\r\n    status,\r\n    skills,\r\n    githubusername,\r\n    bio,\r\n    twitter,\r\n    facebook,\r\n    linkedin,\r\n    youtube,\r\n    instagram\r\n  } = formData;\r\n\r\n  const onChange = e =>\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n\r\n  const onSubmit = e => {\r\n    e.preventDefault();\r\n    // console.log(formData);\r\n    createProfile(formData, history, true);\r\n  };\r\n  return (\r\n    <Fragment>\r\n      <h1 className='large text-primary'>Create Your Profile</h1>\r\n      <p className='lead'>\r\n        <i className='fas fa-user' /> Let's get some information to make your\r\n        profile stand out\r\n      </p>\r\n      <small>* = required field</small>\r\n      <form className='form' onSubmit={e => onSubmit(e)}>\r\n        <div className='form-group'>\r\n          <select name='status' value={status} onChange={e => onChange(e)}>\r\n            <option value='0'>* Select Professional Status</option>\r\n            <option value='Developer'>Developer</option>\r\n            <option value='Junior Developer'>Junior Developer</option>\r\n            <option value='Senior Developer'>Senior Developer</option>\r\n            <option value='Manager'>Manager</option>\r\n            <option value='Student or Learning'>Student or Learning</option>\r\n            <option value='Instructor'>Instructor or Teacher</option>\r\n            <option value='Intern'>Intern</option>\r\n            <option value='Other'>Other</option>\r\n          </select>\r\n          <small className='form-text'>\r\n            Give us an idea of where you are at in your career\r\n          </small>\r\n        </div>\r\n        <div className='form-group'>\r\n          <input\r\n            type='text'\r\n            placeholder='Company'\r\n            name='company'\r\n            value={company}\r\n            onChange={e => onChange(e)}\r\n          />\r\n          <small className='form-text'>\r\n            Could be your own company or one you work for\r\n          </small>\r\n        </div>\r\n        <div className='form-group'>\r\n          <input\r\n            type='text'\r\n            placeholder='Website'\r\n            name='website'\r\n            value={website}\r\n            onChange={e => onChange(e)}\r\n          />\r\n          <small className='form-text'>\r\n            Could be your own or a company website\r\n          </small>\r\n        </div>\r\n        <div className='form-group'>\r\n          <input\r\n            type='text'\r\n            placeholder='Location'\r\n            name='location'\r\n            value={location}\r\n            onChange={e => onChange(e)}\r\n          />\r\n          <small className='form-text'>\r\n            City & state suggested (eg. Boston, MA)\r\n          </small>\r\n        </div>\r\n        <div className='form-group'>\r\n          <input\r\n            type='text'\r\n            placeholder='* Skills'\r\n            name='skills'\r\n            value={skills}\r\n            onChange={e => onChange(e)}\r\n          />\r\n          <small className='form-text'>\r\n            Please use comma separated values (eg. HTML,CSS,JavaScript,PHP)\r\n          </small>\r\n        </div>\r\n        <div className='form-group'>\r\n          <input\r\n            type='text'\r\n            placeholder='Github Username'\r\n            name='githubusername'\r\n            value={githubusername}\r\n            onChange={e => onChange(e)}\r\n          />\r\n          <small className='form-text'>\r\n            If you want your latest repos and a Github link, include your\r\n            username\r\n          </small>\r\n        </div>\r\n        <div className='form-group'>\r\n          <textarea\r\n            placeholder='A short bio of yourself'\r\n            name='bio'\r\n            value={bio}\r\n            onChange={e => onChange(e)}\r\n          />\r\n          <small className='form-text'>Tell us a little about yourself</small>\r\n        </div>\r\n\r\n        <div className='my-2'>\r\n          <button\r\n            type='button'\r\n            className='btn btn-light'\r\n            onClick={() => toggleSocialInputs(!displaySocialInputs)}\r\n          >\r\n            Add Social Network Links\r\n          </button>\r\n          <span>Optional</span>\r\n        </div>\r\n\r\n        {displaySocialInputs && (\r\n          <Fragment>\r\n            <div className='form-group social-input'>\r\n              <i className='fab fa-twitter fa-2x' />\r\n              <input\r\n                type='text'\r\n                placeholder='Twitter URL'\r\n                name='twitter'\r\n                value={twitter}\r\n                onChange={e => onChange(e)}\r\n              />\r\n            </div>\r\n\r\n            <div className='form-group social-input'>\r\n              <i className='fab fa-facebook fa-2x' />\r\n              <input\r\n                type='text'\r\n                placeholder='Facebook URL'\r\n                name='facebook'\r\n                value={facebook}\r\n                onChange={e => onChange(e)}\r\n              />\r\n            </div>\r\n\r\n            <div className='form-group social-input'>\r\n              <i className='fab fa-youtube fa-2x' />\r\n              <input\r\n                type='text'\r\n                placeholder='YouTube URL'\r\n                name='youtube'\r\n                value={youtube}\r\n                onChange={e => onChange(e)}\r\n              />\r\n            </div>\r\n\r\n            <div className='form-group social-input'>\r\n              <i className='fab fa-linkedin fa-2x' />\r\n              <input\r\n                type='text'\r\n                placeholder='Linkedin URL'\r\n                name='linkedin'\r\n                value={linkedin}\r\n                onChange={e => onChange(e)}\r\n              />\r\n            </div>\r\n\r\n            <div className='form-group social-input'>\r\n              <i className='fab fa-instagram fa-2x' />\r\n              <input\r\n                type='text'\r\n                placeholder='Instagram URL'\r\n                name='instagram'\r\n                value={instagram}\r\n                onChange={e => onChange(e)}\r\n              />\r\n            </div>\r\n          </Fragment>\r\n        )}\r\n\r\n        <input type='submit' className='btn btn-primary my-1' />\r\n        <Link className='btn btn-light my-1' to='/dashboard'>\r\n          Go Back\r\n        </Link>\r\n      </form>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nEditProfile.propTypes = {\r\n  // prfr\r\n  createProfile: PropTypes.func.isRequired,\r\n  getCurrentProfile: PropTypes.func.isRequired,\r\n  profile: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  profile: state.profile\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { createProfile, getCurrentProfile }\r\n)(withRouter(EditProfile));\r\n","import React, { Fragment, useState } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { addExperience } from '../../actions/profile';\r\n\r\nconst AddExperience = ({ addExperience, history }) => {\r\n  const [formData, setFormData] = useState({\r\n    company: '',\r\n    title: '',\r\n    location: '',\r\n    from: '',\r\n    to: '',\r\n    current: false,\r\n    description: ''\r\n  });\r\n\r\n  const [toDateDisabled, toggleDisabled] = useState(false);\r\n\r\n  const { company, title, location, from, to, current, description } = formData;\r\n\r\n  const onChange = e =>\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n\r\n  return (\r\n    <Fragment>\r\n      <h1 className='large text-primary'>Add An Experience</h1>\r\n      <p className='lead'>\r\n        <i className='fas fa-code-branch' /> Add any developer/programming\r\n        positions that you have had in the past\r\n      </p>\r\n      <small>* = required field</small>\r\n      <form\r\n        className='form'\r\n        onSubmit={e => {\r\n          e.preventDefault();\r\n          addExperience(formData, history);\r\n        }}\r\n      >\r\n        <div className='form-group'>\r\n          <input\r\n            type='text'\r\n            placeholder='* Job Title'\r\n            name='title'\r\n            value={title}\r\n            onChange={e => onChange(e)}\r\n            required\r\n          />\r\n        </div>\r\n        <div className='form-group'>\r\n          <input\r\n            type='text'\r\n            placeholder='* Company'\r\n            name='company'\r\n            value={company}\r\n            onChange={e => onChange(e)}\r\n            required\r\n          />\r\n        </div>\r\n        <div className='form-group'>\r\n          <input\r\n            type='text'\r\n            placeholder='Location'\r\n            name='location'\r\n            value={location}\r\n            onChange={e => onChange(e)}\r\n          />\r\n        </div>\r\n        <div className='form-group'>\r\n          <h4>From Date</h4>\r\n          <input\r\n            type='date'\r\n            name='from'\r\n            value={from}\r\n            onChange={e => onChange(e)}\r\n          />\r\n        </div>\r\n        <div className='form-group'>\r\n          <p>\r\n            <input\r\n              type='checkbox'\r\n              name='current'\r\n              checked={current}\r\n              value={current}\r\n              onChange={e => {\r\n                setFormData({ ...formData, current: !current });\r\n                toggleDisabled(!toDateDisabled);\r\n              }}\r\n            />{' '}\r\n            Current Job\r\n          </p>\r\n        </div>\r\n        <div className='form-group'>\r\n          <h4>To Date</h4>\r\n          <input\r\n            type='date'\r\n            name='to'\r\n            value={to}\r\n            onChange={e => onChange(e)}\r\n            disabled={toDateDisabled ? 'disabled' : ''}\r\n          />\r\n        </div>\r\n        <div className='form-group'>\r\n          <textarea\r\n            name='description'\r\n            cols='30'\r\n            rows='5'\r\n            placeholder='Job Description'\r\n            value={description}\r\n            onChange={e => onChange(e)}\r\n          />\r\n        </div>\r\n        <input type='submit' className='btn btn-primary my-1' />\r\n        <a className='btn btn-light my-1' href='dashboard.html'>\r\n          Go Back\r\n        </a>\r\n      </form>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nAddExperience.propTypes = {\r\n  // ptfr\r\n  addExperience: PropTypes.func.isRequired\r\n};\r\n\r\nexport default connect(\r\n  null,\r\n  { addExperience }\r\n)(withRouter(AddExperience));\r\n","// racfp\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst ProfileTop = ({\r\n  profile: {\r\n    status,\r\n    company,\r\n    location,\r\n    website,\r\n    social,\r\n    user: { name, avatar }\r\n  }\r\n}) => {\r\n  return (\r\n    <div className='profile-top bg-primary p-2'>\r\n      <img className='round-img my-1' src={avatar} alt='' />\r\n      <h1 className='large'>{name}</h1>\r\n      <p className='lead'>\r\n        {status} {company && <span> at {company} </span>}\r\n      </p>\r\n      <p>{location && <span>{location}</span>}</p>\r\n      <div className='icons my-1'>\r\n        {website && (\r\n          <a href={website} target='_blank' rel='noopener noreferrer'>\r\n            <i className='fas fa-globe fa-2x' />\r\n          </a>\r\n        )}\r\n\r\n        {social && social.twitter && (\r\n          <a href={social.twitter} target='_blank' rel='noopener noreferrer'>\r\n            <i className='fab fa-twitter fa-2x' />\r\n          </a>\r\n        )}\r\n        {social && social.facebook && (\r\n          <a href={social.facebook} target='_blank' rel='noopener noreferrer'>\r\n            <i className='fab fa-facebook fa-2x' />\r\n          </a>\r\n        )}\r\n        {social && social.linkedin && (\r\n          <a href={social.linkedin} target='_blank' rel='noopener noreferrer'>\r\n            <i className='fab fa-linkedin fa-2x' />\r\n          </a>\r\n        )}\r\n        {social && social.youtube && (\r\n          <a href={social.youtube} target='_blank' rel='noopener noreferrer'>\r\n            <i className='fab fa-youtube fa-2x' />\r\n          </a>\r\n        )}\r\n        {social && social.instagram && (\r\n          <a href={social.instagram} target='_blank' rel='noopener noreferrer'>\r\n            <i className='fab fa-instagram fa-2x' />\r\n          </a>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nProfileTop.propTypes = {\r\n  profile: PropTypes.object.isRequired\r\n};\r\n\r\nexport default ProfileTop;\r\n","// racfp\r\nimport React, { Fragment } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst ProfileAbout = ({\r\n  profile: {\r\n    bio,\r\n    skills,\r\n    user: { name }\r\n  }\r\n}) => {\r\n  return (\r\n    <div className='profile-about bg-light p-2'>\r\n      {bio && (\r\n        <Fragment>\r\n          <h2 className='text-primary'>{name.trim().split(' ')[0]}s Bio</h2>\r\n          <p>{bio}</p>\r\n          <div className='line' />\r\n        </Fragment>\r\n      )}\r\n\r\n      <h2 className='text-primary'>Skill Set</h2>\r\n      <div className='skills'>\r\n        {skills.map((skill, index) => (\r\n          <div key={index} className='p-1'>\r\n            <i className='fas fa-check' /> {skill}\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nProfileAbout.propTypes = {\r\n  profile: PropTypes.object.isRequired\r\n};\r\n\r\nexport default ProfileAbout;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Moment from 'react-moment';\r\n\r\nconst ProfileExperience = ({\r\n  experience: { company, title, location, current, to, from, description }\r\n}) => {\r\n  return (\r\n    <div>\r\n      <h3 className='text-dark'>{company}</h3>\r\n      <p>\r\n        <Moment format='YYYY//MM/DD'>{from}</Moment> -{' '}\r\n        {!to ? ' Now' : <Moment format='YYYY/MM/DD'>{to}</Moment>}\r\n      </p>\r\n      <p>\r\n        <strong>Position: </strong> {title}\r\n      </p>\r\n      <p>\r\n        <strong>Description</strong> {description}\r\n      </p>\r\n    </div>\r\n  );\r\n};\r\n\r\nProfileExperience.propTypes = {\r\n  experience: PropTypes.object.isRequired\r\n};\r\n\r\nexport default ProfileExperience;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Moment from 'react-moment';\r\n\r\nconst ProfileEducation = ({\r\n  education: { school, degree, fieldofstudy, current, to, from, description }\r\n}) => {\r\n  return (\r\n    <div>\r\n      <h3 className='text-dark'>{school}</h3>\r\n      <p>\r\n        <Moment format='YYYY//MM/DD'>{from}</Moment> -{' '}\r\n        {!to ? ' Now' : <Moment format='YYYY/MM/DD'>{to}</Moment>}\r\n      </p>\r\n      <p>\r\n        <strong>Degree: </strong> {degree}\r\n      </p>\r\n      <p>\r\n        <strong>Fields of Study: </strong> {fieldofstudy}\r\n      </p>\r\n      <p>\r\n        <strong>Description</strong> {description}\r\n      </p>\r\n    </div>\r\n  );\r\n};\r\n\r\nProfileEducation.propTypes = {\r\n  education: PropTypes.object.isRequired\r\n};\r\n\r\nexport default ProfileEducation;\r\n","import React, { useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { getGithubRepos } from '../../actions/profile';\r\nimport Spinner from '../layout/Spinner';\r\n\r\nconst ProfileGithub = ({ username, getGithubRepos, repos }) => {\r\n  useEffect(() => {\r\n    getGithubRepos(username);\r\n  }, [getGithubRepos]);\r\n  return (\r\n    <div className='profile-github'>\r\n      <h2 className='text-primary my-1'>Github Repos</h2>\r\n      {repos === null ? (\r\n        <Spinner />\r\n      ) : (\r\n        repos.map(repo => (\r\n          <div key={repo.id} className='repo bg-white p-1 my-1'>\r\n            <div>\r\n              <h4>\r\n                <a\r\n                  href={repo.html_url}\r\n                  target='_blank'\r\n                  rel='noopener noreferrer'\r\n                >\r\n                  {repo.name}\r\n                </a>\r\n              </h4>\r\n              <p>{repo.description}</p>\r\n            </div>\r\n            <div>\r\n              <ul>\r\n                <li className='badge badge-primary'>\r\n                  Stars: {repo.stargazers_count}\r\n                </li>\r\n                <li className='badge badge-dark'>\r\n                  Watchers: {repo.watchers_count}\r\n                </li>\r\n                <li className='badge badge-light'>Forks: {repo.forks_count}</li>\r\n              </ul>\r\n            </div>\r\n          </div>\r\n        ))\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nProfileGithub.propTypes = {\r\n  getGithubRepos: PropTypes.func.isRequired,\r\n  repos: PropTypes.array.isRequired,\r\n  username: PropTypes.string.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  repos: state.profile.repos\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { getGithubRepos }\r\n)(ProfileGithub);\r\n","// racfp\r\nimport React, { Fragment, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport Spinner from '../layout/Spinner';\r\nimport { getProfileById } from '../../actions/profile';\r\nimport ProfileTop from './ProfileTop';\r\nimport ProfileAbout from './ProfileAbout';\r\nimport ProfileExperience from './ProfileExperience';\r\nimport ProfileEducation from './ProfileEducation';\r\nimport ProfileGithub from './ProfileGithub';\r\n\r\nconst Profile = ({\r\n  getProfileById,\r\n  profile: { profile, loading },\r\n  auth,\r\n  match\r\n}) => {\r\n  useEffect(() => {\r\n    getProfileById(match.params.id);\r\n  }, [getProfileById, match.params.id]);\r\n\r\n  return (\r\n    <Fragment>\r\n      {profile === null || loading ? (\r\n        <Spinner />\r\n      ) : (\r\n        <Fragment>\r\n          <Link to='/profiles' className='btn btn-light'>\r\n            Back to profiles\r\n          </Link>\r\n          {auth.isAuthenticated &&\r\n            auth.loading === false &&\r\n            auth.user._id === profile.user._id && (\r\n              <Link to='/edit-profile' className='btn btn-dark'>\r\n                Edit profile\r\n              </Link>\r\n            )}\r\n          <div className='profile-grid my-1'>\r\n            <ProfileTop profile={profile} />\r\n            <ProfileAbout profile={profile} />\r\n            <div className='profile-exp bg-white p-2'>\r\n              <h2 className='text-primary'>Experience</h2>\r\n              {profile.experience.length > 0 ? (\r\n                <Fragment>\r\n                  {profile.experience.map(experience => (\r\n                    <ProfileExperience\r\n                      key={experience._id}\r\n                      experience={experience}\r\n                    />\r\n                  ))}\r\n                </Fragment>\r\n              ) : (\r\n                <h4>No experience credentials</h4>\r\n              )}\r\n            </div>\r\n            <div className='profile-edu bg-white p-2'>\r\n              <h2 className='text-primary'>Education</h2>\r\n              {profile.education.length > 0 ? (\r\n                <Fragment>\r\n                  {profile.education.map(education => (\r\n                    <ProfileEducation\r\n                      key={education._id}\r\n                      education={education}\r\n                    />\r\n                  ))}\r\n                </Fragment>\r\n              ) : (\r\n                <h4>No education credentials</h4>\r\n              )}\r\n            </div>\r\n            {profile.githubusername && (\r\n              <ProfileGithub username={profile.githubusername} />\r\n            )}\r\n          </div>\r\n        </Fragment>\r\n      )}\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nProfile.propTypes = {\r\n  getProfileById: PropTypes.func.isRequired,\r\n  profile: PropTypes.object.isRequired,\r\n  auth: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  profile: state.profile,\r\n  auth: state.auth\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { getProfileById }\r\n)(Profile);\r\n","import React, { Fragment, useState } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { addEducation } from '../../actions/profile';\r\n\r\nconst AddEducation = ({ addEducation, history }) => {\r\n  const [formData, setFormData] = useState({\r\n    school: '',\r\n    degree: '',\r\n    fieldofstudy: '',\r\n    from: '',\r\n    to: '',\r\n    current: false,\r\n    description: ''\r\n  });\r\n\r\n  const [toDateDisabled, toggleDisabled] = useState(false);\r\n\r\n  const {\r\n    school,\r\n    degree,\r\n    fieldofstudy,\r\n    from,\r\n    to,\r\n    current,\r\n    description\r\n  } = formData;\r\n\r\n  const onChange = e =>\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n\r\n  return (\r\n    <Fragment>\r\n      <h1 className='large text-primary'>Add your Education</h1>\r\n      <p className='lead'>\r\n        <i className='fas fa-code-branch' /> Add any school or bootcamp that you\r\n        attended\r\n      </p>\r\n      <small>* = required field</small>\r\n      <form\r\n        className='form'\r\n        onSubmit={e => {\r\n          e.preventDefault();\r\n          addEducation(formData, history);\r\n        }}\r\n      >\r\n        <div className='form-group'>\r\n          <input\r\n            type='text'\r\n            placeholder='* School/Bootcamp'\r\n            name='school'\r\n            value={school}\r\n            onChange={e => onChange(e)}\r\n            required\r\n          />\r\n        </div>\r\n        <div className='form-group'>\r\n          <input\r\n            type='text'\r\n            placeholder='* Degree/Certificate'\r\n            name='degree'\r\n            value={degree}\r\n            onChange={e => onChange(e)}\r\n            required\r\n          />\r\n        </div>\r\n        <div className='form-group'>\r\n          <input\r\n            type='text'\r\n            placeholder='Field of Study'\r\n            name='fieldofstudy'\r\n            value={fieldofstudy}\r\n            onChange={e => onChange(e)}\r\n          />\r\n        </div>\r\n        <div className='form-group'>\r\n          <h4>From Date</h4>\r\n          <input\r\n            type='date'\r\n            name='from'\r\n            value={from}\r\n            onChange={e => onChange(e)}\r\n          />\r\n        </div>\r\n        <div className='form-group'>\r\n          <p>\r\n            <input\r\n              type='checkbox'\r\n              name='current'\r\n              checked={current}\r\n              value={current}\r\n              onChange={e => {\r\n                setFormData({ ...formData, current: !current });\r\n                toggleDisabled(!toDateDisabled);\r\n              }}\r\n            />{' '}\r\n            Current Education\r\n          </p>\r\n        </div>\r\n        <div className='form-group'>\r\n          <h4>To Date</h4>\r\n          <input\r\n            type='date'\r\n            name='to'\r\n            value={to}\r\n            onChange={e => onChange(e)}\r\n            disabled={toDateDisabled ? 'disabled' : ''}\r\n          />\r\n        </div>\r\n        <div className='form-group'>\r\n          <textarea\r\n            name='description'\r\n            cols='30'\r\n            rows='5'\r\n            placeholder='Program Description'\r\n            value={description}\r\n            onChange={e => onChange(e)}\r\n          />\r\n        </div>\r\n        <input type='submit' className='btn btn-primary my-1' />\r\n        <a className='btn btn-light my-1' href='dashboard.html'>\r\n          Go Back\r\n        </a>\r\n      </form>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nAddEducation.propTypes = {\r\n  // ptfr\r\n  addEducation: PropTypes.func.isRequired\r\n};\r\n\r\nexport default connect(\r\n  null,\r\n  { addEducation }\r\n)(withRouter(AddEducation));\r\n","import React, { Fragment, useState } from 'react';\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { createProfile } from '../../actions/profile';\r\n\r\nconst CreateProfile = ({ createProfile, history }) => {\r\n  const [formData, setFormData] = useState({\r\n    company: '',\r\n    website: '',\r\n    location: '',\r\n    status: '',\r\n    skills: '',\r\n    githubusername: '',\r\n    bio: '',\r\n    twitter: '',\r\n    facebook: '',\r\n    linkedin: '',\r\n    youtube: '',\r\n    instagram: ''\r\n  });\r\n\r\n  const [displaySocialInputs, toggleSocialInputs] = useState(false);\r\n\r\n  const {\r\n    company,\r\n    website,\r\n    location,\r\n    status,\r\n    skills,\r\n    githubusername,\r\n    bio,\r\n    twitter,\r\n    facebook,\r\n    linkedin,\r\n    youtube,\r\n    instagram\r\n  } = formData;\r\n\r\n  const onChange = e =>\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n\r\n  const onSubmit = e => {\r\n    e.preventDefault();\r\n    // console.log(formData);\r\n    createProfile(formData, history);\r\n  };\r\n  return (\r\n    <Fragment>\r\n      <h1 className='large text-primary'>Create Your Profile</h1>\r\n      <p className='lead'>\r\n        <i className='fas fa-user' /> Let's get some information to make your\r\n        profile stand out\r\n      </p>\r\n      <small>* = required field</small>\r\n      <form className='form' onSubmit={e => onSubmit(e)}>\r\n        <div className='form-group'>\r\n          <select name='status' value={status} onChange={e => onChange(e)}>\r\n            <option value='0'>* Select Professional Status</option>\r\n            <option value='Developer'>Developer</option>\r\n            <option value='Junior Developer'>Junior Developer</option>\r\n            <option value='Senior Developer'>Senior Developer</option>\r\n            <option value='Manager'>Manager</option>\r\n            <option value='Student or Learning'>Student or Learning</option>\r\n            <option value='Instructor'>Instructor or Teacher</option>\r\n            <option value='Intern'>Intern</option>\r\n            <option value='Other'>Other</option>\r\n          </select>\r\n          <small className='form-text'>\r\n            Give us an idea of where you are at in your career\r\n          </small>\r\n        </div>\r\n        <div className='form-group'>\r\n          <input\r\n            type='text'\r\n            placeholder='Company'\r\n            name='company'\r\n            value={company}\r\n            onChange={e => onChange(e)}\r\n          />\r\n          <small className='form-text'>\r\n            Could be your own company or one you work for\r\n          </small>\r\n        </div>\r\n        <div className='form-group'>\r\n          <input\r\n            type='text'\r\n            placeholder='Website'\r\n            name='website'\r\n            value={website}\r\n            onChange={e => onChange(e)}\r\n          />\r\n          <small className='form-text'>\r\n            Could be your own or a company website\r\n          </small>\r\n        </div>\r\n        <div className='form-group'>\r\n          <input\r\n            type='text'\r\n            placeholder='Location'\r\n            name='location'\r\n            value={location}\r\n            onChange={e => onChange(e)}\r\n          />\r\n          <small className='form-text'>\r\n            City & state suggested (eg. Boston, MA)\r\n          </small>\r\n        </div>\r\n        <div className='form-group'>\r\n          <input\r\n            type='text'\r\n            placeholder='* Skills'\r\n            name='skills'\r\n            value={skills}\r\n            onChange={e => onChange(e)}\r\n          />\r\n          <small className='form-text'>\r\n            Please use comma separated values (eg. HTML,CSS,JavaScript,PHP)\r\n          </small>\r\n        </div>\r\n        <div className='form-group'>\r\n          <input\r\n            type='text'\r\n            placeholder='Github Username'\r\n            name='githubusername'\r\n            value={githubusername}\r\n            onChange={e => onChange(e)}\r\n          />\r\n          <small className='form-text'>\r\n            If you want your latest repos and a Github link, include your\r\n            username\r\n          </small>\r\n        </div>\r\n        <div className='form-group'>\r\n          <textarea\r\n            placeholder='A short bio of yourself'\r\n            name='bio'\r\n            value={bio}\r\n            onChange={e => onChange(e)}\r\n          />\r\n          <small className='form-text'>Tell us a little about yourself</small>\r\n        </div>\r\n\r\n        <div className='my-2'>\r\n          <button\r\n            type='button'\r\n            className='btn btn-light'\r\n            onClick={() => toggleSocialInputs(!displaySocialInputs)}\r\n          >\r\n            Add Social Network Links\r\n          </button>\r\n          <span>Optional</span>\r\n        </div>\r\n\r\n        {displaySocialInputs && (\r\n          <Fragment>\r\n            <div className='form-group social-input'>\r\n              <i className='fab fa-twitter fa-2x' />\r\n              <input\r\n                type='text'\r\n                placeholder='Twitter URL'\r\n                name='twitter'\r\n                value={twitter}\r\n                onChange={e => onChange(e)}\r\n              />\r\n            </div>\r\n\r\n            <div className='form-group social-input'>\r\n              <i className='fab fa-facebook fa-2x' />\r\n              <input\r\n                type='text'\r\n                placeholder='Facebook URL'\r\n                name='facebook'\r\n                value={facebook}\r\n                onChange={e => onChange(e)}\r\n              />\r\n            </div>\r\n\r\n            <div className='form-group social-input'>\r\n              <i className='fab fa-youtube fa-2x' />\r\n              <input\r\n                type='text'\r\n                placeholder='YouTube URL'\r\n                name='youtube'\r\n                value={youtube}\r\n                onChange={e => onChange(e)}\r\n              />\r\n            </div>\r\n\r\n            <div className='form-group social-input'>\r\n              <i className='fab fa-linkedin fa-2x' />\r\n              <input\r\n                type='text'\r\n                placeholder='Linkedin URL'\r\n                name='linkedin'\r\n                value={linkedin}\r\n                onChange={e => onChange(e)}\r\n              />\r\n            </div>\r\n\r\n            <div className='form-group social-input'>\r\n              <i className='fab fa-instagram fa-2x' />\r\n              <input\r\n                type='text'\r\n                placeholder='Instagram URL'\r\n                name='instagram'\r\n                value={instagram}\r\n                onChange={e => onChange(e)}\r\n              />\r\n            </div>\r\n          </Fragment>\r\n        )}\r\n\r\n        <input type='submit' className='btn btn-primary my-1' />\r\n        <Link className='btn btn-light my-1' to='/dashboard'>\r\n          Go Back\r\n        </Link>\r\n      </form>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nCreateProfile.propTypes = {\r\n  // prfr\r\n  createProfile: PropTypes.func.isRequired\r\n};\r\n\r\nexport default connect(\r\n  null,\r\n  { createProfile }\r\n)(withRouter(CreateProfile));\r\n","// racfp\r\nimport React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst ProfileItem = ({\r\n  profile: {\r\n    user: { _id, name, avatar },\r\n    status,\r\n    company,\r\n    location,\r\n    skills\r\n  }\r\n}) => {\r\n  return (\r\n    <div className='profile bg-light'>\r\n      <img src={avatar} alt='' className='round-img' />\r\n      <div>\r\n        <h2>{name}</h2>\r\n        <p>\r\n          {status} {company && <span> at {company}</span>}\r\n        </p>\r\n        <p className='my-1'>{location && <span>{location}</span>}</p>\r\n        <Link to={`/profile/${_id}`} className='btn btn-primary'>\r\n          View Profile\r\n        </Link>\r\n      </div>\r\n      <ul>\r\n        {skills.slice(0, 4).map((skill, index) => (\r\n          <li key={index} className='text-primary'>\r\n            <i className='fas fa-check' /> {skill}\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nProfileItem.propTypes = {\r\n  profile: PropTypes.object.isRequired\r\n};\r\n\r\nexport default ProfileItem;\r\n","// racpf\r\nimport React, { Fragment, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport Spinner from '../layout/Spinner';\r\nimport ProfileItem from './ProfileItem';\r\nimport { getProfiles } from '../../actions/profile';\r\n\r\nconst Profiles = ({ getProfiles, profile: { profiles, loading } }) => {\r\n  useEffect(() => {\r\n    getProfiles();\r\n  }, [getProfiles]);\r\n\r\n  return (\r\n    <Fragment>\r\n      {loading ? (\r\n        <Spinner />\r\n      ) : (\r\n        <Fragment>\r\n          <h1 className='large text-primary'>Developers</h1>\r\n          <p className='lead'>\r\n            <i className='fab fa-connectdevelop' /> Browse and connect with\r\n            Developers\r\n          </p>\r\n          <div className='profiles'>\r\n            {profiles.length > 0 ? (\r\n              profiles.map(profile => (\r\n                <ProfileItem key={profile._id} profile={profile} />\r\n              ))\r\n            ) : (\r\n              <h4>No profiles found...</h4>\r\n            )}\r\n          </div>\r\n        </Fragment>\r\n      )}\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nProfiles.propTypes = {\r\n  getProfiles: PropTypes.func.isRequired,\r\n  profile: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  profile: state.profile\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { getProfiles }\r\n)(Profiles);\r\n","import React, { Fragment } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Link } from 'react-router-dom';\r\nimport Moment from 'react-moment';\r\nimport { connect } from 'react-redux';\r\nimport { addLike, removeLike, deletePost } from '../../actions/post';\r\n\r\nconst PostItem = ({\r\n  addLike,\r\n  removeLike,\r\n  deletePost,\r\n  auth,\r\n  post: { _id, text, name, avatar, user, likes, comments, date },\r\n  showActions\r\n}) => (\r\n  <div className='post bg-white p-1 my-1'>\r\n    <div>\r\n      <Link to={`/profile/${user}`}>\r\n        <img className='round-img' src={avatar} alt='' />\r\n        <h4>{name}</h4>\r\n      </Link>\r\n    </div>\r\n    <div>\r\n      <p className='my-1'>{text}</p>\r\n      <p className='post-date'>\r\n        Posted <Moment format='YYYY/MM/DD'>{date}</Moment>\r\n      </p>\r\n\r\n      {showActions && (\r\n        <Fragment>\r\n          <button\r\n            onClick={e => addLike(_id)}\r\n            type='button'\r\n            className='btn btn-light'\r\n          >\r\n            <i className='fas fa-thumbs-up' />{' '}\r\n            <span>{likes.length > 0 && <span>{likes.length}</span>}</span>\r\n          </button>\r\n          <button\r\n            onClick={e => removeLike(_id)}\r\n            type='button'\r\n            className='btn btn-light'\r\n          >\r\n            <i className='fas fa-thumbs-down' />\r\n          </button>\r\n          <Link to={`/posts/${_id}`} className='btn btn-primary'>\r\n            Discussion{' '}\r\n            {comments.length > 0 && (\r\n              <span className='comment-count'>{comments.length}</span>\r\n            )}\r\n          </Link>\r\n          {!auth.loading && user === auth.user._id && (\r\n            <button\r\n              onClick={e => deletePost(_id)}\r\n              type='button'\r\n              className='btn btn-danger'\r\n            >\r\n              <i className='fas fa-times' />\r\n            </button>\r\n          )}\r\n        </Fragment>\r\n      )}\r\n    </div>\r\n  </div>\r\n);\r\n\r\nPostItem.defaultProps = {\r\n  showActions: true\r\n};\r\n\r\nPostItem.propTypes = {\r\n  post: PropTypes.object.isRequired,\r\n  auth: PropTypes.object.isRequired,\r\n  addLike: PropTypes.func.isRequired,\r\n  removeLike: PropTypes.func.isRequired,\r\n  deletePost: PropTypes.func.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  auth: state.auth\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { addLike, removeLike, deletePost }\r\n)(PostItem);\r\n","import axios from 'axios';\r\nimport { setAlert } from './alert';\r\nimport {\r\n  GET_POSTS,\r\n  POST_ERROR,\r\n  UPDATE_LIKES,\r\n  DELETE_POST,\r\n  ADD_POST,\r\n  GET_POST,\r\n  ADD_COMMENT,\r\n  REMOVE_COMMENT\r\n} from './types';\r\n\r\n// Get posts\r\nexport const getPosts = () => async dispatch => {\r\n  try {\r\n    const res = await axios.get('/api/posts');\r\n    dispatch({\r\n      type: GET_POSTS,\r\n      payload: res.data\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: POST_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status }\r\n    });\r\n  }\r\n};\r\n\r\n// Add like\r\nexport const addLike = id => async dispatch => {\r\n  try {\r\n    const res = await axios.put(`/api/posts/like/${id}`);\r\n    dispatch({\r\n      type: UPDATE_LIKES,\r\n      payload: { id, likes: res.data }\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: POST_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status }\r\n    });\r\n  }\r\n};\r\n\r\n// Remove like\r\nexport const removeLike = id => async dispatch => {\r\n  try {\r\n    const res = await axios.put(`/api/posts/unlike/${id}`);\r\n    dispatch({\r\n      type: UPDATE_LIKES,\r\n      payload: { id, likes: res.data }\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: POST_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status }\r\n    });\r\n  }\r\n};\r\n\r\n// Delete post\r\nexport const deletePost = id => async dispatch => {\r\n  try {\r\n    await axios.delete(`/api/posts/${id}`);\r\n    dispatch({\r\n      type: DELETE_POST,\r\n      payload: id\r\n    });\r\n\r\n    dispatch(setAlert('Post Removed', 'success'));\r\n  } catch (err) {\r\n    dispatch({\r\n      type: POST_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status }\r\n    });\r\n  }\r\n};\r\n\r\n// Add post\r\nexport const addPost = formData => async dispatch => {\r\n  const config = {\r\n    headers: {\r\n      'Content-Type': 'application/json'\r\n    }\r\n  };\r\n\r\n  try {\r\n    const res = await axios.post(`/api/posts/`, formData, config);\r\n    dispatch({\r\n      type: ADD_POST,\r\n      payload: res.data\r\n    });\r\n\r\n    dispatch(setAlert('Post Created', 'success'));\r\n  } catch (err) {\r\n    dispatch({\r\n      type: POST_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status }\r\n    });\r\n  }\r\n};\r\n\r\n// Get post\r\nexport const getPost = id => async dispatch => {\r\n  try {\r\n    const res = await axios.get(`/api/posts/${id}`);\r\n    dispatch({\r\n      type: GET_POST,\r\n      payload: res.data\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: POST_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status }\r\n    });\r\n  }\r\n};\r\n\r\n// Add comment\r\nexport const addComment = (postId, formData) => async dispatch => {\r\n  const config = {\r\n    headers: {\r\n      'Content-Type': 'application/json'\r\n    }\r\n  };\r\n\r\n  try {\r\n    const res = await axios.post(\r\n      `/api/posts/comment/${postId}`,\r\n      formData,\r\n      config\r\n    );\r\n    dispatch({\r\n      type: ADD_COMMENT,\r\n      payload: res.data\r\n    });\r\n\r\n    dispatch(setAlert('Comment added', 'success'));\r\n  } catch (err) {\r\n    dispatch({\r\n      type: POST_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status }\r\n    });\r\n  }\r\n};\r\n\r\n// Delete comment\r\nexport const deleteComment = (postId, commentId) => async dispatch => {\r\n  try {\r\n    const res = await axios.delete(`/api/posts/comment/${postId}/${commentId}`);\r\n    dispatch({\r\n      type: REMOVE_COMMENT,\r\n      // send the comment id in teh payload\r\n      payload: commentId\r\n    });\r\n\r\n    dispatch(setAlert('Comment removed', 'success'));\r\n  } catch (err) {\r\n    dispatch({\r\n      type: POST_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status }\r\n    });\r\n  }\r\n};\r\n","// racfp\r\nimport React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { addPost } from '../../actions/post';\r\n\r\nconst PostForm = ({ addPost }) => {\r\n  const [text, setText] = useState('');\r\n\r\n  return (\r\n    <div className='post-form'>\r\n      <div className='bg-primary p'>\r\n        <h3>Say something</h3>\r\n      </div>\r\n      <form\r\n        className='form my-1'\r\n        onSubmit={e => {\r\n          e.preventDefault();\r\n          addPost({ text });\r\n          setText('');\r\n        }}\r\n      >\r\n        <textarea\r\n          name='text'\r\n          cols='30'\r\n          rows='5'\r\n          placeholder='Comment on this post'\r\n          required\r\n          value={text}\r\n          onChange={e => setText(e.target.value)}\r\n        />\r\n        <input type='submit' className='btn btn-dark my-1' value='Submit' />\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nPostForm.propTypes = {\r\n  addPost: PropTypes.func.isRequired\r\n};\r\n\r\nexport default connect(\r\n  null,\r\n  { addPost }\r\n)(PostForm);\r\n","import React, { Fragment, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { getPosts } from '../../actions/post';\r\nimport PostItem from './PostItem';\r\nimport Spinner from '../layout/Spinner';\r\nimport PostForm from './PostForm';\r\n\r\nconst Posts = ({ getPosts, post: { posts, loading } }) => {\r\n  useEffect(() => {\r\n    getPosts();\r\n  }, [getPosts]);\r\n\r\n  return loading ? (\r\n    <Spinner />\r\n  ) : (\r\n    <Fragment>\r\n      <h1 className='large text-primary'>\r\n        <p className='lead'>\r\n          <i className='fas fa-user' /> Welcome to the community\r\n        </p>\r\n        <PostForm />\r\n\r\n        {posts.map(post => (\r\n          <PostItem key={post._id} post={post} />\r\n        ))}\r\n      </h1>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nPosts.propTypes = {\r\n  getPosts: PropTypes.func.isRequired,\r\n  post: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  post: state.post\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { getPosts }\r\n)(Posts);\r\n","// racfp\r\nimport React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { addComment } from '../../actions/post';\r\n\r\nconst CommentForm = ({ postId, addComment }) => {\r\n  const [text, setText] = useState('');\r\n\r\n  return (\r\n    <div className='post-form'>\r\n      <div className='bg-primary p'>\r\n        <h3>Leave A Comment</h3>\r\n      </div>\r\n      <form\r\n        className='form my-1'\r\n        onSubmit={e => {\r\n          e.preventDefault();\r\n          addComment(postId, { text });\r\n          setText('');\r\n        }}\r\n      >\r\n        <textarea\r\n          name='text'\r\n          cols='30'\r\n          rows='5'\r\n          placeholder='Comment on this post'\r\n          required\r\n          value={text}\r\n          onChange={e => setText(e.target.value)}\r\n        />\r\n        <input type='submit' className='btn btn-dark my-1' value='Submit' />\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nCommentForm.propTypes = {\r\n  addComment: PropTypes.func.isRequired\r\n};\r\n\r\nexport default connect(\r\n  null,\r\n  { addComment }\r\n)(CommentForm);\r\n","import React, { Fragment } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport Moment from 'react-moment';\r\nimport { deleteComment } from '../../actions/post';\r\n\r\nconst CommentItem = ({\r\n  postId,\r\n  comment: { _id, text, name, avatar, user, date },\r\n  auth,\r\n  deleteComment\r\n}) => {\r\n  return (\r\n    <div className='post bg-white p-1 my-1'>\r\n      <div>\r\n        <Link to={`/profile/${user}`}>\r\n          <img className='round-img' src={avatar} alt='' />\r\n          <h4>{name}</h4>\r\n        </Link>\r\n      </div>\r\n      <div>\r\n        <p className='my-1'>{text}</p>\r\n        <p className='post-date'>\r\n          Posted on <Moment fromat='YYYY/MM/DD'>{date}</Moment>\r\n        </p>\r\n        {!auth.loading && user === auth.user._id && (\r\n          <button\r\n            onClick={e => deleteComment(postId, _id)}\r\n            type='button'\r\n            className='btn btn-danger'\r\n          >\r\n            <i className='fas fa-times' />\r\n          </button>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nCommentItem.propTypes = {\r\n  postId: PropTypes.string.isRequired,\r\n  comment: PropTypes.object.isRequired,\r\n  auth: PropTypes.object.isRequired,\r\n  deleteComment: PropTypes.func.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  auth: state.auth\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { deleteComment }\r\n)(CommentItem);\r\n","// racfp\r\nimport React, { Fragment, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport Spinner from '../layout/Spinner';\r\nimport PostItem from '../posts/PostItem';\r\nimport { getPost } from '../../actions/post';\r\nimport CommentForm from './CommentForm';\r\nimport CommentItem from './CommentItem';\r\n\r\nconst Post = ({ getPost, post: { post, loading }, match }) => {\r\n  useEffect(() => {\r\n    getPost(match.params.id);\r\n  }, [getPost]);\r\n\r\n  return loading || post === null ? (\r\n    <Spinner />\r\n  ) : (\r\n    <Fragment>\r\n      <Link to={'/posts'} className='btn'>\r\n        Back to Posts\r\n      </Link>\r\n      <PostItem post={post} showActions={false} />\r\n      <CommentForm postId={post._id} />\r\n      <div className='comments'>\r\n        {post.comments.map(comment => (\r\n          <CommentItem key={comment._id} comment={comment} postId={post._id} />\r\n        ))}\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nPost.propTypes = {\r\n  getPost: PropTypes.func.isRequired,\r\n  post: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  post: state.post\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { getPost }\r\n)(Post);\r\n","import { SET_ALERT, REMOVE_ALERT } from '../actions/types';\r\n\r\nconst initialState = [];\r\n\r\nexport default function(state = initialState, action) {\r\n  const { type, payload } = action;\r\n\r\n  switch (type) {\r\n    case SET_ALERT:\r\n      return [...state, payload];\r\n    case REMOVE_ALERT:\r\n      return state.filter(alert => alert.id !== payload);\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import {\r\n  REGISTER_SUCCESS,\r\n  REGISTER_FAIL,\r\n  USER_LOADED,\r\n  AUTH_ERROR,\r\n  LOGIN_SUCCESS,\r\n  LOGIN_FAIL,\r\n  LOGOUT,\r\n  ACCOUNT_DELETED\r\n} from '../actions/types';\r\n\r\nconst initialState = {\r\n  token: localStorage.getItem('token'),\r\n  isAuthenticated: null,\r\n  loading: true,\r\n  user: null\r\n};\r\n\r\nexport default function(state = initialState, action) {\r\n  const { type, payload } = action;\r\n  switch (type) {\r\n    case USER_LOADED:\r\n      return {\r\n        ...state,\r\n        isAuthenticated: true,\r\n        loading: false,\r\n        user: payload\r\n      };\r\n    case REGISTER_SUCCESS:\r\n    case LOGIN_SUCCESS:\r\n      localStorage.setItem('token', payload.token);\r\n      return {\r\n        ...state,\r\n        ...payload,\r\n        isAuthenticated: true,\r\n        loading: false\r\n      };\r\n    case REGISTER_FAIL:\r\n    case AUTH_ERROR:\r\n    case LOGIN_FAIL:\r\n    case LOGOUT:\r\n    case ACCOUNT_DELETED:\r\n      localStorage.removeItem('token');\r\n      return {\r\n        ...state,\r\n        token: null,\r\n        isAuthenticated: false,\r\n        loading: false\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import {\r\n  GET_PROFILE,\r\n  PROFILE_ERROR,\r\n  CLEAR_PROFILE,\r\n  UPDATE_PROFILE,\r\n  GET_PROFILES,\r\n  GET_REPOS\r\n} from '../actions/types';\r\n\r\nconst initialState = {\r\n  profile: null,\r\n  profiles: [],\r\n  repos: [],\r\n  loading: true,\r\n  error: {}\r\n};\r\n\r\nexport default function(state = initialState, action) {\r\n  const { type, payload } = action;\r\n\r\n  switch (type) {\r\n    case GET_PROFILE:\r\n    case UPDATE_PROFILE:\r\n      return {\r\n        ...state,\r\n        profile: payload,\r\n        loading: false\r\n      };\r\n    case GET_PROFILES:\r\n      return {\r\n        ...state,\r\n        profiles: payload,\r\n        loading: false\r\n      };\r\n    case PROFILE_ERROR:\r\n      return {\r\n        ...state,\r\n        error: payload,\r\n        loading: false\r\n      };\r\n    case CLEAR_PROFILE:\r\n      return {\r\n        ...state,\r\n        profile: null,\r\n        repos: [],\r\n        loading: false\r\n      };\r\n    case GET_REPOS:\r\n      return {\r\n        ...state,\r\n        repos: payload,\r\n        loading: false\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import {\r\n  GET_POSTS,\r\n  POST_ERROR,\r\n  UPDATE_LIKES,\r\n  DELETE_POST,\r\n  ADD_POST,\r\n  GET_POST,\r\n  ADD_COMMENT,\r\n  REMOVE_COMMENT\r\n} from '../actions/types';\r\n\r\nconst initialState = {\r\n  posts: [],\r\n  post: null,\r\n  loading: true,\r\n  error: {}\r\n};\r\n\r\nexport default function(state = initialState, action) {\r\n  const { type, payload } = action;\r\n\r\n  switch (type) {\r\n    case GET_POSTS:\r\n      return {\r\n        ...state,\r\n        posts: payload,\r\n        loading: false\r\n      };\r\n    case GET_POST:\r\n      return {\r\n        ...state,\r\n        post: payload,\r\n        loading: false\r\n      };\r\n    case ADD_POST:\r\n      return {\r\n        ...state,\r\n        posts: [payload, ...state.posts],\r\n        loading: false\r\n      };\r\n    case DELETE_POST:\r\n      return {\r\n        ...state,\r\n        posts: state.posts.filter(post => post._id !== payload),\r\n        loading: false\r\n      };\r\n    case POST_ERROR:\r\n      return {\r\n        ...state,\r\n        error: payload,\r\n        loading: false\r\n      };\r\n    case UPDATE_LIKES:\r\n      return {\r\n        ...state,\r\n        posts: state.posts.map(post =>\r\n          post._id === payload.id ? { ...post, likes: payload.likes } : post\r\n        ),\r\n        loading: false\r\n      };\r\n    case ADD_COMMENT:\r\n      return {\r\n        ...state,\r\n        post: { ...state.post, comments: payload },\r\n        loading: false\r\n      };\r\n    case REMOVE_COMMENT:\r\n      return {\r\n        ...state,\r\n        post: {\r\n          ...state.post,\r\n          // gets the comment id in the payload from the action\r\n          comments: state.post.comments.filter(\r\n            // bring all the comments exept the one with that id\r\n            comment => comment._id !== payload\r\n          )\r\n        },\r\n        loading: false\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { combineReducers } from 'redux';\r\nimport alert from './alert';\r\nimport auth from './auth';\r\nimport profile from './profile';\r\nimport post from './post';\r\n\r\nexport default combineReducers({\r\n  alert,\r\n  auth,\r\n  profile,\r\n  post\r\n});\r\n","import { createStore, applyMiddleware } from 'redux';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport thunk from 'redux-thunk';\r\nimport rootReducer from './reducers';\r\n\r\nconst initialState = {};\r\n\r\nconst middleware = [thunk];\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  initialState,\r\n  composeWithDevTools(applyMiddleware(...middleware))\r\n);\r\n\r\nexport default store;\r\n","import React, { Fragment, useEffect } from 'react';\nimport './App.css';\nimport Navbar from './components/layout/Navbar';\nimport Landing from './components/layout/Landing';\nimport Register from './components/auth/Register';\nimport Login from './components/auth/Login';\nimport Alert from './components/layout/Alert';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\n\nimport Dashboard from './components/dashboard/Dashboard';\nimport PrivateRoute from './components/routing/PrivateRoute';\nimport EditProfile from './components/profile-form/EditProfile';\nimport AddExperience from './components/profile-form/AddExperience';\nimport Profile from './components/profile/Profile';\nimport AddEducation from './components/profile-form/AddEducation';\nimport CreateProfile from './components/profile-form/CreateProfile';\nimport Profiles from './components/profiles/Profiles';\nimport Posts from './components/posts/Posts';\nimport Post from './components/post/Post';\n\n// Redux\nimport { Provider } from 'react-redux';\nimport store from './store';\nimport { loadUser } from './actions/auth';\nimport setAuthToken from './utils/setAuthToken';\n\nif (localStorage.token) {\n  setAuthToken(localStorage.token);\n}\n\nconst App = () => {\n  // when the state updates 'useEffect' will keep running and be in a constant loop,\n  // '[]' means it will only run once\n  useEffect(() => {\n    store.dispatch(loadUser());\n  }, []);\n\n  return (\n    <Provider store={store}>\n      <Router>\n        <Fragment>\n          <Navbar />\n          <Route exact path='/' component={Landing} />\n          <section className='container'>\n            <Alert />\n            <Switch>\n              <Route exact path='/register' component={Register} />\n              <Route exact path='/login' component={Login} />\n              <Route exact path='/profiles' component={Profiles} />\n              <Route exact path='/profile/:id' component={Profile} />\n              <PrivateRoute exact path='/dashboard' component={Dashboard} />\n              <PrivateRoute\n                exact\n                path='/create-profile'\n                component={CreateProfile}\n              />\n              <PrivateRoute\n                exact\n                path='/edit-profile'\n                component={EditProfile}\n              />\n              <PrivateRoute\n                exact\n                path='/add-experience'\n                component={AddExperience}\n              />\n              <PrivateRoute\n                exact\n                path='/add-education'\n                component={AddEducation}\n              />\n              <PrivateRoute exact path='/posts' component={Posts} />\n              <PrivateRoute exact path='/posts/:id' component={Post} />\n            </Switch>\n          </section>\n        </Fragment>\n      </Router>\n    </Provider>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}